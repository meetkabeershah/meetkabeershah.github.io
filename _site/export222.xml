test
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
    <title>Blog x</title>
    <link>http://xameeramir.github.io</link>
    <description>direction obsessed</description>
    <pubDate/>
    <language/>
    <wp:wxr_version>1.2</wp:wxr_version>
    <wp:base_site_url>http://xameeramir.github.io</wp:base_site_url>
    <wp:base_blog_url>http://xameeramir.github.io</wp:base_blog_url>
    <wp:author>
      <wp:author_login></wp:author_login>
      <wp:author_email></wp:author_email>
      <wp:author_display_name><![CDATA[]]></wp:author_display_name>
      <wp:author_first_name><![CDATA[]]></wp:author_first_name>
      <wp:author_last_name><![CDATA[]]></wp:author_last_name>
    </wp:author>
    <generator>http://xameeramir.github.io</generator>
    <image>
    	<url>http://xameeramir.github.io/images/site-logo.png</url>
    	<title>Blog x</title>
      <link>http://xameeramir.github.io</link>
    </image>

    
      <item>
        <title><![CDATA[Tools for 360 development]]></title>
        <link>http://xameeramir.github.io/360-tools/</link>
        <pubDate>2017-11-28T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://pediaa.com/wp-content/uploads/2014/11/What-is-the-Difference-Between-Tools-and-Equipment.jpg" alt="tools" /></p>

<p><a href="http://pediaa.com/what-is-the-difference-between-tools-and-equipment/">courtesy</a></p>

<p>This post has no scientific reasons about which kind of tools a professional needs to use. The use of these tools spans from development to operations to maintainance to marketing to support and to PR and so on. Not everything may be needed by a <strong>[your favourite technology]</strong> developer. The tools may be relevant to Internet startups. I use (or used) them for getting my work done.</p>

<p><a href="http://svencreations.com/stomp/generator/">Stomp</a> - Turn 100 words into a cinematic intro</p>

<p><a href="https://trello.com/">Trello</a> - to track project(s)</p>

<p><a href="https://www.visualstudio.com/">Visual studio</a> - seems to be world’s most impressive IDE</p>

<p><a href="https://www.getpostman.com/">Postman</a> - the super API test tool</p>

<p><a href="http://mysqlworkbench.org/">Workbench</a> and <a href="http://microsoft.com/sqlserver">SSMS</a> - Database studios</p>

<p><a href="https://www.red-gate.com/products/sql-development/sql-search/">Sql search</a> - to search anything in entire SQL server</p>

<p><a href="www.skype.com">Skype</a> - for free chat</p>

<p><a href="www.ubuntu.com/">Ubuntu</a> - less cost linux server</p>

<p><a href="http://www.mono-project.com/">Mono</a> - cross platform .NET for removing windows licensing costs</p>

<p><a href="https://news.ycombinator.com">HackerNews</a> - lot of lovely information</p>

<p><a href="https://www.google.co.in/analytics/">Google analytics</a> - to track the site performance</p>

<p><a href="http://mailchimp.com/">MailChimp</a> - email marketing</p>

<p><a href="https://mailgun.com/">Mail gun</a> - for upto 10k free &amp; automated monthly emails using simple API</p>

<p><a href="https://mail.zoho.com/zm/">Zoho Email</a> - for business emails</p>

<p><a href="https://www.addthis.com">AddThis</a> - for socializing content</p>

<p><a href="http://www.alexa.com/">Alexa</a> - to check global site ranking</p>

<p><a href="https://getpocket.com/">Pocket</a> - to read later</p>

<p><a href="https://www.dropbox.com/">Dropbox</a> - for file backup</p>

<p><a href="https://cloud.google.com/compute/">Google Compute engine</a> - for clouding</p>

<p><a href="http://filezilla-project.org/">FileZilla</a> - for FTP-ing</p>

<p><a href="https://www.godaddy.com">GoDaddy</a> - for DNS and SSL certificate management</p>

<p><a href="http://getfirebug.com/">Firebug</a> - specially for sniffing http requests</p>

<p><a href="https://www.google.com/chrome/">Chrome</a> - all in one web browser with the best <a href="https://developer.chrome.com/devtools/docs/console">developer console</a></p>

<p><a href="http://jsfiddle.net/user/xameeramir">jsFiddle</a> - to test CSS, HTML and javascript elements</p>

<p><a href="https://en.wikipedia.org/wiki/Git_(software)">Git</a>  - for code control, while <a href="https:github.com/">Github</a> is horribly expensive, <a href="https://bitbucket.org/">BitBucket</a> is better for startups</p>

<p><a href="https://yslow.org/">YSlow?</a> - for website health tests</p>

<p><a href="https://atom.io/">Atom</a> - a hackable editor</p>

<p><a href="http://www.httrack.com/">HTTrack website Copier</a> - to download entire web based documentations</p>

<p><a href="http://stackoverflow.com/questions/ask">Stackoverflow</a> - technical knowledge collaboration</p>

<p><a href="https://www.themuse.com/">The muse</a> - for executive education</p>

<p><a href="https://developers.google.com/speed/libraries/?hl=en">CDN</a> - for offloading our own servers</p>

<p><a href="http://fortawesome.github.io/Font-Awesome/">Font awesome</a> - for free and <a href="http://www.bootstrapcdn.com/#fontawesome_tab">fast</a> fonts</p>

<p><a href="http://getbootstrap.com/">Bootstrap</a> - mature UI infrastructure</p>

<p><a href="http://sass-lang.com/">SASS</a> - mature CSS pre-processor</p>

<p><a href="http://scout-app.io/">Scout App</a> - mature SASS pre-processing tool</p>

<p><a href="http://ionicframework.com/">Ionic</a> - hybrid apps development framework</p>

<p><a href="https://angularjs.org/">AngularJS</a> - asynchronous javascript framework</p>

<p><a href="http://vswebessentials.com/features">Web Essentials</a> - for so many web development features</p>

<p><a href="http://www.producthunt.com/">Product hunt</a>, <a href="https://angel.co">AngelList</a> and <a href="http://techcrunch.com/">Techcrunch</a> - for latest startups</p>

<p><a href="https://jekyllrb.com/">Jekyll</a> and <a href="https://pages.github.com/">Github pages</a> - for static pages hosting</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/360-tools</wp:post_id>
        <wp:post_date>2017-11-28T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-11-28T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[How to submit Facebook Messenger App for Review]]></title>
        <link>http://xameeramir.github.io/How-to-submit-Facebook-Messenger-App-for-Review/</link>
        <pubDate>2017-10-20T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://picpicsocial.com/wp-content/uploads/2014/05/facebook-login-review.jpg" alt="Facebook app review rejection reasons" /></p>

<p><a href="https://picpicsocial.com/update-to-facebook-app-review/">courtesy</a></p>

<p>To publish a bot on the Facebook the following stuff are required to be ready:</p>

<ul>
  <li><strong>Icon</strong>: You can upload a JPG, GIF or PNG file. The size of the image must be 1024 x 1024 pixels. File size limit 5 MB</li>
  <li><strong>App display name</strong></li>
  <li><strong>Contact Email</strong> – In case if anyone (or Facebook) wants to contact a company</li>
  <li><strong>Category</strong> – the business category for which bot is getting published</li>
  <li><strong>Privacy policy URL</strong></li>
  <li><strong>Terms of Service URL</strong></li>
  <li><strong>Video</strong> - You’ll be prompted to upload a screen-cast of your chat-bot working</li>
  <li><strong>Facebook page</strong></li>
</ul>

<p>Most of the above stuff can be done with common sense and below is the actual review submission.</p>

<p><strong>Add messenger in Products if not already added</strong></p>

<p><a href="https://i.stack.imgur.com/FIjdk.png"><img src="https://i.stack.imgur.com/FIjdk.png" alt="Add messenger in Products" /></a></p>

<p><strong>Add permissions required by the app</strong></p>

<p>Go to the Messenger tab in the App Dashboard. Find the App Review section and select the permissions needed by the app.</p>

<p><a href="https://i.stack.imgur.com/EBgGi.png"><img src="https://i.stack.imgur.com/EBgGi.png" alt="Messenger app permissions" /></a></p>

<p><strong>Edit Notes for Each Submission</strong></p>

<p>After selecting the permissions, one can edit the notes for each submission. Click on <kbd>Edit Notes</kbd> for each permission. Make sure to fill each form and any other missing items before clicking <kbd>Submit for Review</kbd>.</p>

<p><a href="https://i.stack.imgur.com/u1zBd.png"><img src="https://i.stack.imgur.com/u1zBd.png" alt="Edit Notes for Each Submission" /></a></p>

<p>Facebook will need confirmation before submission:</p>

<p><a href="https://i.stack.imgur.com/C9mHF.png"><img src="https://i.stack.imgur.com/C9mHF.png" alt="Facebook submission confirmation" /></a></p>

<p><strong>Submit for Approval</strong></p>

<p>Once you’ve submitted your app, you can view the App Review section to see the status of your approval.</p>

<p><a href="https://i.stack.imgur.com/rm40N.png"><img src="https://i.stack.imgur.com/rm40N.png" alt="Submit and Wait for Approval" /></a></p>

<p><a href="https://i.stack.imgur.com/B95dk.png"><img src="https://i.stack.imgur.com/B95dk.png" alt="Submission received" /></a></p>

<p><strong>Approval</strong></p>

<p>Sometimes, the approval can be partial too:</p>

<p><a href="https://i.stack.imgur.com/PH4o9.png"><img src="https://i.stack.imgur.com/PH4o9.png" alt="Partial Permission granted" /></a></p>

<p>If the app submission is approved/rejected, Facebook sends a notification. Also, the App Review section will show the green ticks to approved permissions, if the permissions are granted.</p>

<p><a href="https://i.stack.imgur.com/HEnPN.png"><img src="https://i.stack.imgur.com/HEnPN.png" alt="Approved permissions" /></a></p>

<p>That’s it.</p>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/How-to-submit-Facebook-Messenger-App-for-Review</wp:post_id>
        <wp:post_date>2017-10-20T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-10-20T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Setting up node app with SSL on a DigitalOcean droplet]]></title>
        <link>http://xameeramir.github.io/Setting-up-node-app-with-SSL-on-a-DigitalOcean-droplet/</link>
        <pubDate>2017-10-11T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://media.licdn.com/mpr/mpr/AAEAAQAAAAAAAAJOAAAAJGMzZjVlNjM4LWI0ZTctNGY2YS1hOWFlLWI2YTRmMzNhN2U3Ng.png" alt="Digital Ocean" /></p>

<p><a href="https://www.linkedin.com/pulse/five-reasons-why-developers-love-digitalocean-janakiram-msv/">courtesy</a></p>

<p>You probably <a href="https://www.google.com/search?q=Setting+up+node+app+with+SSL+on+a+DigitalOcean+droplet">Googled it</a> it and are here!
Okey, no more time waste (for MYSELF in future)…</p>

<p>Let’s see how to setup node app with SSL on a DigitalOcean VPS</p>

<ol>
  <li><a href="https://devcenter.heroku.com/articles/heroku-cli#debian-ubuntu">Install Heroku for it’s versioning feature</a></li>
  <li><a href="https://devcenter.heroku.com/articles/git#deploying-code">Git push the app to Heroku</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-create-your-first-digitalocean-droplet">Setup a drop let</a></li>
  <li><a href="https://confluence.atlassian.com/bitbucketserver/creating-ssh-keys-776639788.html">Generate SSH keys</a></li>
  <li><a href="http://guides.beanstalkapp.com/version-control/git-on-windows.html">Setup git bash for SSH-ing to droplet</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-connect-to-your-droplet-with-ssh">Connect to Droplet using SSH keys</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-ubuntu-16-04">Install node</a></li>
  <li>Confirm node installation using <code class="highlighter-rouge">node -v</code></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-mongodb-on-ubuntu-16-04">Install MongoDB if the app needs to persist data</a></li>
  <li>Confirm if mongodb is running using the command <code class="highlighter-rouge">sudo systemctl status mongodb</code></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-use-pm2-to-setup-a-node-js-production-environment-on-an-ubuntu-vps">Setup and configure pm2 to orchestrate the node app</a></li>
  <li>Confirm pm2 installation using <code class="highlighter-rouge">pm2 -v</code></li>
  <li><a href="https://devcenter.heroku.com/articles/git-clone-heroku-app">Clone to a location in the server</a></li>
  <li><a href="https://docs.npmjs.com/cli/start">Start the node app for first cut testing</a></li>
  <li><a href="http://pm2.keymetrics.io/docs/usage/quick-start/#usage">Start node app as a process</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-ubuntu-16-04">Install nginx</a></li>
  <li>Make sure that the nginx service is running using command <code class="highlighter-rouge">sudo systemctl status nginx</code></li>
  <li><a href="https://ubuntuforums.org/showthread.php?t=1514714">Make sure that UFW is enabled</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-a-node-js-application-for-production-on-ubuntu-16-04#set-up-nginx-as-a-reverse-proxy-server">Setup nginx reverse proxy to the port on which the app is running</a></li>
  <li>When reverse-proxying nginx server, keep <code class="highlighter-rouge">try_files $uri $uri/ =404;</code> inside <code class="highlighter-rouge">location</code> if absolutely necessary inside <code class="highlighter-rouge">/etc/nginx/sites-available/default</code></li>
  <li><a href="https://in.godaddy.com/domains">Purchase a domain</a></li>
  <li><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04">Set up SSL with Let’s Encrypt for the purchased domain</a></li>
  <li>Keep a <a href="https://gist.github.com/xameeramir/a5cb675fb6a6a64098365e89a239541d">backup of default nginx configuration</a> (and all other important stuff) to revert back in case of an <a href="http://www.n1ads.com/data-recovery/pics/raid-server-data-recovery-services.jpg">earthquack</a></li>
</ol>

<p>Notice that we shall use services like <a href="https://devcenter.heroku.com/articles/git">heroku’s git feature</a> instead of the globally famous <a href="https://github.com/">github</a> for version control to keep code closed source.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Setting-up-node-app-with-SSL-on-a-DigitalOcean-droplet</wp:post_id>
        <wp:post_date>2017-10-11T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-10-11T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Study on technical feasibility of WhatsApp bot implementation]]></title>
        <link>http://xameeramir.github.io/Whatsapp-Bot-Implementation-Technical-Feasibility-Study/</link>
        <pubDate>2017-10-09T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://www.whatsapp.com/img/fb-post.jpg" alt="WhatsApp" /></p>

<p><a href="https://web.whatsapp.com/">courtesy</a></p>

<p>There is a secret pilot program which WhatsApp is working on with selected businesses</p>
<ul>
  <li><a href="https://faq.whatsapp.com/general/26000052">https://faq.whatsapp.com/general/26000052</a></li>
</ul>

<p>News coverage:</p>
<ul>
  <li><a href="https://yourstory.com/2017/09/app-fridays-whatsapp-for-business-bookmyshow/">https://yourstory.com/2017/09/app-fridays-whatsapp-for-business-bookmyshow/</a></li>
  <li><a href="https://yourstory.com/2017/09/bookmyshows-product-team-decrypts-how-whatsapp-for-business-works/">https://yourstory.com/2017/09/bookmyshows-product-team-decrypts-how-whatsapp-for-business-works/</a></li>
  <li><a href="http://indianexpress.com/article/technology/social/now-get-bookmyshow-ticket-confirmation-message-on-whatsapp-4844869/">http://indianexpress.com/article/technology/social/now-get-bookmyshow-ticket-confirmation-message-on-whatsapp-4844869/</a></li>
  <li><a href="http://gadgets.ndtv.com/apps/news/whatsapp-business-bookmyshow-pilot-1750740">http://gadgets.ndtv.com/apps/news/whatsapp-business-bookmyshow-pilot-1750740</a></li>
</ul>

<p>For some of my technical experiments, I was trying to figure out how beneficial and feasible it is to implement bots for different chat platforms in terms of market share and so possibilities of adaptation. Especially when you have bankruptly failed twice, it’s important to validate ideas and fail more faster.</p>

<p>Popular chat platforms like <a href="https://developers.facebook.com/docs/messenger-platform/">Messenger</a>, <a href="https://api.slack.com/bot-users">Slack</a>, <a href="https://dev.skype.com/bots">Skype</a> etc. have happily (in the sense officially) provided APIs for bots to interact with except, WhatsApp.</p>

<p>However, since many years, a lot of activities has happened around this - struggle towards automated interaction with WhatsApp platform:</p>

<ol>
  <li>
    <p><a href="https://www.npmjs.com/package/botsapp">Bots App</a>
 Bots App is interesting because it shows that something is really tried and tested.</p>
  </li>
  <li>
    <p><a href="https://github.com/tgalal/yowsup">Yowsup</a>
 A project still actively developed to interact with WhatsApp platform.</p>
  </li>
  <li>
    <p><a href="http://www.yallagenie.com/">Yallagenie</a> 
 Yallagenie claim that there is a demo bot which can be interacted with at <a href="tel://+971561126652">+971 56 112 6652</a></p>
  </li>
  <li>
    <p><a href="https://hubtype.com/articles/how-to-create-a-whatsapp-chatbot.html">Hubtype</a>
 Hubtype is working towards having a bot platform for <strong>WhatsApp for business</strong>.</p>
  </li>
  <li>
    <p><a href="https://medium.com/@AlfredBaudisch/how-a-whatsapp-bot-got-famous-and-evolved-as-the-brazilian-wechat-and-conversational-commerce-e2213262183d">Fred</a>
 Fred’s task was to automate WhatsApp conversations, however since it was not officially supported by WhatsApp - it was shut down.</p>
  </li>
  <li>
    <p><a href="http://www.oyegennie.com/">Oye Gennie</a>
 A bot <a href="https://www.quora.com/How-do-I-build-a-simple-Whatsapp-bot/answer/Ankur-Rastogi?srid=hM8Hz">blocked</a> by WhatsApp.</p>
  </li>
  <li>
    <p><a href="https://faq.whatsapp.com/en/android/28000012">App/Website to WhatsApp</a>
 We can use custom URL schemes and Android intent system to interact with WhatsApp but still NOT WhatsApp API.</p>
  </li>
  <li>
    <p><a href="https://github.com/Mawalu/chat-api-daemon">Chat API daemon</a>
 Probably created by inspecting the API calls in WhatsApp web version. NOT affiliated with WhatsApp.</p>
  </li>
  <li>
    <p><a href="https://devpost.com/software/whatsbot#updates">WhatsBot</a>
 Deactivated WhatsApp bot. Created during a <a href="https://techcrunch.com/2015/12/06/whatsbot-brings-a-virtual-assistant-to-whatsapp/">hackathon</a>.</p>
  </li>
  <li>
    <p><a href="http://mashable.com/2015/03/25/whatsapp-developers-api/#CvXpmtrjROqA">No API claim</a>
 WhatsApp co-founder clearly stated this in a conference that they did not had any plans for APIs for WhatsApp.</p>
  </li>
  <li>
    <p><a href="https://www.botware.com.br/messenger-and-whatsapp-chatbot-development/">Bot Ware</a>
 They probably are expecting WhatsApp to release their APIs for chat bot platforms.</p>
  </li>
  <li>
    <p><a href="http://vixi.io/">Vixi</a>
 They seems to be talking about how some platform which probably would work for WhatsApp. There is no clarity as such.</p>
  </li>
  <li>
    <p><a href="https://market.mashape.com/datayuge/whatsapp">Unofficial API</a>
 This API can shut off any time.</p>
  </li>
</ol>

<p>And the number goes on…</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Whatsapp-Bot-Implementation-Technical-Feasibility-Study</wp:post_id>
        <wp:post_date>2017-10-09T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-10-09T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Angular 4 by examples]]></title>
        <link>http://xameeramir.github.io/Angular-4-by-examples/</link>
        <pubDate>2017-10-07T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://terumi.me/blogs/meandev/Plunker-and-AngularJS.png" alt="Plunkr + Angular" /></p>

<p><a href="http://mean.ghost.io/sandbox-eval-plunker-and-angularjs/">courtesy</a></p>

<p>THIS POST IS WORK IN PROGRESS</p>

<p>The best way to learn programming is to see code in action:</p>

<iframe style="width: 100%; height: 600px" src="http://embed.plnkr.co/p9vMvlzEwUOOlcP2FsUG" frameborder="0" allowfullscren="allowfullscren"></iframe>

<p>I have kept the following notes for future reference:</p>

<p>Angular CLI helps development to debugging, testing to deploying the Angular apps.</p>

<p>Here is the terminology:</p>

<p><code class="highlighter-rouge">angular-cli</code> - refers to Angular 2</p>

<p><code class="highlighter-rouge">@angular/cli</code> - refers to Angular 4</p>

<p>To install  <code class="highlighter-rouge">npm install -g @angular/cli</code></p>

<p>The underlying language used is <code class="highlighter-rouge">typescript</code> which is translated to javascript using <code class="highlighter-rouge">babel</code>.</p>

<p>The task manager (like <code class="highlighter-rouge">gulp</code>, <code class="highlighter-rouge">grunt</code>) used by Angular CLI is <code class="highlighter-rouge">webpack</code>.</p>

<p>Old apps were page centric, modern apps are component based.</p>

<h1 id="4-pillars-of-angular-4">4 pillars of Angular 4</h1>

<ol>
  <li>Component - encapsulates the template (html), data (variables) but not source of data and the behaviour (functions) of a view.</li>
  <li>Directives - bridges the gap between backend and front end. Used for DOM manipulation.</li>
  <li>Routers - takes care of navigation between components.</li>
  <li>Services - reusable tags primarily used for manipulating DOM elements</li>
</ol>

<h1 id="adding-a-component">Adding a component</h1>

<p>create a <code class="highlighter-rouge">mycomp.component.ts</code> file</p>

<pre><code class="typecript">
import {Component} from '@angular/core'

@Component({
selector:'my-component',
template:'welcome to my custom component'
})

export class MyComponent{
    
}
</code></pre>

<p>and add component reference to <code class="highlighter-rouge">app.module.ts</code> in <code class="highlighter-rouge">declarations</code> parameter of <code class="highlighter-rouge">@NgModule</code></p>

<pre><code class="typecript">
import { MyComponent } from './mycomp.component';

@NgModule({
  declarations: [
    AppComponent, MyComponent
  ],
  imports: [
    BrowserModule
  ],
  providers: [],
  bootstrap: [AppComponent]
})
</code></pre>

<h1 id="adding-a-template-file-to-a-component">Adding a template file to a component</h1>

<p>Create a file <code class="highlighter-rouge">footer.component.html</code> and replace the <code class="highlighter-rouge">template</code> key in <code class="highlighter-rouge">@Component</code> of a component <code class="highlighter-rouge">templateUrl:'./footer.component.html'</code>.</p>

<h1 id="one-way-binding">One way binding</h1>

<p>Add properties to component class:</p>

<pre><code class="typecript">
export class FooterComponent {

    title = "welcome to footer component"

    courses = ['Angular', 'React', 'jQuery']

}
</code></pre>

<p>And bind them like this:</p>

<pre><code class="typecript">
<ul>
    &lt;li *ngFor="let course of courses"&gt;
        
    &lt;/li&gt;
</ul>
</code></pre>

<h1 id="adding-a-service">Adding a service</h1>

<p>Add a file <code class="highlighter-rouge">course.service.ts</code></p>

<pre><code class="typecript">
import { Injectable } from '@angular/core'

@Injectable()

export class CourseService {

    getCourses() {
        return ['Angular', 'React', 'jQuery'];
    }
}
</code></pre>

<p>Add the reference inside <code class="highlighter-rouge">app.module.ts</code>’s <code class="highlighter-rouge">@NgModule</code></p>

<p><code class="highlighter-rouge">providers: [CourseService]</code></p>

<p>Inject it in a component through it’s constructor:</p>

<pre><code class="typecript">
    constructor(cs: CourseService) {
        this.courses = cs.getCourses();
    }
</code></pre>

<h1 id="create-a-component-from-cli">Create a component from CLI</h1>

<p>Fire the command <code class="highlighter-rouge">ng g c newComponent</code>.</p>

<p>There are 5 types of binding are supported</p>

<ol>
  <li>Property binding <code class="highlighter-rouge">[]</code> - bind the ts component property with html template property</li>
  <li>Event binding <code class="highlighter-rouge">()</code> - binding the html template event to ts component</li>
  <li>Two way data binding <code class="highlighter-rouge">[()]</code> - for component to template and vice versa data flow</li>
  <li>Class binding - e.g.: [class.active]. Is used to add/remove a CSS class</li>
  <li>Style binding - used to set the CSS style rules</li>
</ol>

<h1 id="property-binding">Property binding</h1>

<p>Add a property to class <code class="highlighter-rouge">profilePic = "http://lorempixel.com/400/200"</code></p>

<p>Use the property in the component <code class="highlighter-rouge">&lt;img [src]=profilePic /&gt;</code></p>

<h1 id="add-bootstrap-to-angular-app">Add Bootstrap to Angular app</h1>

<p>As of this writing the most stable version of Bootstrap is 3.3. Hence, head over to http://getbootstrap.com/docs/3.3/getting-started/#download and et CDN link under Bootstrap CDN somewhat like this:</p>

<p><code class="highlighter-rouge">&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous"&gt;</code></p>

<p>Add this to <code class="highlighter-rouge">index.html</code></p>

<h1 id="use-event-binding">Use event binding</h1>

<p>Add a button like this:</p>

<p><code class="highlighter-rouge">&lt;button class="btn btn-danger" (click)="clickHandler($event)"&gt;click me&lt;/button&gt;</code></p>

<p>And it’s corresponding event handler in the component:</p>

<pre><code class="typecript">
    clickHandler($event) {
        console.log($event);
    }
</code></pre>

<h1 id="using-2-way-data-binging">Using 2 way data binging</h1>

<p><code class="highlighter-rouge">&lt;input type="text" [(ngModel)]="currentCity" /&gt; </code></p>

<p>This is similar to</p>

<p><code class="highlighter-rouge">&lt;input type="text" [value]="currentCity" (input)="currentCity=$event.target.value" /&gt;</code></p>

<h1 id="class-binding">Class binding</h1>

<p>With a property isActive in the component, this</p>

<p><code class="highlighter-rouge">&lt;button class="btn btn-danger" [class.active]="isActive" &gt;automatic active - click me&lt;/button&gt;</code></p>

<p>is equal to</p>

<p><code class="highlighter-rouge">&lt;button class="btn btn-danger active" &gt;manually active - click me&lt;/button&gt;</code></p>

<h1 id="style-binding">Style binding</h1>

<p>We can set the style properties of an element using style properties</p>

<p><code class="highlighter-rouge">&lt;button class="btn btn-danger" [style.backgroundColor]="isActive?'green':'red'" &gt;click me&lt;/button&gt;</code></p>

<h1 id="inputs">Inputs</h1>

<p>Set a input property in the child component</p>

<pre><code class="typecript">
@Component({
    selector: 'header-component',
    template: 'welcome to header component ',
    inputs: ['dataFromParentComponent']
})

export class HeaderComponent {
    
    dataFromParentComponent = ""; //or @Input dataFromParentComponent = "";

}
</code></pre>

<p>Notice that there is no value assigned to <code class="highlighter-rouge">dataFromParentComponent</code>.</p>

<p>In the parent component, set the value of this input with it’s own property:</p>

<pre><code class="typecript">
@Component({
    selector: 'my-component',
    template: `&lt;header-component [dataFromParentComponent]="myComponentData" &gt;&lt;/header-component&gt;`
})

export class MyComponent {

    myComponentData = "Parent data"

}
</code></pre>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Angular-4-by-examples</wp:post_id>
        <wp:post_date>2017-10-07T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-10-07T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Facebook API - The URL couldn't be validated. Callback verification failed with the following errors]]></title>
        <link>http://xameeramir.github.io/facebook-callback-verification-failed-with-the-following-errors/</link>
        <pubDate>2017-09-30T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://images.kualo.com/mailmachine/wufoowebhook.png" alt="Webhooks" /></p>

<p><a href="https://my.kualo.com/uk/knowledgebasekualo.php?kbcat=0&amp;article=120">courtesy</a></p>

<p>Was trying to <a href="https://developers.facebook.com/docs/messenger-platform/getting-started/app-setup/#webhook_setup">setup FB messenger webhook</a> with a strong verify token. Somewhat like this: <code class="highlighter-rouge">o\/ERviEE\/vt0|&lt;E|\|</code></p>

<p><img src="https://i.stack.imgur.com/RBumW.png" alt="set token" /></p>

<p>The same is been verified in the code:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>req.query['hub.verify_token'] === 'o\/ERviEE\/vt0|&lt;E|\|'
</code></pre>
</div>

<p>However, the value received from FB is: <code class="highlighter-rouge">o\\/ERviEE\\/vt0|&lt;E|\\|</code></p>

<p><img src="https://i.stack.imgur.com/MKtwP.png" alt="get token" /></p>

<p><strong>This is strange</strong>. There seems to be no document reference as such which talks about how Facebook escapes special characters for verify tokens or alike. Not sure if this happens for other entities as well.</p>

<p>Conclusion: need to be a little bit cautious when using special characters for verify tokens.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/facebook-callback-verification-failed-with-the-following-errors</wp:post_id>
        <wp:post_date>2017-09-30T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-09-30T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Creating Angular 2/4 Application From Scratch Using Angular CLI]]></title>
        <link>http://xameeramir.github.io/Creating-Angular-2-4-Application-From-Scratch-Using-Angular-CLI/</link>
        <pubDate>2017-09-08T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://aymen.co/wp-content/uploads/2017/01/angular-cli.jpg" alt="Angular CLI" /></p>

<p><a href="https://aymen.co/javascript/angular-cli/">Courtesy</a></p>

<p><strong>Installing Angular Dependencies</strong></p>
<ul>
  <li>Install a stable version of <a href="https://nodejs.org/">Node</a> (if not already installed) and verify the installation using <code class="highlighter-rouge">node -v</code></li>
  <li>Install <a href="http://www.typescriptlang.org/">TypeScript</a> using <a href="http://www.typescriptlang.org/index.html#download-links">command <code class="highlighter-rouge">npm install -g typescript</code></a></li>
  <li>Download and install <a href="https://cli.angular.io/">Angular CLI</a> using command <code class="highlighter-rouge">npm install -g @angular/cli</code></li>
</ul>

<p><code class="highlighter-rouge">Angular</code> is a component oriented framework. Many components needs to be created to make the whole application. A component is a group of <a href="//xameeramir.github.io/Custom-Elements-Shadow-DOM-Templates-in-HTML-by-Examples/">custom elements, <code class="highlighter-rouge">HTML</code> elements, <code class="highlighter-rouge">ShadowDOM</code> &amp; <code class="highlighter-rouge">HTML</code> imports.</a></p>

<p><strong>Creating the Angular 4 app using Angular CLI</strong></p>

<p>To create a fresh new Angular 4 app, use command <code class="highlighter-rouge">ng new newAppName</code>. This command takes some time to execute.</p>

<p><code class="highlighter-rouge">package.json</code> - takes care of the development and app dependencies / packages / commands to execute</p>

<p><code class="highlighter-rouge">src\main.ts</code> - takes care of the scaffolding the entire</p>

<p><code class="highlighter-rouge">src\app\app.module.ts</code> - any newly created module has to added to the <code class="highlighter-rouge">declarations</code> and services has to be provided to the <code class="highlighter-rouge">providers</code> key parameter  of the function <code class="highlighter-rouge">@NgModule</code> to make them accessible across the entire application</p>

<p><strong>Run the Angular 4 app using Angular CLI</strong></p>

<p>To run the freshly created app using CLI, use command <code class="highlighter-rouge">ng serve</code> which will run the app on <a href="http://localhost:4200/">http://localhost:4200/</a>.</p>

<p><strong>Add a component to the Angular 4 app using Angular CLI</strong></p>

<p>To add a new Angular 4 component to the app, use command <code class="highlighter-rouge">ng g component componentName</code>. After execution of this command, Angular CLI adds a folder <code class="highlighter-rouge">component-name</code> under <code class="highlighter-rouge">src\app</code>. Also, the references of the same is added to <code class="highlighter-rouge">src\app\app.module.ts</code> file automatically.</p>

<p>A component shall have a <code class="highlighter-rouge">@Component</code> decorator function followed by a <code class="highlighter-rouge">class</code> which needs to be <code class="highlighter-rouge">export</code>ed. The <code class="highlighter-rouge">@Component</code> decorator function accepts meta data.</p>

<p><strong>Add a component to specific folder of the Angular 4 app using Angular CLI</strong></p>

<p>To add a new component to a specific folder use the command <code class="highlighter-rouge">ng g component folderName/componentName</code></p>

<p><strong>Add a service to the Angular 4 app using Angular CLI</strong></p>

<p>An Angular 2 service is simply a javascript function along with it’s associated properties and methods, that can be included (via dependency injection) into Angular 2 components.</p>

<p>To add a new Angular 4 service to the app, use the command <code class="highlighter-rouge">ng g service serviceName</code>. On creation of the service, the Angular CLI shows an error:</p>

<p><img src="https://i.stack.imgur.com/ZZwBC.png" alt="WARNING Service is generated but not provided, it must be provided to be used" /></p>

<p>To solve this, we need to provide the service reference to the <code class="highlighter-rouge">src\app\app.module.ts</code> inside <code class="highlighter-rouge">providers</code> input of <code class="highlighter-rouge">@NgModule</code> method.</p>

<p>Initially, the default code in the service is:</p>

<pre><code>
import { Injectable } from '@angular/core';

@Injectable()
export class ServiceNameService {

  constructor() { }

}
</code></pre>

<p>A service has to have a few public methods.</p>

<p><strong>Adding an input to the Angular 4 app</strong></p>

<p>Assuming that we have 2 components:</p>

<ul>
  <li><code class="highlighter-rouge">parent-component</code></li>
  <li><code class="highlighter-rouge">child-component</code></li>
</ul>

<p>We wanted to pass some value from <code class="highlighter-rouge">parent-component</code> to <code class="highlighter-rouge">child-component</code> i.e. an <code class="highlighter-rouge">@Input</code> from <code class="highlighter-rouge">parent-component.html</code> to <code class="highlighter-rouge">child-component.ts</code>. Below is an example which explains the implementation:</p>

<p><code class="highlighter-rouge">parent-component.html</code> looks like this:</p>

<p><code class="highlighter-rouge">&lt;child-component [someInputValue]="someInputValue"&gt;&lt;/child-component&gt;</code></p>

<p><code class="highlighter-rouge">parent-component.ts</code> looks like this:</p>

<pre><code>  
  class ParentComponent {

  someInputValue = 'Some Input Value';

}
</code></pre>

<p><code class="highlighter-rouge">child-component.html</code> looks like this:</p>

<p><code class="highlighter-rouge">&lt;p&gt;Some Input Value &lt;/p&gt;</code></p>

<p><code class="highlighter-rouge">child-component.ts</code> looks like this:</p>

<pre><code>
import { Component, OnInit, Input } from '@angular/core';

@Component({
  selector: 'child-component',
  templateUrl: './child-component.html'
})
export class ChildComponent implements OnInit {

  @Input() someInputValue: String = "Some default value";

  @Input()
  set setSomeInputValue(val) {
    this.someInputValue += " modified";
  }

  constructor() {
    console.log('someInputValue in constructor ************** ', this.someInputValue); //someInputValue in constructor ************** undefined
  }

  ngOnInit() {
    console.log('someInputValue  in ngOnInit ************** ', this.someInputValue); //someInputValue  in ngOnInit ************** Some Input Value
  }
}
</code></pre>

<p>Notice that the value of the <code class="highlighter-rouge">@Input</code> value is available inside <code class="highlighter-rouge">ngOnInit()</code> and not inside <code class="highlighter-rouge">constructor()</code>.</p>

<p><strong>Objects reference behaviour in Angular 2 / 4</strong></p>

<p>In Javascript, objects are stored as references:</p>

<iframe width="100%" height="300" src="//jsfiddle.net/nordible/dftagmaf/embedded/js/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p>This exact behaviour can be re-produced with the help of Angular 2 / 4. Below is an example which explains the implementation:</p>

<p><code class="highlighter-rouge">parent-component.ts</code> looks like this:</p>

<pre><code>  
  class ParentComponent {

  someInputValue = {input: 'Some Input Value'};

}
</code></pre>

<p><code class="highlighter-rouge">parent-component.html</code> looks like this:</p>

<pre><code>  


&lt;child-component [someInputValue]="someInputValue"&gt;&lt;/child-component&gt;

</code></pre>

<p><code class="highlighter-rouge">child-component.html</code> looks like this:</p>

<pre><code>

<p>Some Input Value </p>
&lt;button (click)="changeInput()"&gt;change input&lt;/button&gt;

</code></pre>

<p><code class="highlighter-rouge">child-component.ts</code> looks like this:</p>

<pre><code>
import { Component, OnInit, Input } from '@angular/core';

@Component({
  selector: 'child-component',
  templateUrl: './child-component.html'
})
export class ChildComponent implements OnInit {

  @Input() someInputValue = {input:"Some default value"};

  @Input()
  set setSomeInputValue(val) {
    this.someInputValue.input += " set from setter";
  }

  constructor() {
    console.log('someInputValue in constructor ************** ', this.someInputValue); //someInputValue in constructor ************** undefined
  }

  ngOnInit() {
    console.log('someInputValue  in ngOnInit ************** ', this.someInputValue); //someInputValue  in ngOnInit ************** Some Input Value
  }

  changeInput(){
    this.someInputValue.input += " changed";
  }
}
</code></pre>

<p>The function <code class="highlighter-rouge">changeInput()</code> will change the value of <code class="highlighter-rouge">someInputValue</code> inside both <code class="highlighter-rouge">ChildComponent</code> &amp; <code class="highlighter-rouge">ParentComponent</code> because of their reference. Since, <code class="highlighter-rouge">someInputValue</code> is referenced from <code class="highlighter-rouge">ParentComponent</code>’s <code class="highlighter-rouge">someInputValue</code> <strong>object</strong> - the change in <code class="highlighter-rouge">ChildComponent</code>’s <code class="highlighter-rouge">someInputValue</code> <strong>object</strong> changes the value of <code class="highlighter-rouge">ParentComponent</code>’s <code class="highlighter-rouge">someInputValue</code> <strong>object</strong>. <em>THIS IS NOT CORRECT</em>. The references shall never be changed.</p>

<p><strong>Angular 4 life cycle methods</strong></p>

<p><code class="highlighter-rouge">ngOnInit()</code>, <code class="highlighter-rouge">ngOnChanges()</code> and <code class="highlighter-rouge">ngOnDestroy()</code> etc. are lifecycle methods. <code class="highlighter-rouge">ngOnChanges()</code> will be the first to be called, before <code class="highlighter-rouge">ngOnInit()</code>, when the value of a bound property changes, it will NOT be called if there is no change. <code class="highlighter-rouge">ngOnDestroy()</code> is called when the component is removed. To use it, <code class="highlighter-rouge">OnDestroy</code> needs to be <code class="highlighter-rouge">implement</code>ed by the class.</p>

<p><strong>DOM Manipulation in Angular 4 app</strong></p>

<p>To manipulate the DOM in Angular 2/4 apps, we need to <code class="highlighter-rouge">implement</code> the method <code class="highlighter-rouge">ngAfterViewInit()</code> of <code class="highlighter-rouge">AfterViewInit</code>. The method <code class="highlighter-rouge">ngAfterViewInit()</code> is called when the bindings of the children directives have been checked for the first time. In other words, <strong>when</strong> the view is initially rendered.</p>

<p>The <code class="highlighter-rouge">@ViewChild</code> provides access to <code class="highlighter-rouge">nativeElement</code>. It is recommended to not access <code class="highlighter-rouge">nativeElement</code> inside the <code class="highlighter-rouge">ngAfterViewInit()</code> because it is not browser safe. Also, it’s not supported by web workers. Web workers will never know when the DOM updates.</p>

<p>The right way is to use <code class="highlighter-rouge">renderer</code>. The renderer needs to be injected to the component constructor. We need to provide an <code class="highlighter-rouge">id</code> reference to the <code class="highlighter-rouge">HTML</code> element on the view something like this:</p>

<p><code class="highlighter-rouge">&lt;p #p1&gt;&lt;/p&gt;</code></p>

<p>It shall be accessed by the corresponding coponent <code class="highlighter-rouge">.ts</code> file, something like this:</p>

<pre><code>
export class SampleComponent implements AfterViewInit {

  @ViewChild("p1") p1;

  constructor(private renderer: Renderer2) //Renderer set to be depreciated soon
  { }

  ngAfterViewInit() {

    //recommended DOM manipulation approach
    this.renderer.setStyle(this.p1.nativeElement, //setElementStyle for soon to be depreciate Renderer
      'color',
      'red');

    //not recommended DOM manipulation approach
    //this.p1.nativeElement.style = "color:blue;";
  }

}
</code></pre>

<p><strong>Programmatically add components to DOM in Angular 2/4 app</strong></p>

<p>We need to use <code class="highlighter-rouge">ngAfterContentInit()</code> lifecycle method from <code class="highlighter-rouge">AfterContentInit</code>. It is called after the directive content has been fully initialized.</p>

<p>In the <code class="highlighter-rouge">parent-component.html</code>, add the a <code class="highlighter-rouge">div</code> like this:</p>

<p><code class="highlighter-rouge">&lt;div #container&gt; &lt;/div&gt;</code></p>

<p>The <code class="highlighter-rouge">parent-component.ts</code> file looks like this:</p>

<pre><code>

class ParentComponent implements AfterContentInit {

  @ViewChild("container", { read: ViewContainerRef }) divContainer

  constructor(private componentFactoryResolver: ComponentFactoryResolver) { }

  ngAfterContentInit() {
    let childComponentFactory = this.componentFactoryResolver.resolveComponentFactory(childComponent);
    this.divContainer.createComponent(childComponentFactory);
    let childComponentRef = this.divContainer.createComponent(childComponentFactory);
    childComponentRef.instance.someInputValue = "Assigned value";

  }
}
</code></pre>

<p>Inside <code class="highlighter-rouge">src\app\app.module.ts</code>, add the following entry to the <code class="highlighter-rouge">@NgModule()</code> method parameters:</p>

<pre><code>
  entryComponents:[
    childComponent
  ],
</code></pre>

<p>Notice that we’re not accessing the <code class="highlighter-rouge">div#container</code> using the <code class="highlighter-rouge">@ViewChild("container") divContainer</code> approach. We need it’s reference instead of the <code class="highlighter-rouge">nativeElement</code>. We will access it as <code class="highlighter-rouge">ViewContainerRef</code>:</p>

<p><code class="highlighter-rouge">@ViewChild("container", {read: ViewContainerRef}) divContainer</code></p>

<p>The <code class="highlighter-rouge">ViewContainerRef</code> has a method called <code class="highlighter-rouge">createComponent()</code> which requires a component factory to be passed as a parameter. For the same, we need to inject a <code class="highlighter-rouge">ComponentFactoryResolver</code>. It has a method which basically loads a component.</p>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Creating-Angular-2-4-Application-From-Scratch-Using-Angular-CLI</wp:post_id>
        <wp:post_date>2017-09-08T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-09-08T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Custom Elements, Shadow DOM & Templates in HTML by Examples]]></title>
        <link>http://xameeramir.github.io/Custom-Elements-Shadow-DOM-Templates-in-HTML-by-Examples/</link>
        <pubDate>2017-08-05T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://blog.teamtreehouse.com/wp-content/uploads/2014/04/Lego-Kenny-Louie-Flickr-2.jpg" alt="Custom Elements" /></p>

<p><a href="http://blog.teamtreehouse.com/create-custom-html-elements-2">Courtesy</a></p>

<p><strong>Creating Custom Elements</strong></p>

<p>Here is an example which demonstrate creating custom elements:</p>

<iframe width="100%" height="300" src="//jsfiddle.net/nordible/n8xs8dq0/embedded/js,css,result/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p><strong>Using ShadowDOM with Custom Elements</strong></p>

<p>Shadow DOM is a way to encapsulate DOM of our custom component. This encapsulation means that the style sheet and javascript logic of our app is combined into that shadow DOM element.</p>

<iframe width="100%" height="300" src="//jsfiddle.net/nordible/x5u3yd05/embedded/js,css,result/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p><strong>Using Templates for ShadowDOM with Custom Elements</strong></p>

<p>The ShadowDOMs can also be provided with HTML templates like so:</p>

<iframe width="100%" height="300" src="//jsfiddle.net/nordible/0qe1jfyc/embedded/" allowfullscreen="allowfullscreen" frameborder="0"></iframe>

<p><a href="https://www.youtube.com/watch?v=aQxccPmNhHw">Source</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Custom-Elements-Shadow-DOM-Templates-in-HTML-by-Examples</wp:post_id>
        <wp:post_date>2017-08-05T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-08-05T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Implementing ng-file-upload in Angular 2 app]]></title>
        <link>http://xameeramir.github.io/Implementing-ng-file-upload-in-Angular-2-app/</link>
        <pubDate>2017-05-08T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.uploadify.com/wp-content/themes/uploadify/img/splash.png" alt="Upload file" /></p>

<p><a href="http://www.uploadify.com/">courtesy</a></p>

<p>We needed to implement drag drop file input feature in one of our <a href="https://angular.io/">Angular 2</a> app.</p>

<p>We selected <a href="https://github.com/valor-software/ng2-file-upload">ng-file-upload</a> for this.</p>

<p>We tried to follow the <a href="http://valor-software.com/ng2-file-upload/">help page</a>. As suggested, implemented <a href="https://github.com/valor-software/ng2-file-upload/blob/development/demo/src/app/components/file-upload/simple-demo.html"><code class="highlighter-rouge">drag-upload-input.html</code></a> &amp; <a href="https://github.com/valor-software/ng2-file-upload/blob/development/demo/src/app/components/file-upload/simple-demo.ts"><code class="highlighter-rouge">drag-upload-input.component.ts</code></a> like the following:</p>

<p><strong>drag-upload-input.html</strong></p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;!-- we only need single file upload --&gt;
&lt;input type="file" ng2FileSelect [uploader]="uploader" /&gt;
</code></pre>
</div>

<p><strong>drag-upload-input.component.ts</strong></p>

<div class="highlighter-rouge"><pre class="highlight"><code>import { Component } from '@angular/core';
import { FileUploader } from 'ng2-file-upload';

// const URL = '/api/';
const URL = 'https://evening-anchorage-3159.herokuapp.com/api/';

@Component({
  moduleId: module.id,
  selector: 'drag-upload-input',
  templateUrl: './drag-upload-input.html'
})
export class DragUploadInput {
  public uploader: FileUploader = new FileUploader({ url: URL });
  public hasBaseDropZoneOver: boolean = false;
  public hasAnotherDropZoneOver: boolean = false;

  public fileOverBase(e: any): void {
    this.hasBaseDropZoneOver = e;
  }

  public fileOverAnother(e: any): void {
    this.hasAnotherDropZoneOver = e;
  }
}
</code></pre>
</div>

<p>The <a href="https://github.com/valor-software/ng2-file-upload/blob/development/demo/src/app/app.module.ts"><code class="highlighter-rouge">app.module.ts</code></a> has got <code class="highlighter-rouge">FileUploadModule</code> like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>// File upload modules
import { FileUploadModule } from 'ng2-file-upload';
import { DragUploadInput } from './file-upload/drag-upload-input.component';

//other imports

@NgModule({
  imports: [ ... other imports
FileUploadModule
],
  declarations: [  ... other declarations
DragUploadInput],
  bootstrap: [AppComponent]
})
export class AppModule { }
</code></pre>
</div>

<p>And the <a href="http://stackoverflow.com/a/37167153/2404470"><code class="highlighter-rouge">systemjs.config.js</code></a> looks like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>(function (global) {
  System.config({
    // map tells the System loader where to look for things
    map: {
      // other libraries
      'ng2-file-upload': 'node_modules/ng2-file-upload',
    },
    packages: {
	  // other packages
      ng2-file-upload': {
        main: 'ng2-file-upload.js',
        defaultExtension: 'js'
      }
    }
  });
})(this);
</code></pre>
</div>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Implementing-ng-file-upload-in-Angular-2-app</wp:post_id>
        <wp:post_date>2017-05-08T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-05-08T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[RCS 2 / Advanced Messaging - implementation research]]></title>
        <link>http://xameeramir.github.io/RCS-advanced-messaging-implementation-research/</link>
        <pubDate>2017-04-10T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.droid-life.com/wp-content/uploads/2014/11/google-messenger.jpg" alt="RCS Advanced Messaging" /></p>

<p><a href="http://www.droid-life.com/2015/03/13/google-messenger-updated-with-gif-support-and-a-widget/">Courtesy</a></p>

<p>Recently, I was doing some studies on implementation of <a href="http://www.gsma.com/network2020/rcs-2/">Advanced Messaging / RCS 2</a> as a channel for chat bots.</p>

<p>The client implementation seems to be <a href="https://play.google.com/store/apps/details?id=com.google.android.apps.messaging">Android Messages</a>.</p>

<p>This platform needs to expose it’s APIs so that our bots can access it. The core people working on RCS / Advanced Messaging are <a href="https://jibe.google.com/jibe-platform/">Jibe</a>. They seems to be in process of providing Advanced Messaging / RCS 2 APIs but technically there’s nothing ready.</p>

<p>Was having a look at the <a href="https://solaiemes-rcs-api.3scale.net/api">Solaiemes RCS API</a>. Solaiemes is the subsidiary of Mavenir/Xura. At this point, it’s <strong>API end points</strong> are not working:</p>

<ul>
  <li><a href="http://api.2445580839652.proxy.3scale.net:80/rcsapi/session">http://api.2445580839652.proxy.3scale.net:80/rcsapi/session</a></li>
  <li><a href="https://tadhack.solaiemes-rcs-api.3scale.net/rcsapi">https://tadhack.solaiemes-rcs-api.3scale.net/rcsapi</a></li>
  <li><a href="https://tadhack.3scale.net/rcsapi">https://tadhack.3scale.net/rcsapi</a></li>
  <li><a href="http://tadhack.solaiemes.com/rcsapi">http://tadhack.solaiemes.com/rcsapi</a></li>
</ul>

<p>The following provider seems to be in a position to provide RCS 2 / Advanced Mesaging APIs:</p>

<ul>
  <li><a href="https://jibe.google.com/jibe-platform/">Jibe</a></li>
  <li><a href="http://www.mavenir.com/our-solutions/rich-communication-rcs">Mavenir</a></li>
  <li><a href="https://www.skycore.com/contact-us/">SkyCore</a></li>
  <li><a href="https://www.clxcommunications.com/contact-us/">CLX</a></li>
</ul>

<p>The following vendors are yet to confirm whether they support Advanced Messaging / RCS 2:</p>

<ul>
  <li><a href="https://www.twilio.com/console/support/tickets/927458">Twilio</a></li>
  <li><a href="mailto:info@solaiemes.com">Solaiemes</a> - end points not woring, probably closed</li>
  <li><a href="mailto:info@muut.com">Muut</a></li>
  <li><a href="mailto:sales@symsoft.com">Symsoft</a></li>
  <li><a href="mailto:support@messagebird.com">MessageBird</a></li>
  <li><a href="mailto:info@summit-tech.com">Summit Tech</a></li>
  <li><a href="https://www.richcommunicationsuite.com/contact.php">RCS</a></li>
  <li><a href="mailto:contact@nablecomm.com">Nablecomm</a></li>
  <li><a href="mailto:sales@rcs-rds.ro">RCS-RDS</a></li>
  <li><a href="http://www.newpace.ca/contact">NewPace</a></li>
  <li><a href="mailto:carrier-support@infinite.com">Infinite Convergence</a></li>
  <li><a href="mailto:8008309870@zte.com.cn">ZTE</a></li>
  <li><a href="mailto:li-contact@utimaco.com">Utimaco</a></li>
  <li><a href="mailto:dev_support@media5corp.com">Media 5 Corp</a></li>
  <li><a href="mailto:contact@acision.com">Acision</a></li>
  <li><a href="https://newnetmobility.com/contact/">Newnet Mobility</a></li>
  <li><a href="https://www.wit-software.com/contacts/">Wit Software</a></li>
  <li><a href="https://telestax.com/contact/">TelesTax</a></li>
  <li><a href="https://www.tropo.com/help/contact-us/">Tropo</a></li>
  <li><a href="https://www.tatango.com/platform/rcs-messaging/">Tatango</a></li>
  <li><a href="http://interoptechnologies.com/rcs/">Interop</a></li>
  <li><a href="https://www.3cinteractive.com/">3C</a></li>
  <li><a href="https://www.experian.com/corporate/business-services-contacts.html">Experian</a></li>
  <li><a href="http://www.mgage.com/products-services/channels/rcs">M Gage</a></li>
  <li><a href="https://mobivity.com/contact/">Mobivity</a></li>
  <li><a href="https://www.movile.com/en/contact/">Movile messaging</a></li>
  <li><a href="https://www.nexmo.com/contact-sales/">Nexmo</a></li>
  <li><a href="https://www.openmarket.com/contact/">Open market</a></li>
  <li><a href="https://www.openmarket.com/contact/">Waterfall</a></li>
  <li><a href="https://www.zipwhip.com/contact-us">Zip Whip</a></li>
</ul>

<p>As of april’2017, the following vendors do not support Advanced Messaging</p>

<ul>
  <li><a href="mailto:sales@fortytwo.com">FortyTwo</a></li>
  <li><a href="mailto:info@rundexter.com">Dexter</a></li>
  <li><a href="mailto:support@gatewayapi.com">Gateway API</a></li>
  <li><a href="http://gupshup.io">GupShup</a></li>
  <li><a href="https://www.infobip.com/">InfoBip</a></li>
  <li><a href="https://www.telemessage.com/contact-us/">TeleMessage</a></li>
  <li><a href="http://support.airbop.com/discussions/questions/662-how-rcsadvanced-messaging-can-be-used-with-botframework">Airbop</a></li>
  <li><a href="mailto:support@spirent.com">Spirent</a></li>
</ul>

<p>Although, <a href="mailto:info@gsma.com">GSMA</a> is not supposed to, and has not responded to our technical questions. GSMA has specified <a href="http://www.gsma.com/network2020/wp-content/uploads/2013/08/RCC_13_v2.0.pdf">RCS API</a> requirements so far.</p>

<h1 id="btw-what-is-rcs">Btw, what is RCS?</h1>

<p><strong>Features of Advanced Messaging</strong></p>

<ul>
  <li>Ubiquity</li>
  <li>Simplicity</li>
  <li>Everyone is invited</li>
  <li>All the features</li>
  <li>Enhanced messaging experience</li>
</ul>

<p><strong>WHAT IS ‘MESSAGING AS A PLATFORM (MAAP)?</strong></p>

<p>To most users messaging is just an ‘app’ 
– a program on their phones they use to keep in touch. Advanced Messaging will change that though 
– messaging is now becoming a ‘platform’ on which applications will be built to deliver whole new levels of interaction and experience.</p>

<p>It is where SMS is headed. End-users simply want all the services they need as quickly and conveniently as possible, and MaaP lets operators deliver that. If you want to book a taxi, a flight or look up train times for example, you will not need to download a specific new app – just hit your messenger.</p>

<p>MaaP removes that barrier of another app to download and connects suppliers directly to consumers. Messaging as a Platform will give operators all new possibilities for developing and implementing innovative services, and most importantly, for generating new revenues.</p>

<p><strong>The potential for Messaging as a Platform</strong></p>

<p>One of the more striking developments of messaging in recent times has been the evolution of messaging apps and clients into the ‘new home page’. End-users pick up their mobile devices in the morning and the first place many head to is their chat or messaging app. It has now become both their inbox and their home page. This is an evolution that operators can use to develop Messaging as a Platform propositions.</p>

<p><strong>For users</strong></p>

<p>This enables all sorts of companies to interact with customers in unprecedented ways – travellers, for example, could receive their actual electronic boarding pass securely from airlines rather than receiving an SMS with a link. When on holiday users can order a taxi or Uber, check the weather at their destination and the exchange rate, find a recommended restaurant and book a table and pay for it and learn some handy phrases in another language – all just by sending messages.</p>

<p><strong>For marketers</strong></p>

<p>Further to this progression in customer service and fulfilment, marketers too benefit from Advanced Messaging. They can use read receipts to tell if end-users have read promotional messages and where and when they read them. They can embed call-to-action codes in them, giving access to previously unavailable data to analyse. It all adds up to richer, more engaging advertising content.</p>

<p><strong>For bots</strong></p>

<p>Furthermore, Advanced Messaging also enables Bot-to-Person interactions, where end-user engagements are simply richer and more detailed. The Messaging as a Platform approach and its exponentially increased degree of interaction makes huge new monetization opportunities available to MNOs.</p>

<p><strong>For  workplace</strong></p>

<p>Operators can extend their blue sky thinking with Messaging as a Platform; why not a smart, Wi-Fi-enabled video doorbell which uses messaging to record a video message from a visitor when you are not home and ‘chat’ it direct to your mobile device? Built-in AI-based intelligent assistants are great in their place but some people do not like talking out loud to their phone in public places – chatbots can enable that same function via a messaging platform.</p>

<p><strong>Advanced Messaging deployment models: getting it right</strong></p>

<p>Another key benefit of Advanced Messaging is that deployment models can be mixtures of various approaches; operators do not need to commit entirely to a single method and limit their options.</p>

<ol>
  <li><strong>OWN IMS</strong>
 PROS
    <ul>
      <li>Retain control of core service</li>
      <li>Flexibility and ability to integrate with other services
 CONS</li>
      <li>Complex project, requires expertise</li>
      <li>Costly in the short term, CAPEX</li>
    </ul>
  </li>
  <li><strong>HOSTED SERVICE</strong>
 PROS
    <ul>
      <li>Pay-as-you-grow model</li>
      <li>Fast deployment and time to market</li>
      <li>Benefit from third-party data centre infrastructure and expertise</li>
      <li>Scope for complementing other services e.g. VoLTE
 CONS</li>
      <li>Limited service flexibility</li>
      <li>No in-premises deployment option</li>
    </ul>
  </li>
</ol>

<p><a href="http://www.gsma.com/network2020/wp-content/uploads/2016/11/Network-2020-006-Advanced-Communications-eBook-edition-1-2.pdf">Source</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/RCS-advanced-messaging-implementation-research</wp:post_id>
        <wp:post_date>2017-04-10T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-04-10T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Using Ractive.js and HTML5 Fetch API to consume REST API]]></title>
        <link>http://xameeramir.github.io/Ractive.js-HTML5-Fetch-API-consume-REST-API/</link>
        <pubDate>2017-02-21T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://udemy-images.udemy.com/course/750x422/951252_fb12.jpg" alt="Ractive JS" /></p>

<p><a href="https://www.udemy.com/ractivejs-fundamentals-for-web-developers/">Courtesy</a></p>

<p>Recently I was given a task to consume an <a href="http://openweathermap.org/">open</a> rest based API from <a href="http://openweathermap.org/api">Open Weather</a> using <a href="http://www.ractivejs.org/">Ractive.js</a> and <a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">HTML5’s Fetch API</a></p>

<p>The sample <a href="http://jsfiddle.net/nordible/boe2vcj6/embedded/result/#Result">app here</a> takes the city name as input and shows the corresponding weather information below it.</p>

<h1 id="get-the-openweather-api-keys-for-free">Get the OpenWeather API keys for FREE!!!</h1>

<p>In order to get the JSON data from OpenWeather’s REST API, the first thing we need to do is get their <a href="http://openweathermap.org/appid">free API key</a>. The API can be called by simply passing in this app id as query parameter. That’s it!</p>

<h1 id="setting-the-ui-container">Setting the UI container</h1>

<p>Create an HTML5 element to be used as the front of the app. In our case, it’s <code>div#container</code>.</p>

<h1 id="implement-responsiveness-using-bootstrap">Implement responsiveness using Bootstrap</h1>

<p>Just for implementing the responsiveness, we’ve included the <a href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">Bootstrap reference</a>. The classes <code> .row .col-md-6 .col-sm-12 </code> takes care of responsiveness itself.</p>

<h1 id="set-the-ractive-template">Set the Ractive template</h1>

<p>After adding <a href="http://cdn.ractivejs.org/latest/ractive.min.js">ractive’s link</a>, we’ve made sure that the code in the fiddle will be Ractive-aware.</p>

<p>The template is in the script tag. Note that we’ve set the <code>script</code>’s type attribute to ‘text/ractive’ - though it can be just about anything except ‘text/javascript’. We can load a template in many ways. For convenience, we’ll include it in a script tag so that we don’t need to mess around with AJAX or multiline strings.</p>

<p>The curly braces e.g. <code></code> are holding the data set inside the ractive function with e.g. <code>ractive.set('location', JSON.stringify(data.name) + ', ' + JSON.stringify(data.sys.country));</code></p>

<h1 id="set-the-ractive-context">Set the ractive context</h1>

<p>The <code>Ractive</code> constructor function will be used to set the Ractive context. The parameters with their description are:</p>

<ul>
  <li><code>el</code> : the element to which the front end will be rendered</li>
  <li><code>template</code> : the Ractive template</li>
  <li><code>data</code> : the data for the front end</li>
</ul>

<h1 id="catching-events">Catching events</h1>

<p>Ractive events looks a little different than pure HTML events, e.g. on-click. They’re catched in a samilar sense as that of <a href="http://jquery.com/">jQuery</a>.</p>

<h1 id="fire-the-fetch-request">Fire the fetch request</h1>

<p>Prepare the fetch request using the <code>Request</code> constructor function and fire it using <code> fetch(request) </code>.</p>

<h1 id="use-localstorage-to-maintain-recent-search-history">Use localStorage to maintain recent search history</h1>

<p>The city input is stored in the localStorage instance as an array and displayed as the <code>li</code> of <code>ul</code> on click of each is the weather fetching request recap-ed.</p>

<p>See the <a href="http://jsfiddle.net/nordible/boe2vcj6/">whole code</a> here.</p>

<p><strong>Sources:</strong></p>

<ul>
  <li><a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">Fetch API</a></li>
  <li><a href="http://openweathermap.org/appid">OpenWeather Map</a></li>
  <li><a href="http://www.ractivejs.org/">Ractive</a></li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Ractive.js-HTML5-Fetch-API-consume-REST-API</wp:post_id>
        <wp:post_date>2017-02-21T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-02-21T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Working with the examples for Node.js driver]]></title>
        <link>http://xameeramir.github.io/nodejs-driver-example/</link>
        <pubDate>2017-02-17T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p>The <code class="highlighter-rouge">node.js</code> driver is a package for interacting with <code class="highlighter-rouge">MongoDB</code>.</p>

<h1 id="importing-a-json">Importing a JSON</h1>

<p>The command <code class="highlighter-rouge">mongoimport</code> allows us to import human readable <code class="highlighter-rouge">JSON</code> in a specific database &amp; a collection.
To import a <code class="highlighter-rouge">JSON</code> data in a specific database &amp; a collection, type <code class="highlighter-rouge">mongoimport -d databaseName -c collectionName jsonFileName.json</code></p>

<h1 id="find-and-cursors-in-the-nodejs-driver">find() and Cursors in the Node.js Driver</h1>

<pre>
<code>
var MongoClient = require('mongodb').MongoClient,
assert = require('assert');

MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

assert.equal(err, null);
console.log("Successfully connected to MongoDB.");

var query = {
"category_code": "biotech"
};

db.collection('companies').find(query).toArray(function(err, docs) {

assert.equal(err, null);
assert.notEqual(docs.length, 0);

docs.forEach(function(doc) {
console.log(doc.name + " is a " + doc.category_code + " company.");
});

db.close();

});

});
</code>
</pre>

<p>Notice that the call <code class="highlighter-rouge">.toArray</code> is making the application to fetch the entire dataset.</p>

<pre>
<code>
var MongoClient = require('mongodb').MongoClient,
assert = require('assert');

MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

assert.equal(err, null);
console.log("Successfully connected to MongoDB.");

var query = {"category_code": "biotech"};

var cursor = db.collection('companies').find(query);

function(doc) {
cursor.forEach(
console.log( doc.name + " is a " + doc.category_code + " company." );
},
function(err) {
assert.equal(err, null);
return db.close();
}
);
});
</code>
</pre>

<p>Notice that the <strong>cursor</strong> returned by the <code class="highlighter-rouge">find()</code> is assigned to <code class="highlighter-rouge">var cursor</code>. With this approach, instead of fetching all data in memort and consuming data at once, we’re streaming the data to our application. <code class="highlighter-rouge">find()</code> can create a cursor immediately because it doesn’t actually make a request to the database until we try to use some of the documents it will provide. The point of <code class="highlighter-rouge">cursor</code> is to describe our query. The 2nd parameter to <code class="highlighter-rouge">cursor.forEach</code> shows what to do when the driver gets exhausted or an error occurs.</p>

<p>In the initial version of the above code, it was <code class="highlighter-rouge">toArray()</code> which forced the database call. It meant we needed <strong>ALL</strong> the documents and wanted them to be in an <code class="highlighter-rouge">array</code>.</p>

<p>Also, <code class="highlighter-rouge">MongoDB</code> returns data in batch format. The image below shows, requests from cursors (from application) to <code class="highlighter-rouge">MongoDB</code></p>

<p><img src="https://lh3.googleusercontent.com/_utjj5lUN8AMPPf9JCUf3NwP6SoK14g9IrDiglPhNOyLYQq81PaoibVcsDGLxtN1GgBOrUk-_xiobeUcKSUP90crPC7JiflvblQhgRX-d_8noqoBXkQxhDGLRJs8O2LvcdwA4_hoGJSVmFgDUZUkRI-TYG2PKaQMKE171ufX3QFHkKE-jO1gZC06mHAxRLhuDkzip1IFR-Slo-Y6i4hO_bnNGSIMLflu40KZ-waxx0El1D0rNu3JfWFvMkta48SB2a9SGmSZnOD-Vl8A_8B9i7xk4oCaY4TZLq5PKOcgL8z_pCSY2sTqkYACHfl_Itd54Od38fpPAIBu7TWKKAm8hAJfU6QAfuAOiT1khMmzOqvO6zRmEAVlrXybWV26WDtvBumcfmnaZIBUUNUC7MeKP0nim32axhwJQxa_hEs7kmNHjrOzp2k4URp_mFl-XIBNfCGPkjafJkgnw2Tfz4qI8E5p1L29hlgjAmJyZWKvA8Ny5olYK7fe_N_1Sj9mc0hm3vnMnuKaA61pReh8Q2OSLqwJxyYRXhocFaNC6HXiBaqH9s4_VahUeO_xHvdgZWL1u9SGPYiNK2vVSexagjYVKJXnJ3RfJ1g=w668-h230-no" alt="MongoDB cursor requests" /></p>

<p><code class="highlighter-rouge">forEach</code> is better than <code class="highlighter-rouge">toArray</code> because we can process documents <strong>as they come in</strong> until we reach the end. Contrast it with <code class="highlighter-rouge">toArray</code> - where we wait for <strong>ALL</strong> the documents to be retrieved and the <strong>entire</strong> array is built. This means we’re not getting any advantage from the fact that the driver and the database system are working together to batch results to your application. Batching is meant to provide efficiency in terms of memory overhead and the execution time. <em>Take advantage of it, if you can in your application</em>.</p>

<h1 id="projection-in-the-nodejs-driver">Projection in the Node.js Driver</h1>

<p>Remember that projections allows us to explicitly include or exclude fields in a <code class="highlighter-rouge">MongoDB</code> query. We use <strong><code class="highlighter-rouge">1</code></strong> to indicate that we want to include a field and <strong><code class="highlighter-rouge">0</code></strong> to indicate that we wish to exclude the field. Remember that <code class="highlighter-rouge">_id</code> field is special -</p>

<ul>
  <li><code class="highlighter-rouge">_id</code> field gets included by default, unless we explicitly exclude it</li>
  <li>All other fields are excluded, until we explicitly include them</li>
</ul>

<p>Also, since we’re working in <code class="highlighter-rouge">javascript</code>, we can construct our project documents and documents to be inserted into our collections in a way that is very similar to the way we do this in the <code class="highlighter-rouge">mongo</code> shell. What’s different is the driver provides one set of classes and methods we use to interact with <code class="highlighter-rouge">MongoDB</code> and the <code class="highlighter-rouge">mongo</code> shell provides it’s own API.</p>

<p>W. r. t. <code class="highlighter-rouge">CRUD</code> as of <code class="highlighter-rouge">MongoDB 3.2</code> the driver and the <code class="highlighter-rouge">mongo</code> shell adhere to the same spec. How you access these methods and how they’re implemented varies of course, from the <code class="highlighter-rouge">mongo</code> shell.</p>

<pre>
<code>

var MongoClient = require('mongodb').MongoClient,
    assert = require('assert');


MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

    assert.equal(err, null);
    console.log("Successfully connected to MongoDB.");

    var query = {"category_code": "biotech"};
    var projection = {"name": 1, "category_code": 1, "_id": 0};

    var cursor = db.collection('companies').find(query);
    cursor.project(projection);

    cursor.forEach(
        function(doc) {
            console.log(doc.name + " is a " + doc.category_code + " company.");
            console.log(doc);
        },
        function(err) {
            assert.equal(err, null);
            return db.close();
        }
    );

});

</code>
</pre>

<p>The current best practice in the <code class="highlighter-rouge">node.js</code> driver, is to chain a call to <code class="highlighter-rouge">project</code> onto our <code class="highlighter-rouge">cursor</code> i.e. <code class="highlighter-rouge">cursor.project</code>. This call to project sets a field projection for the query. This call does not force a request to retrieve documents from the database, as does the <code class="highlighter-rouge">foreach</code> method. Rather it adds some additional details to the query representation maintained by our <code class="highlighter-rouge">cursor</code>. There’re a number of cursor methods, we can chain together to fully express the operation we wish to execute against our <code class="highlighter-rouge">MongoDB</code> database. The call to <code class="highlighter-rouge">db.collection</code> is synchronous. We’re going to modify that <code class="highlighter-rouge">cursor</code> with a field <code class="highlighter-rouge">projection</code> here using the <code class="highlighter-rouge">project</code> method on the cursor.</p>

<h1 id="query-operators-in-the-nodejs-driver">Query Operators in the Node.js Driver</h1>

<pre>
<code>
var MongoClient = require('mongodb').MongoClient,
    commandLineArgs = require('command-line-args'),
    assert = require('assert');


var options = commandLineOptions();

MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

    assert.equal(err, null);
    console.log("Successfully connected to MongoDB.");

    var query = queryDocument(options);
    var projection = {"_id": 1, "name": 1, "founded_year": 1,
                      "number_of_employees": 1, "crunchbase_url": 1};

    var cursor = db.collection('companies').find(query, projection);
    var numMatches = 0;

    cursor.forEach(
        function(doc) {
            numMatches = numMatches + 1;
            console.log( doc );
        },
        function(err) {
            assert.equal(err, null);
            console.log("Our query was:" + JSON.stringify(query));
            console.log("Matching documents: " + numMatches);
            return db.close();
        }
    );

});


function queryDocument(options) {

    console.log(options);

    var query = {
        "founded_year": {
            "$gte": options.firstYear,
            "$lte": options.lastYear
        }
    };

    if ("employees" in options) {
        query.number_of_employees = { "$gte": options.employees };
    }

    return query;

}


function commandLineOptions() {

    var cli = commandLineArgs([
        { name: "firstYear", alias: "f", type: Number },
        { name: "lastYear", alias: "l", type: Number },
        { name: "employees", alias: "e", type: Number }
    ]);

    var options = cli.parse()
    if ( !(("firstYear" in options) &amp;&amp; ("lastYear" in options))) {
        console.log(cli.getUsage({
            title: "Usage",
            description: "The first two options below are required. The rest are optional."
        }));
        process.exit();
    }

    return options;

}
</code>
</pre>

<p>To call it use <code class="highlighter-rouge">node app.js -f 2004 -l 2008 -e 100</code>. Notice that <code class="highlighter-rouge">commandLineArgs</code> is getting <code class="highlighter-rouge">parse</code>d. Also, you might see the difference between the <code class="highlighter-rouge">_id</code> field representation by <code class="highlighter-rouge">mongo</code> shell and <code class="highlighter-rouge">node.js</code> driver:</p>

<ul>
  <li><code class="highlighter-rouge">_id : ObjectId("507f1f77bcf86cd799439011")</code> on <code class="highlighter-rouge">mongo</code> shell</li>
  <li><code class="highlighter-rouge">_id : 507f1f77bcf86cd799439011</code> on <code class="highlighter-rouge">node.js</code> driver</li>
</ul>

<p>This happens because of the difference in the way <code class="highlighter-rouge">node.js</code> driver and the <code class="highlighter-rouge">mongo</code> shell chooses to stringify the <code class="highlighter-rouge">_id</code> field.</p>

<h1 id="regex-in-the-nodejs-driver">$regex in the Node.js Driver</h1>

<pre>
<code>
var MongoClient = require('mongodb').MongoClient,
    commandLineArgs = require('command-line-args'),
    assert = require('assert');

var options = commandLineOptions();

MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

    assert.equal(err, null);
    console.log("Successfully connected to MongoDB.");

    var query = queryDocument(options);
    var projection = projectionDocument(options);

    var cursor = db.collection('companies').find(query);
    cursor.project(projection);

    var numMatches = 0;

    cursor.forEach(
        function(doc) {
            numMatches = numMatches + 1;
            console.log( doc );
        },
        function(err) {
            assert.equal(err, null);
            console.log("Our query was:" + JSON.stringify(query));
            console.log("Matching documents: " + numMatches);
            return db.close();
        }
    );

});

function queryDocument(options) {

    console.log(options);

    var query = {};

    if ("overview" in options) {
        query.overview = {"$regex": options.overview, "$options": "i"};
    }

    if ("milestones" in options) {
        query["milestones.source_description"] =
            {"$regex": options.milestones, "$options": "i"};
    }

    return query;
}

function projectionDocument(options) {

    var projection = {
        "_id": 0,
        "name": 1,
        "founded_year": 1
    };

    if ("overview" in options) {
        projection.overview = 1;
    }

    if ("milestones" in options) {
        projection["milestones.source_description"] = 1;
    }

    return projection;
}

function commandLineOptions() {

    var cli = commandLineArgs([
        { name: "overview", alias: "o", type: String },
        { name: "milestones", alias: "m", type: String }
    ]);

    var options = cli.parse()
    if (Object.keys(options).length &lt; 1) {
        console.log(cli.getUsage({
            title: "Usage",
            description: "You must supply at least one option. See below."
        }));
        process.exit();
    }

    return options;
}
</code>
</pre>

<p>The <code class="highlighter-rouge">$options</code> set to <code class="highlighter-rouge">i</code> indicates that the <code class="highlighter-rouge">regex</code> search needs to be case-insensitive. <code class="highlighter-rouge">MongoDB</code> supports <code class="highlighter-rouge">perl</code> like regular expressions. There’re a couple of ways in which we can set the values for the query documents:</p>

<ul>
  <li>
    <p>Using curly braces <code class="highlighter-rouge"><span class="p">{</span><span class="w"> </span><span class="nt">"_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="nt">"name"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="nt">"founded_year"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w"> </span><span class="p">}</span></code></p>
  </li>
  <li>
    <p>Using dots <code class="highlighter-rouge">projection.overview = 1;</code></p>
  </li>
  <li>
    <p>Using array indexing <code class="highlighter-rouge">projection["milestones.source_description"] = 1;</code></p>
  </li>
</ul>

<h1 id="sort-skip-and-limit-in-the-nodejs-driver">Sort, Skip, and Limit in the Node.js Driver</h1>

<p>To sort documents, we can apply <code class="highlighter-rouge">sort</code> on a <code class="highlighter-rouge">cursor</code> object. To enforce order of sort, instead of passing an object, we need to pass an array to the <code class="highlighter-rouge">sort</code> method.</p>

<pre>
<code>
var MongoClient = require('mongodb').MongoClient,
  commandLineArgs = require('command-line-args'),
  assert = require('assert');


var options = commandLineOptions();


MongoClient.connect('mongodb://localhost:27017/crunchbase', function(err, db) {

  assert.equal(err, null);
  console.log("Successfully connected to MongoDB.");

  var query = queryDocument(options);
  var projection = {
    "_id": 0,
    "name": 1,
    "founded_year": 1,
    "number_of_employees": 1
  };

  var cursor = db.collection('companies').find(query);
  cursor.project(projection);
  cursor.limit(options.limit);
  cursor.skip(options.skip);
  cursor.sort([
    ["founded_year", 1],
    ["number_of_employees", -1]
  ]);

  var numMatches = 0;

  cursor.forEach(
    function(doc) {
      numMatches = numMatches + 1;
      console.log(doc.name + "\n\tfounded " + doc.founded_year +
        "\n\t" + doc.number_of_employees + " employees");
    },
    function(err) {
      assert.equal(err, null);
      console.log("Our query was:" + JSON.stringify(query));
      console.log("Documents displayed: " + numMatches);
      return db.close();
    }
  );

});

function queryDocument(options) {

  console.log(options);

  var query = {
    "founded_year": {
      "$gte": options.firstYear,
      "$lte": options.lastYear
    }
  };

  if ("employees" in options) {
    query.number_of_employees = {
      "$gte": options.employees
    };
  }

  return query;

}


function commandLineOptions() {

  var cli = commandLineArgs([{
    name: "firstYear",
    alias: "f",
    type: Number
  }, {
    name: "lastYear",
    alias: "l",
    type: Number
  }, {
    name: "employees",
    alias: "e",
    type: Number
  }, {
    name: "skip",
    type: Number,
    defaultValue: 0
  }, {
    name: "limit",
    type: Number,
    defaultValue: 20000
  }]);

  var options = cli.parse()
  if (!(("firstYear" in options) &amp;&amp; ("lastYear" in options))) {
    console.log(cli.getUsage({
      title: "Usage",
      description: "The first two options below are required. The rest are optional."
    }));
    process.exit();
  }

  return options;

}

</code>
</pre>

<p>One thing to notice is the order in which <code class="highlighter-rouge">MongoDB</code> applies <code class="highlighter-rouge">skip</code>, <code class="highlighter-rouge">limit</code> and <code class="highlighter-rouge">sort</code></p>

<ul>
  <li><code class="highlighter-rouge">sort</code></li>
  <li><code class="highlighter-rouge">skip</code></li>
  <li><code class="highlighter-rouge">limit</code></li>
</ul>

<p><img src="https://lh3.googleusercontent.com/6mhk_4rQhKp8sF03brXg-OAbsKEJtxHLFp4MtPA_eom3Dabo1ptkY5Nz7UUZ8W-q_JfGiiVVt9AGGIwJns2KoVYKk18Z5VVP6PWaC7zktndNIXzFp3U-IadJSt-KzIxL2hP4wA3vguJqZB7GP9JBOUtJWgYmgX1gEMmIXQRW2z6DKMB_J0YUcZ9pF0a_woe0Weg76MADCcxwXgeb5qRbkXKjxhsqlwgo00qYZBdhlWAExclJ0uDv0awFKQrkbGDuv6ztk1S4huyaSKpeFQq-QOof0oq0YsjRUy_npf-C36_BSV2ACOQvXihdjyVNbj8Ie31y3uNK3musJ035P-L-OAhOqFWc92UZTVVc1JXQQrHO8vTnJyLNc0mmgEfnou9iK2CiPAu4mka0lxjJamuTpnFSCk8u_oDT_mnschCPOVsQv_28YwduIXtQSDsinrw_Kgt1CYMHF3nr1yGH03-YDsZ_tMopADig7LMzaFNBNP3FZZMZyuGYJJrfmX7somz2eLBdJHg5oWX9O7mQIK2trAM4kknc1_2FqzJTDPCOYmarmo8rXP4j_bHB6no-f_FJYDdJ7_Crrnn7jXiaosLYpxMbwkoZbb0=w629-h201-no" alt="MongoDB skip, limit and sort order" /></p>

<p>There’s also a possibility that we can sort data on the <code class="highlighter-rouge">MongoDB</code> side as well, provided that we’ve setup the indexing.</p>

<p>Notice that <code class="highlighter-rouge">MongoDB</code> driver will send a query when we call a cursor method passing a callback function to process query results.</p>

<p><a href="https://goo.gl/photos/rV5pRUS2f8PZJiKF7">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/nodejs-driver-example</wp:post_id>
        <wp:post_date>2017-02-17T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2017-02-17T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[The Aggregation framework]]></title>
        <link>http://xameeramir.github.io/mongodb-aggregation-framework/</link>
        <pubDate>2016-09-24T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://lh3.googleusercontent.com/KCXoOKQIIxCJYAjPPjaIyBzm5aC6PbDpMqV6--qJZ4pLLDx7EHrnjnN5ZamCPxSSIVrPqKTf9bdafFC3KGmDAXetPn7JEwzpwf8XWDFabgUGYfY63_ZqAmfUDX1e00c5RjZoA-OJRgBzVKTXnkkHutAqrWFCk5gKvCiaV7tv3nDOipIpIYbFZNldXeO7V_VjdRGEmr7sgHqaa9HxgBq1X8vZC-ApX1Fa55GOpRl2UzKgMR9WHZcs4bx4Z4MAfyZK3p3YnZ2G-KW30i-nuP7HB-GavXTpDzVM_irJiQn_ZNEQanL9ZLHtoMbCeDc1ofC-miN1vKF6QsvDXLgGBCQ6Z9Fw8n1xc9f9hWbRClHIr3xu2UAz0ASmiRGupb29LBJ0T9_ZE92JiNA9ofiKbuaLaNaoy3ueVaTg90yBwQP3CePNGeXosP35jw-21IYq4Uc6MpK0kHC7zCys4vlVEKDnrRFabIvjdRtShs3Vl1Tcq4_P0EHVCSBTxkx17l4yGZpvB3OgOjNpefX_unfdL9FzyieSHUcmSKjAenOEE2xTUvzl6RAagvZIEwLGzqtz1gdUaqKak2GSH0ixp97fomhsuXxvt1FCFx4_1SDOEJqFr1_8ITo3=w665-h310-no" alt="The Aggregation framework" /></p>

<p>And here is the Week 6’s <a href="https://university.mongodb.com/courses/MongoDB/M101JS/2016_August/syllabus">course</a> notes:</p>

<p>The aggregation framework is a set of analytics tools within <code class="highlighter-rouge">MongoDB</code> that allows us to run various types of reports or analysis on documents in one or more collections. Based on the idea of a pipeline. We take input from a <code class="highlighter-rouge">MongoDB</code> collection and pass the documents from that collection through one or more stages, each of which performs a different operation on it’s inputs. Each stage takes as input whatever the stage before it produced as output. And the inputs and outputs for all stages are a stream of documents. Each stage has a specific job that it does. It’s expecting a specific form of document and produces a specific output, which is itself a stream of documents. At the end of the pipeline, we get access to the output.</p>

<p><img src="https://lh3.googleusercontent.com/94DZVWvokpQxASevDZqq1L9tVauVMg20OGfn6zCn3V_PmA7ArWpEbqqnKURY15v3fdKcZQ323ojvKXJ0kPsWPZsLkPElFLW7pRr8suMuHqBOe4lMj1fAJvz0JiZ-qmSS6l51scltQwUEZ3algd_u-MR7Jbd5l9hcTXgQx59ryFjxf1dThIjY85am9BBvyh9baQ4fGCZ_w1QyvlwBrHHIrUFJfuMkFXzxbcva7gYAM5EBAEmmSZkCbBG5oMebhf4z0lWvC1lvWZZ0NOun7onFc-GkmLkZx1JIsh1lRnxTfNTAHSCuG2j3G4Yw3waZGhq7EvNEVRxgQIelEV9kbmBWgsj1Lp809BRzjae-Aqml_uNe-m-S1Y8r2KNRT5K5mAMJLHEKBMRIoTmPUrQsHqGHLAAB14tyeD44n4SnarML44W3u947ugYje1u-XWbfgteLJTreMS0JS09eRx5tCxbyev0RXhwBPVbmnwqZuImFRb1Xseivh3rnGz9qGfJj6wK-JC0Ez54sQp9mYAW4F7BhT8cHEU_zd1naOwMgEIEaeyrfKL0QnPU7hskAEuHwMJ4dnb9STT1gTQ8gIHJ8QjVISWR299erQ0wOFEieXvq_ffB-dxob=w656-h292-no" alt="aggregation framework stage" /></p>

<p>An individual stage is a data processing unit. Each stage takes as input a stream of documents one at a time, processes each document one at a time and produces the output stream of documents. Again, one at a time. Each stage provide a set of knobs or tunables that we can control to parameterize the stage to perform whatever task we’re interested in doing. So a stage performs a generic task - a general purpose task of some kind and parameterize the stage for the particular set of documents that we’re working with. And exactly what we would like that stage to do with those documents. These tunables typically take the form of operators that we can supply that will modify fields, perform arithmetic operations, reshape documents or do some sort of accumulation task as well as a veriety of other things. Often times, it the case that we’ll want to include the same type of stage multiple times within a single pipeline.</p>

<p><img src="https://lh3.googleusercontent.com/mWNoePqRo5B6KHaTT_8A9oGoGdTTS-uWCYGJtWtV1e_kRREELGt7LYAI31BKR7isICF4peK1z7CG21QKGh7XJZlnfB55f48SjanovPRTihvSN7FZYqV3rz4Vprpb7t2nyLQcLaHUbSiKKK3SXlZbIkattNe_ISn94u9j2bOcYsXqVHQNPKYuWZ2ndECd-x8d1OMIS5q77q2w7Jo46A4D1JKuFFLf0KncTjb18kif2VUPX67Iq6nlAKGXl2_WEOxGlF4THp6qWbt-o7MKN8caiexQ5TE7SyD5YQE3vZgLyil_bwj801UBp3dltkpZMb5Iy_Hiq4sHCwd9wLC-_rxEMLu1N7Mi02qCkPbxwO2p085UF5zRqwv4rvdN4SHay_8XGOZEVoa9pC0RG3FXri3oNr5mMv6N15CezjpxwG-uM4bTL4W7lx5dr2ecUWiPDLG0_hK3KA03SiNuQpCDIV39_lY55aaXOrTnZO-97hBJNcKgJJgqDGJ7er9PHzofNgej3O38NDvT4Bm0aYBCl0Fa4fWGB9Qq3pD_aHtX09Kkylem8HESLS_zSg1mzWSYfVMr-95sb1zEceFJqCr4cVMod3VkShYDpemVxVN8N4RsdkwguDTX=w1359-h541-no" alt="same type of stage multiple times within a single pipeline" /></p>

<p>e.g. We may wish to perform an initial filter so that we don’t have to pass the entire collection into our pipeline. But, then later on, following some additional processing, want to filter once again using a different set of criteria. So, to recap, pipeline works with a <code class="highlighter-rouge">MongoDB</code> collection. They’re composed of stages, each of which does a different data processing task on it’s input and produces documents as output to be passed to the next stage. And finally at the end of the pipeline output is produced that we can then do something within our application. In many cases, it’s necessary to include the same type of stage, multiple times within an individual pipeline.</p>

<h1 id="familiar-aggregation-operations">Familiar Aggregation Operations</h1>

<p>As our first step in developing aggregation pipelines, what we’d like to do is take a look at building some pipelines that involve operations that are already familiar to us. So, we’re going to look at the following stages:</p>

<ul>
  <li><code class="highlighter-rouge">match</code> - this is filtering stage, similar to <code class="highlighter-rouge">find</code>.</li>
  <li><code class="highlighter-rouge">project</code></li>
  <li><code class="highlighter-rouge">sort</code></li>
  <li><code class="highlighter-rouge">skip</code></li>
  <li><code class="highlighter-rouge">limit</code></li>
</ul>

<p>We might ask ourself why these stages are necessary, given that this functionality is already provided in the <code class="highlighter-rouge">MongoDB</code> query language, and the reason is because we need these stages to support the more complex analytics-oriented functionality that’s included with the aggregation framework. The below query is simply equal to a <code class="highlighter-rouge">find</code>:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, ])
</code>
</pre>

<p>Let’s introduce a project stage in this aggregation pipeline:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded_year: 1
  }
}])
</code>
</pre>

<p>We use <code class="highlighter-rouge">aggregate</code> method for implementing aggregation framework. The aggregation pipelines are merely an array of documents. Each of the document should stipulate a particular stage operator. So, in the above case we’ve an aggregation pipeline with <strong>two</strong> stages. The <code class="highlighter-rouge">$match</code> stage is passing the documents one at a time to <code class="highlighter-rouge">$project</code> stage.</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    "funding_rounds.investments.financial_org.permalink": "greylock"
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    ipo: "$ipo.pub_year",
    valuation: "$ipo.valuation_amount",
    funders: "$funding_rounds.investments.financial_org.permalink"
  }
}, ])
</code>
</pre>

<p>In the above example, we’re promoting deeply nested fields to upper level in the output we’ll produce from this aggregation pipeline. If we specify <code class="highlighter-rouge">$1</code> in the quotes, <code class="highlighter-rouge">MongoDB</code> interprets it as give me the value identified by this key. We cannot change the <code class="highlighter-rouge">datatype</code> for a value from the project stage.</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    "funding_rounds.investments.financial_org.permalink": "greylock"
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded: {
      year: "$founded_year",
      month: "$founded_month",
      day: "$founded_day"
    }
  }
}, ])
</code>
</pre>

<p>In this case, we’re taking the top level <code class="highlighter-rouge">founded_year</code>, <code class="highlighter-rouge">founded_month</code> &amp; <code class="highlighter-rouge">founded_day</code> documents and showing them as part of the nested document <code class="highlighter-rouge">founded</code>. Now, let’s extend to <code class="highlighter-rouge">limit</code> stage:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $limit: 5
}, {
  $project: {
    _id: 0,
    name: 1
  }
}])
</code>
</pre>

<p>This gets the <strong>matching</strong> documents and limits to <strong>five</strong> before projecting out the fields. So, projection is working only on <strong>5</strong> documents. Assume, if we were to do something like this:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $project: {
    _id: 0,
    name: 1
  }
}, {
  $limit: 5
}])
</code>
</pre>

<p>This gets the <strong>matching</strong> documents and projects those large number of documents and finally limits to <strong>five</strong>. So, projection is working on large number of documents and finally limiting to <strong>5</strong>. This gives us a lesson that we should <strong>limit the documents to those which are absolutely necessary</strong> to be passed to the next stage. Now, let’s look at <code class="highlighter-rouge">sort</code> stage:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $sort: {
    name: 1
  }
}, {
  $limit: 5
}, {
  $project: {
    _id: 0,
    name: 1
  }
}])
</code>
</pre>

<p>This will sort all documents by name and give only <strong>5</strong> out of them. Assume, if we were to do something like this:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $limit: 5
}, {
  $sort: {
    name: 1
  }
}, {
  $project: {
    _id: 0,
    name: 1
  }
}])
</code>
</pre>

<p>This will take first <strong>5</strong> documents and sort them.</p>

<p>Let’s add the <code class="highlighter-rouge">skip</code> stage:</p>

<pre>
<code>
db.companies.aggregate([{
  $match: {
    founded_year: 2004
  }
}, {
  $sort: {
    name: 1
  }
}, {
  $skip: 10
}, {
  $limit: 5
}, {
  $project: {
    _id: 0,
    name: 1
  }
}, ])
</code>
</pre>

<p>This will sort <strong>all</strong> the documents and skip the initial <strong>10</strong> documents and return to us. We should try to include <code class="highlighter-rouge">$match</code> stages as early as possible in the pipeline. To filter documents using a <code class="highlighter-rouge">$match</code> stage, we use the same syntax for constructing query documents (filters) as we do for <code class="highlighter-rouge">find()</code>.</p>

<h1 id="the-unwind-stage">The $unwind stage</h1>

<p><img src="https://lh3.googleusercontent.com/JQSpp4ukNmQnAcbRCGF-PfzQtcLuCrXSPiI1ZtOBz6GLHmBhU85WgUf0ksM_CtNcyxMlHDXYfC6fIXSr6KR6zfIr6mhQG6e_aHIHaBZhBXC0mnKU7QJbn67OVfVzkHuQEcZvegnifGCzf9_DnBKYeNUbJWPr2rLNaxXfhIhHFb0_O_waybvY6o4jiQlYUpEFnNVv5t-97VngtsBwHL1XP5sKmhUuSXUbIJIxQKNysX32QWgH4T82R2p538N1rMIpMoBJi_JuGGT09gFX6YOsLG6I2qjLlMMdtzBnB64lpC8_GkIiFshvQ_6Fo0_G-pbGpZKP-G_mqeYpiqF0jCV23ld1vPZP_K2VQoM_hHON80mKBPmSq4-8-ZuJePm7cB_AcE_AFP7HimrC9KZ_WOvyyuNquDnfjgCyNKXAJqpyxgQkycqZKUl3NiEl-6QNMKTuz3nwr3obtkHYb10yWlvijbrSejmZ0Hdb4i_OQX0VC3MkY24081WgGP-DnIYC0CAIWc4OMdqSopEN1Czxa_YK9B1tGSai63y2MpF7H-b8VYb8lrpeCZkXpKPuazkPHmoLzXZOO691ADRq3M1SY1hoGoE13dkf4AUySkXWqprWr4c9k3L1=w1316-h677-no" alt="The $unwind stage" /></p>

<p>The <code class="highlighter-rouge">$unwind</code> allows us to take documents as input that have an array valued field and produces output documents, such that there’s one output document for each element in the array. <a href="https://docs.mongodb.com/manual/reference/operator/aggregation/unwind/#examples">source</a></p>

<p>So let’s go back to our companies examples, and take a look at the use of unwind stages. This query:</p>

<pre>
<code>
db.companies.aggregate([
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $project: {
        _id: 0,
        name: 1,
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } }
])
</code>
</pre>

<p>produces documents that have arrays for both amount and year.</p>

<p><img src="https://lh3.googleusercontent.com/IIQAkdNosQFdyCWm4QRSwFcX45-5Eo3mC48rIKKtZsOStC7VllsxXMqrOX9yOH3BE4FGIrOJyxWoBCzEcA15_Yl-FXiBn_rWgvGehqIfceqIWyh3-FRsMviGbtpDOaSkzqBkf9SAdOQVamwAvJS_ssuAETcWETiVpCYSvVt2SQ6geaV_UwPy5LIVB2WtTriJFxL4KYagPyEkOCllkCnQvHDbIPYKqesHUCTl31uuOlpQL8rPZUh2s4uv7FLgkbYHkQD9EiXEL2ExIPDPLFjQ3aNmnzVO7h8a5WY4pOsSVPldZZg3MNPYLysLLbhLWgF1O-qx_bBtP66vgq2YdLnq9l_fhgl6yqY0-71kLVnKA1ZSCCgSc6WUOKouA7wI0H9-771lq41SLFqQuuPlFS_g5RDM1YVUBVTtJgnUMp-M3cNIw-kZz4tF2mZGuUWSF6yZjxjJeGfy-ZlQFzwsmOLqENCmaWXeq05J693xyV3nnrHEuopg350evUllzhNiiloMYNws4K52NPOPOnufwf9onFxa13wYHNRYEnFftcJ4ELPDJ7PFzGDFb9FGFSwvtI7BnIJdelCzb0XT-L39X7gDDyRiv1w3EESRF12EcUOoeUwp-B7V=w217-h185-no" alt="project output" /></p>

<p>Because we’re accessing the raised amount and the funded year for every element within the funding rounds array. To fix this, we can include an unwind stage before our project stage in this aggregation pipeline, and parameterize this by saying that we want to <code class="highlighter-rouge">unwind</code> the funding rounds array:</p>

<pre>
<code>
db.companies.aggregate([
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $unwind: "$funding_rounds" },
    { $project: {
        _id: 0,
        name: 1,
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } }
])
</code>
</pre>

<p><img src="https://lh3.googleusercontent.com/Cmoobrm_U8Pj8Bq6pu3luA9kc8-EDumWXTT1K5UymkHXGXhkZjhjed3ZOZYeMuQB0Q66EjOcspiRaOeaKtcSWoUx1b_-LR-6FI1QfMT6_tA1mEFxk04LIUr8veYCPMGj4W9AwIztSE4fNYFvfzl433E2-A22rP86TwNnvqnxiPy9Cze4GQKQGKG45wulQVuaq9xG0_eEV4QWkoSqRmGYT45ZTC6AtJAVWr8tuYh524a0D1BfengaTOeXewSQesI9S8lWDtaerN1ViyjwzK9AWnMx2U7_ftZC4QbXpLytuRl9uOLUzxQtr0mThiF65YzjFi831oXG6L3710JbMCO0srMjQdL1NHMMOcczXSnKbKoei5OJciAVb5xS35RpfiIy0dt4GBy3u_P4ZYjGx9QA8O9aZJCWn-ZFTnylQ3EvwCdMNZEljzXt-VFd3yarikgzFK4lfQaHhX00AYl5-qD4xGDFnkemq2DZb0eO51RwTSZjIhgit4VAvTU3IdcyFqDe_EHKiX9jt4AuVDOMOvQylO9BStwQmlAflaneCA4iQJiQb2sg8ejzvW1iF2CSXkj8LG7UTzBrF8IGh78KYgX7exI58NtGtsnCVj5uPt9Ve9ohlowz=w503-h256-no" alt="unwind has the effect of outputting to the next stage more documents than it receives as input" /></p>

<p>This is how the document looks like:</p>

<p><img src="https://lh3.googleusercontent.com/ahadVLSLDSIfwdcYIu0o-MdwGGsf27JpNERF4RJE-naDeD0O7aqlVkWi4kj1mDHjsqRTTCG_bO4192koLbrBt4a-4o75IiTHsGfF6kXnq2iXfC88dXPf0lVW3bqdphCd7F8_3gXKxh3qoIG3O1fsbn284lXhAghSXeC6QMfsDCAVOl9FZWSoNkTt4fxhy2QuwsJ08FtXUMs2zciyBUbqyj62_vUlJHyfhA_ZlgPONXH2s3N1Wvm7TVb92cBUKfruSq29Ih1wnGVXYSQvEvqYaDr28dv6AVZ7R-RJL9lXyEG2XCykipf6LsuoubQrYAEiDmGqkn2WOWPCi0_f_o6cbLp7zZeLzD8nrIfkMf1jgpfDOQsyObksd_me1QVdEpPgZampvI-h4ksSFs0lK0KfLEOJvCAN8NZ42Iz877qs95lor-NNc5RO1kmB0IszI7c1T2mDBM4vjb8zUZMa7qdk0HepKvzxUi9xYlbO_o6PcOeegCK-RKgs5hWlYeB_CJqqf1RB09O_tNWyC9AJsVCdKSpEYGUJFqJ5Y2D6OJRXJ_mM9GZh8EuSI9ra4Rr5y6Jg-RscMefKVh-e2O7NwT61mq4EmTJOV59Oob_c3uo3iVS0Pv-W=w831-h511-no" alt="original document" /></p>

<p>If we look at the <code class="highlighter-rouge">funding_rounds</code> array, we know that for each <code class="highlighter-rouge">funding_rounds</code>, there is a <code class="highlighter-rouge">raised_amount</code> and a <code class="highlighter-rouge">funded_year</code> field. So, <code class="highlighter-rouge">unwind</code> will for each one of the documents that are elements of the <code class="highlighter-rouge">funding_rounds</code> array produce an output document. Now, in this example, our values are <code class="highlighter-rouge">string</code>s. But, regardless of the type of value for the elements in an array, <code class="highlighter-rouge">unwind</code> will produce an output document for each one of these values, such that the field in question will have just that element. In the case of <code class="highlighter-rouge">funding_rounds</code>, that element will be one of these documents as the value for <code class="highlighter-rouge">funding_rounds</code> for every document that gets passed on to our <code class="highlighter-rouge">project</code> stage. The result, then of having run this, is that now we get an <code class="highlighter-rouge">amount</code> and a <code class="highlighter-rouge">year</code>. One for <strong>each funding round for every company</strong> in our collection. What this means is that our match produced many company documents and each one of those company documents results in many documents. One for each funding round within every company document. <code class="highlighter-rouge">unwind</code> performs this operation using the documents handed to it from the <code class="highlighter-rouge">match</code> stage. And all of these documents for every company are then passed to the <code class="highlighter-rouge">project</code> stage.</p>

<p><img src="https://lh3.googleusercontent.com/QEaWqaVrBK_E32vf1f7livxwP0vCmWmubTDMb2Om-Nj-8G9zD0zB-VUfocK0mGw-oVd_Y5PiVqzHBM85CFstH8LBCj5KxfhSE7oOy21pQqB9i3Cb1ZJXSIxrR09K8yisWUTElyDn6v0ylo4GYer-BulP9jQSSLbRc3bHl6zlDGPN2x3hupVVeWLx9ElNeAxSMzdf5xrpaRITIYteJI37Cd_7MnSzLb60titRFd3JJHk31w6fHUTr5RSx1i25i00xHUaLDh0pMDtyVA-Vi8y-vsOIkAC3WSpm1ky0kZWTfGBbc-_C18ZaI3DGo63NjRpfHglYZ5gQ75f07-s3tjsdRCDTBE6GjTolNdthOQJVs8-TR8mPfToENxrRhX0QeXzIgzuObIqfJRlkQoMn0qg74x658k4nbkxsphDQY64EziDCEFOBO5YU5rrhlgDZpNM1OeMeeP2wDv7k3_dBsyTXcr3zjcUQ_XVfloiKeEnlx8i1bsSzfkJd2VduApu-n8u8ZGYqgzuhGqBfVVbQ_OMw1rQVYmezuQ5iGejws6nLVjS7Y-WMIa5rXmokJU65pSpoMLolSKLKd2egy416bIpVKb_Co-z7828PkNh1O20EthPq0bKn=w1324-h576-no" alt="unwind output" /></p>

<p>So, all documents where the funder was <strong>Greylock</strong> (as in the query example) will be split into a number of documents, equal to the number of funding rounds for every company that matches the filter <code class="highlighter-rouge">$match: {"funding_rounds.investments.financial_org.permalink": "greylock" }</code>. And each one those resulting documents will then be passed along to our <code class="highlighter-rouge">project</code>. Now, <code class="highlighter-rouge">unwind</code> produces an exact copy for every one of the documents that it receives as input. All fields have the same key and value, with one exception, and that is that the <code class="highlighter-rouge">funding_rounds</code> field rather than being an array of <code class="highlighter-rouge">funding_rounds</code> documents, instead has a value that is a single document, which is an individual funding round. So, a company that has <strong>4</strong> funding rounds will result in <code class="highlighter-rouge">unwind</code> creating <strong>4</strong> documents. Where every field is an exact copy, except for the <code class="highlighter-rouge">funding_rounds</code> field, which will instead of being an array for each of those copies will instead be an individual element from the <code class="highlighter-rouge">funding_rounds</code> array from the company document that <code class="highlighter-rouge">unwind</code> is currently processing. So, <code class="highlighter-rouge">unwind</code> has the effect of outputting to the next stage more documents than it receives as input. What that means is that our <code class="highlighter-rouge">project</code> stage now gets a <code class="highlighter-rouge">funding_rounds</code> field that again, is not an array, but is instead a nested document that has a <code class="highlighter-rouge">raised_amount</code> and a <code class="highlighter-rouge">funded_year</code> field. So, <code class="highlighter-rouge">project</code> will receive multiple documents for each company <code class="highlighter-rouge">match</code>ing the filter and can therefore process each of the documents individually and identify an <strong>individual amount and year for each funding round for each company</strong>.</p>

<p>We’ll add an additional field for understanding this and in doing so, we’ll identify a little bit of a problem with this aggregation query as currently written. So, what I’m going to do is a <code class="highlighter-rouge">funder</code> field and this will access the <code class="highlighter-rouge">investments</code> field of the <code class="highlighter-rouge">funding_rounds</code> embedded document, that it gets from unwind and for the <code class="highlighter-rouge">financial_org</code> gets the <code class="highlighter-rouge">permalink</code> (refer to the <code class="highlighter-rouge">$match</code> filter in the below snippet).</p>

<pre>
<code>
// Add funder to output documents.
db.companies.aggregate([
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $unwind: "$funding_rounds" },
    { $project: {
        _id: 0,
        name: 1,
        funder: "$funding_rounds.investments.financial_org.permalink",
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } }
])
</code>
</pre>

<p>Notice, that <code class="highlighter-rouge">funder</code> and <code class="highlighter-rouge">$match</code> are very similar. We need to be sure that the funder is what we have stipulated. In general, when building aggregation pipelines - it’s a good idea to put in checks as we’re constructing them to <strong>make sure they’re doing what we think they’re doing</strong>. The output looks like this:</p>

<p><img src="https://lh3.googleusercontent.com/2psAv6IgTI_UgQQnxyRfDBEFmk1iQ9OYuAuljJV3RnA5_M_R3BJnTyi-xt1CeLTmn4ShCPhY_2XMwb06mKsNyroyaJeddpIsowrE9vJSkZoqZmRqxm1FG2eD5ICDIEaZ2Dvw1CdsGIYM2vJQhFy9VcdpKotCrYcemm--Zv-drkI1I3UhpaM4pvKlH_6PuHU8dQjXgt8VHLXmt_Q7elbUMcMdhJGjAQ820Y_dOPXElzmnL7kjoavHyBFS0q1I2AiHogKkwcoNTTaqppxjmu_IIy999nWDT4F5mnCMBPs4SuU-PP2Avu42ictBX7b5KNC2fsalTlIydKv0g1M2lH2_zCgtGXBxqBeO0LgWiotj0T-vm_1206zCfIshioPMo6DXu68FvshVAdUiMTUSuO1NBn_yiToGL_cYYHATBqfdG7xtVdqUEzrvYmQNCcjXt5RgVio2M7-RKau9x3mBguS2Lpqlevj-WojZku0VW7r63F0bngTHoIVnpUnsxa1yoXzqIg0XPZxxmFKtx9s0N2Ae5lJ3p6Rd394vrOiSLAgWHep77Gs8G_OLvR8EXmtedwZhpkgcJbgoLEHFbP07IVTVzZ2IbPvlM4VZgWVUUCzOsF5DOQyU=w283-h245-no" alt="full output with funder details" /></p>

<p>If, we look at the document and look at the <code class="highlighter-rouge">investments</code> field. We find that it’s an array:</p>

<p><img src="https://lh3.googleusercontent.com/I8_YY5_Q_UTNQK7iBUkfYCMnLZ0fQrIW4A_EFVels2Cvb3k0rYG7iOy1a6pvsqr8Qe4hzQonGjg_nu-V_ZGVzRDktnOkUJTrg5PTJz3XksEhRN0TE0pv2auYq1naIYb5wSqbyFMAOKGi9zmbcwLT_328_QPDqIyuEz4yyfMuQ0FaSExSNonSP3ooPo1Lsie-SypiLPZsxlvBX_lYplFF9GjLsTHuUdHQUeMW6yKuLyvj_aEQ12eN5UJgrIPTpN_xFTWwwUG25_8Ryy2ZlU-r9mKqnD550jUQx-2n1EYKUVQknMOhEFuzX736ojmpVfRQQ2R7jimAYTfY37G6QhRc5kLXNGNWwDV6Z4TM7OUiBF25ZztPNe4nHQsPE715OD77Gvv_Wq0VEsUsR52rnhmC75w7c4STurmmgOMo8ClSZJVt8FZpsjEGIdsd5h6PvlNcTJ9c1rZHPjDcWFDviclrU9TkSFQZMXNV85UtmgiFIx4CUNXe2pi2XUniZu4FvEkNNCtEUvwg0ORB1FSesbi3nE1aIq1oR4P6xPDTErviRKez1KMz9MIUy3wc3rWIgpJWQZr49ZlzyMdFtOW67VUhlSssOcnrz5ITtgR-0yCuZpjkil-R=w308-h163-no" alt="investments array" /></p>

<p>Multiple funders can participate in a single funding round.</p>

<p><img src="https://lh3.googleusercontent.com/yyJWT0lN-_OecyYxitRAatHTv2TZZIS91GgYKSumrs0p3ySLmk44d0p6ZM0CUUUzKuvXtNXF-PC5WctxVb-52PQFgk6GqifOp2HdIBmwzhUJlzLqRXA_zt-fP3ujalNaC3uLcFmI-jKzpcjpgs1UbQ29EMTyqtv7wa6N-tvZCpiCqmNuxjY8cGpEMwzEpTylIq1udDv8nhX3PkvT9MaFRoRgkoaidXLgHFkzrPxh6xX18mxGoPM1ebvUx-Q6OJ6LLCKcyssm5ArBN8M6ZeK6AIFJuFcLzjApo2MDpu_FnlFc0EizSMBJXmzhcYZ92AHckT_nj5INCYNIyUGFCA7uBonjrUz1anaEmCUPQmX9_4W9viNDym_ZCnxRiOcxecnhz5SjLQqtxE9g01FoWsyP6gBIHEJfB_LXOKOxdjksgrCfr45yrS_2mc1-U-8sPeFioCjFpi9DjYWj8fGmJxKgYEnytbz1YY5iRRfG_CYSgalEsE5KpBknRsQw4fH3BSbNBF3-xRJIv65NcZPc_LbfCVvRi0LabV2kPIPSHzzAZJ-O9UTZCaBDjw6AqlG_fz5ClVmgju1-iRtQ-G75pGA0Pjrj4Ia0eq1rWEc-c8aLhE2yQGf4=w380-h305-no" alt="multiple funders" /></p>

<p>So, <code class="highlighter-rouge">investments</code> will list every one of those funders. The output, as we originally saw with the <code class="highlighter-rouge">raised_amount</code> and <code class="highlighter-rouge">funded_year</code> - we’re now seeing an array for <code class="highlighter-rouge">funder</code>. Because, <code class="highlighter-rouge">investments</code> is an array valued field and as we know, the semantics for a project, on an array valued field is to produce all of the values for whatever field we’ve stipulated.</p>

<p><strong>The above query returns companies for which at least in one of the funding rounds, Greylock participated in</strong>, what we’d like to do is <strong>constrain our results so that we only see results that Greylock participated in</strong>. Not, all the companies for which Greylock participated in at least one. So, in order to do that, what we’re going to have to do is figure out a way to filter this further. One possibility is to <strong>reverse the order</strong> in which we’re doing our <code class="highlighter-rouge">$unwind</code> and <code class="highlighter-rouge">$match</code>:</p>

<pre>
<code>
// Add second unwind stage.
db.companies.aggregate([
    { $unwind: "$funding_rounds" },
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $project: {
        _id: 0,
        name: 1,
        funder: "$funding_rounds.investments.financial_org.permalink",
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } },
])
</code>
</pre>

<p>This will guarantee that we’ll only match documents coming out of <code class="highlighter-rouge">$unwind</code> that represent funding rounds that Greylock actually participated in. If we run this, we see a <strong>slight delay</strong> - but then we see that Greylock is one of the funders. To make it more clear, we can include a second <code class="highlighter-rouge">$unwind</code>:</p>

<pre>
<code>
// Add second unwind stage.
db.companies.aggregate([
    { $unwind: "$funding_rounds" },
    { $unwind: "$funding_rounds.investments" },
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $project: {
        _id: 0,
        name: 1,
        funder: "$funding_rounds.investments.financial_org.permalink",
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } },
])
</code>
</pre>

<p>Which outputs this:</p>

<p><img src="https://lh3.googleusercontent.com/76FS_Pi3aVLXHA_uNgGeSKCB5ajb5xGmX9oSeaa4kg1be89iLn_m132jiR229YRdpC7WfLrBKtqRa2N57lUTH2xmsqLu4z9Gydwrzmudr0oQGc6BDicOgtdXlPKR3xfoOOjAodcKE4ocOZ4epX81moowkp-C_nMr6jMO--0iTSaGeNdwHXNp68LFuzGd_gKtB7Ky1_T60g633QBI-RJCFR-o3DXWcbm7V_tyfduNDIoCOEXX4NDopnmwaTu4sqXP3HHH9MfdaPo5yjjs66A9CaYv_DXHhmnKQIWzlixr_pcpwAGvq4d6zOWipePqbh3rmb7kx0Jd8AvjEwQOJZBRRn0TInaKczLNjsIFX_UoNLhqhF2P5cdKBY88r7tiCDjs1OuQnc-64ZPgmDKXy_nWV8SCv6jqlhdbe_TwsmayiaOQwl3NbY2TOD0c8bDTHvpmlc-vRg3qt5AUY6cmsyfXkxSpc_ksR0uegq0MwGN7PtoJ01Tj6fXtnvAX0MqtpwT5LjHOxgYp43yCc1lpdC8u1wKNRRlWW2JyMjJbC8YHnd6Sx0HkR0yfR2l35BwBnjeTJL8NPxbCXVcuP0R9E2H2yq4CB-h7RF2FrokFP4skkz3KAkc6=w254-h218-no" alt="double unwind output" /></p>

<p>So, what are these two <code class="highlighter-rouge">$unwind</code> stages doing? Both of these are running through the entire collection. However, the <code class="highlighter-rouge">$match</code> operation should occur as early as possible. So, that for each stage we have least number of documents to work with.</p>

<p>So, what we can do is - leave the <code class="highlighter-rouge">$match</code> filter as a first stage in our pipeline and simply include a second match:</p>

<pre>
<code>
// Instead, use a second match stage.
db.companies.aggregate([
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $unwind: "$funding_rounds" },
    { $unwind: "$funding_rounds.investments" },
    { $match: {"funding_rounds.investments.financial_org.permalink": "greylock" } },
    { $project: {
        _id: 0,
        name: 1,
        individualFunder: "$funding_rounds.investments.person.permalink",
        fundingOrganization: "$funding_rounds.investments.financial_org.permalink",
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
    } },
])
</code>
</pre>

<p>The first <code class="highlighter-rouge">$match</code> will return company documents for which Greylock participated in at least one of the funding rounds. We’ll then unwind the <code class="highlighter-rouge">funding_rounds</code> and the <code class="highlighter-rouge">investments</code> nested array. And then finally filter again - so that any funding rounds, any documents that represent funding rounds, that Greylock did not participated in will be removed from what’s passed on to project. <strong>Sometimes, we need to include multiple stages of the same type</strong>. This <strong>query is a bit faster</strong> because of less documents.</p>

<h1 id="array-expressions">Array Expressions</h1>

<p>These expressions are used to work with arrays and can be used with project stages. There are a couple of different array expressions such as:</p>

<ul>
  <li><a href="https://docs.mongodb.com/manual/reference/operator/aggregation/filter/"><code class="highlighter-rouge">$filter</code></a> for selecting a subset of elements in the array based on a certain set of filter criteria that should be passed, in the documents, passed to the next stage in the aggregation pipeline:</li>
</ul>

<pre>
 <code>
 db.companies.aggregate([{
   $match: {
     "funding_rounds.investments.financial_org.permalink": "greylock"
   }
 }, {
   $project: {
     _id: 0,
     name: 1,
     founded_year: 1,
     rounds: {
       $filter: {
         input: "$funding_rounds",
         as: "round",
         cond: {
           $gte: ["$$round.raised_amount", 100000000]
         }
       }
     }
   }
 }, {
   $match: {
     "rounds.investments.financial_org.permalink": "greylock"
   }
 }, ]).pretty()
 </code>
 </pre>

<p>Here is where things gets interesting. We’re using a <code class="highlighter-rouge">$filter</code> expression - it is designed to work with array fields and has <strong>3</strong> fields we must supply as part of it’s parameters, or this document that we set as the value for our <code class="highlighter-rouge">$filter</code> operator. The first is <code class="highlighter-rouge">input</code> which is an array, <code class="highlighter-rouge">as</code> specifies the alias we need to use for the <code class="highlighter-rouge">input</code> array throughout the rest of the filter expression. And the <code class="highlighter-rouge">cond</code> parameter will provide the condition used to filter whatever array we’ve provided as input selecting a subset. In the above case, we’re selecting elements where <code class="highlighter-rouge">raised_amount</code> is greater than or equal to 100 million. There’s <code class="highlighter-rouge">$$round</code> - where <code class="highlighter-rouge">$</code> refers to a variable named <code class="highlighter-rouge">round</code>. <code class="highlighter-rouge">$$</code> says that we want to <strong>dereference a variable specified in this expression</strong>. This is to disambiguate the reference to a variable from a reference to, say, fields in the input document. Returns an array with only those elements that match the condition. The returned elements are in the original order.</p>

<p>Let’s look at <a href="https://docs.mongodb.com/manual/reference/operator/aggregation/arrayElemAt/"><code class="highlighter-rouge">$arrayElemAt</code></a> for returning the element at the specified array index. Let’s pull out the first round and the last round (maybe for comparison).</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "founded_year": 2010
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded_year: 1,
    first_round: {
      $arrayElemAt: ["$funding_rounds", 0]
    },
    last_round: {
      $arrayElemAt: ["$funding_rounds", -1]
    }
  }
}]).pretty()
</code></pre>

<p>This requires the array name and the index of the element which needs to be returned. 0 means the first one and -1 refers to last one. -2 would give the second to last or penultimate element in the array. The output will look likes this:</p>

<p><img src="https://lh3.googleusercontent.com/jbmORWw7GdoYCVwpjK8xMSlI3ZrwxdendKuhNTg-t25RnY98xAeDeBLkOispOhYyrGJRzSLBOz2ml2JiYKNFD5sw151gAcSHojE_cJFjf3b5OnM4v6J-PGegrdQRmd9_7Zv0-JMrTcpirTkW9gqWGQqKtA15A1ayNLAm3C-sM1fvDWErvD4A_9dRRm-D84_-BxJ2syv6BQKqfb7rfJ5ANjAFvWfaZz_onKoJmS7WszDw1ccjFIVSeK3lKoAwiFMTAlpsn1IuJkYTei6c87HiW0F2m7TaaHa4_49yvlek-ElshOGtD9Rxc4v7eJhsyJ5_6pMqyrMIUlB1rU-fEdlLYJJJDcdfOyKDRXQ3ahbdPjPrm3keiX1mxXcd5jrD9qGcCXvH8e8MVGBXkAahvRF9woXhsHSmrcPWyP5Sw5XwMpC8ghCKFZTiKvQEaaGPldm0Nbjgxl5U4pUVjNCvx8ZL18VVfZOVKtVywqoEJbJu4nrf5YZbyCcAV3BjAZQ-ylxmmxK0biKblZ9gpOwej5zGFrMbr5Me_OPsKr4M3Ljbqtpf2XfxHlktE1MxqeXgoshxrAqlX39DlfgXH-wZBLjIPnOgthObM4vyilFelNPV5rJyuh7h=w387-h344-no" alt="arrayElemAt output MongoDB" /></p>

<p>This can also be done by <code class="highlighter-rouge">$slice</code>:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "founded_year": 2010
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded_year: 1,
    first_round: {
      $slice: ["$funding_rounds", 1]
    },
    last_round: {
      $slice: ["$funding_rounds", -1]
    }
  }
}]).pretty()
</code></pre>

<p>Now, related to <code class="highlighter-rouge">$arrayElemAt</code> is the <code class="highlighter-rouge">$slice</code> expression which allows us to return multiple items from an array in sequence beginning with a particular index.</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "founded_year": 2010
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded_year: 1,
    early_rounds: {
      $slice: ["$funding_rounds", 1, 3]
    }
  }
}]).pretty()
</code></pre>

<p>Notice that the index is 1, <strong>skipping the first</strong> (which is 0) funding round.</p>

<p><img src="https://lh3.googleusercontent.com/9pR9sntbgYGEn55vmdQxZclfgrluLL-HJZN-db1h5IUvkioZh4iacHDOos01l8opC46mnhs-u2Lx-IbhRblSl7dkaazxD8t25YuQ3xPHFzVXjK9AlVoU8dp1PavCGNjqM9cQ1F4zXHIapkvmhRqlhB6OfSZ8YZ0ELqETQB0mxcs-QlgAJJZcD2c6Vr1iTcfn7MtXV-r7dF4Vofk5VnK0v6F33lhECRYKcj7Z1j6nICfw98bE0OA58UrSnM_xdbdlLdXqeutuQkn0aVXIHGMFrwIE4920VosjQX8k5k9F12oWD1aBI8EYCHMmwKc1MJqrAYHwMVHF_TNkCzamLeZ-C-2mPKzQMikJhkfbj4y1rZy8mm8oyziK0VWSkThVN8GdUajFWcuX1Z4uqC3D8Yaenq0aBjdRiFVZN5jxEkJkkBuAI_UQYin452KKmjuwdJR4dn7jRkCvBG-NgCeAwJUteUfhygbhVhsJk2DWhcsTEf_XAjA-LDbNNsiY8xJ-i3JuWTQaKI5vyjc1tIwRtlvSi6ctmjbPP5_OyjQk18ePEC-4AGW6T0229_B0w906xPK1vzjoVa4prXaQ2_RwzdX6H0PxmgSnTZlMIQCwOhDzjmBBAGGz=w451-h363-no" alt="slice output in MongoDB" /></p>

<p>The last one we need to see is $size - which simply returns the size of the array:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "founded_year": 2004
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    founded_year: 1,
    total_rounds: {
      $size: "$funding_rounds"
    }
  }
}]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/BN7z1zh7kg2HmGtqidwYad_KGYtrbERVXexoVbkHackZMWe2_mhD4OgYx83hkXDuwyVS-WYF4ptPsiVCKNlqDH_CWHSYygIDKAb7WQthnb4tx0v4e_aXwFG_qb2iJqDyphw8kjwpZTAfz5V0dPhcWS7_fRMDMhhdcYM_lsYGJIS4_tkqkx75sRlQV9U4VS_h62msxE3cwAqghxoGO3Q7aHbBkI3JqYEw1V6cBOveaAlxUIxm1aRT57Q_z4OxG0I2GXSNmBn4IqtM1hu-mm3wlILzd_PKxxqSclJSMakB7ET1W2HKZGoGpPxiidES0ii2__DMaHCqQoj6TYzzGCWdRv6Rn3RMaVJPHhxKJHXMzLY6qM6uMZ_KAb0DwmWnwMBWHze2YUQkWk88k8xJrPVYb64P-DOhLsEOgoxALVyPINicIN3_QUrdLtOPO8b_MinfoRXUG-sVH0sOERtDlZyANJuoJTE2WJEbtPTmQM7d2b-by2NkIPlz1DR5kTH83F9GKf0zFRhuUf2VoLXWS-XF5IJ49VbE_7QT7MkVQ-BLDtzA9IcCa_ub_XiIBF8buC5M6jTzFtrJCzgxMfYZLmd5EA0VKiBcbj206D347LZNPOVLyHgT=w580-h90-no" alt="$size output MongoDB" /></p>

<h1 id="accumulators">Accumulators</h1>

<p><a href="https://docs.mongodb.com/manual/reference/operator/aggregation-group/">Accumulators</a> are another type of expressions. They involve calculating values from fields in multiple documents. Prior to <code class="highlighter-rouge">MongoDB</code> 3.2 accumulators were available only in the <code class="highlighter-rouge">group</code> stage. We’ve ability to access a subset of accumulators within the <code class="highlighter-rouge">project</code> stage. The primary difference between the accumulators in the <code class="highlighter-rouge">group</code> stage and the <code class="highlighter-rouge">project</code> stage is that in the project stage accumulators, such as <code class="highlighter-rouge">$sum</code> and <code class="highlighter-rouge">$avg</code> must operate on arrays within a single document. Whereas accumulators in the <code class="highlighter-rouge">group</code> stage provide us the ability to perform calculations on values across multiple documents.</p>

<h1 id="using-accumulators-in-project-stages">Using Accumulators in $project Stages</h1>
<p>There’re multiple accumulators. The <code class="highlighter-rouge">$max</code> accumulator gives the largest value from the passed in array.</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "funding_rounds": {
      $exists: true,
      $ne: []
    }
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    largest_round: {
      $max: "$funding_rounds.raised_amount"
    }
  }
}]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/Xzc8vJ4nLjlkIg_kNudODemBhi8LWJiT59F6b6KlooRsHiByKghGdE1wdTWZ2P07XRZS9hG3YuWWKphINh0PExnNRlzFeeeQF699EF4QUwWnNEE-sP2h5LuFbKggmVj6uRQ3AUQLrMVKFqpOPVsMxEsEB8ja7zguagxq9vBKyMA-zYnd131E1TLCONU2pmkZHmQw7uegmUI8TnJxj6pn5vtuu6x6L0hdZah0fBaaUeFL6-31-hDV47D9HTkORcjd4YBlTKmvLmvXq0Ehx3xweoNhoQuUKvQ39GN1GPiAQgmbc_zkxmjV923cEeGZVIwWKiaSXUy73q96o0DY3v9pf_CFBmc51kItw1f4vP8bn78ilCk_kMVbBdAjiaNyfyhNagHf0kDM4e3jnE4dvYVHbNgqOIDA1eU7iI1F4kxZ6xuYBdSREhxhuR0o_uH-iTtetO2g7M1DEua-Lb3L6oJ4xZxxA5-AUcHiVjF09pA_4Gm6hoDKwlPSChnENhD8h9FMQ3H9eyUpfQTvg7vw-GfyPwMrayLavpsn1HnrVJMat7_CSjaTY2Dd5uSYJsdOjJFRdW9VSAynHImsLXMT4zfFGRjx0ftr8UdgXIKUmBUGuw2DWufp=w465-h114-no" alt="$max operator in MongoDB" /></p>

<p>The below examples shows the uses of <code class="highlighter-rouge">sum</code> &amp; <code class="highlighter-rouge">avg</code>:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "funding_rounds": {
      $exists: true,
      $ne: []
    }
  }
}, {
  $project: {
    _id: 0,
    name: 1,
    total_funding: {
      $sum: "$funding_rounds.raised_amount"
    }
  }
}])

db.companies.aggregate([{
    $group: {
      _id: {
        founded_year: "$founded_year"
      },
      average_number_of_employees: {
        $avg: "$number_of_employees"
      }
    }
  }, {
    $sort: {
      average_number_of_employees: -1
    }
  }
])
</code></pre>

<h1 id="introduction-to-group">Introduction to $group</h1>

<p><code class="highlighter-rouge">$group</code> is similar to SQL Group by command. In the below example, we’re going to aggregate companies on the basis of the year in which they were founded. And calculate the average number of employees for each company.</p>

<pre><code>
db.companies.aggregate([{
    $group: {
      _id: {
        founded_year: "$founded_year"
      },
      average_number_of_employees: {
        $avg: "$number_of_employees"
      }
    }
  }, {
    $sort: {
      average_number_of_employees: -1
    }
  }
])</code></pre>

<p><img src="https://lh3.googleusercontent.com/uQ1ZUarX8PJ9XytFlKr4gOjnGVuoWpFrLw42WiOj1FGADly5h9Hu_Yal3iiRdTpsTmdh4CR7OCB-nCBae5iNoxHhdIdJvLw5tEc-ovF_ZxxjrF0TFRb92rEHeS3eH981Fg9FybqCsyElwJEzlSRf2fENCOLM86TDaNdNSdYDzbps2arTDO_av_sOO6mR8iBgDQHHhSjBVVs6csLOHuD--AHoBrAr9pX0uSvCbBaSEVi--XUpmfZClz4cI7sFZunkv-ndzwVqcKbPH5Nl5lEp4NPnXDVVf5WS3wMaBgpelpPhchX3OI8laH9_2bW1JOOXxVF4G0GiiHD2pYjiyGQvUEiWwOn1AWhVlUjcQolNoTruHPXoykTYf6i3M00ihpM-fW2MYi28ZKbWM4PynZ956vPcd8Ah3gjBkOBWlyw_08p_FfeXAhbekw9TV9gFWkcCxsNWTDwS2XOvDb9nhxVPEYWsiLWm1NvgJDprdA3MYVxvc1J1o3fjkSEldpRrTGpQVu4RJu7KGm7Zj-fCVky1_6G77TP2a6U6hh5A-NxtZhd9MCLwCvjzvF3T_BsqXfUBLO2KcdpKZZ7B3HmdsrZ1SHIdlejtcVBrfSWb3BbHqurlw99c=w626-h102-no" alt="$avg operator MongoDB" /></p>

<p>This aggregation pipeline has 2 stages</p>

<ol>
  <li><code class="highlighter-rouge">$group</code></li>
  <li><code class="highlighter-rouge">$sort</code></li>
</ol>

<p>Now, fundamental to the <code class="highlighter-rouge">$group</code> stage is the <code class="highlighter-rouge">_id</code> field that we specify as the part of the document. That is the value of the <code class="highlighter-rouge">$group</code> operator itself using a very strict interpretation of the arrogation framework syntax. <code class="highlighter-rouge">_id</code> is how we define, how we control, how we tune what the group stage uses to organize the documents that it sees.</p>

<p>The below query find the relationships of the people with companies using <code class="highlighter-rouge">$sum</code> operator:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    "relationships.person": {
      $ne: null
    }
  }
}, {
  $project: {
    relationships: 1,
    _id: 0
  }
}, {
  $unwind: "$relationships"
}, {
  $group: {
    _id: "$relationships.person",
    count: {
      $sum: 1
    }
  }
}, {
  $sort: {
    count: -1
  }
}])</code></pre>

<p><img src="https://lh3.googleusercontent.com/VxlQ5BLNDRxYL9sBNHCFzY7GMhcS4B48_8K27wsBRPcgUJ9SBERPZgHjVuXVL7_G0NWKZfv6Yp_LH14IG_KqC7qmIRJNEgfCDgAM9CkanRQxQ-3Gddth-p_o3mmn7AkecMtpUPPEKcr5ZaQ3-HBBDTsiY4ojiHIZERscBGT4MTP3hfYQraG5Og5p_VZKW1j0NmLlv-Y2cXeo_Xo2uMi5S39j827C-SQo1avlUL240qA_mc3orjeTipeYJvIOAexiZKItWcPTn5_iz6-7YHQaQ8ojKp562tzbP50NDmdHDvByRMzLm5X41kWQWPOVzv4vwidAv8LkWaE8eonyd1a9d1MOUUZlu11GLwuADesqZ93Sn7rAkUgN6Qu4uB8pan9CLfOozgufmxJ7EVVqxaQAacqBP1BIX7JaFY7ku_nwID-xk25klYSoCfiANLTmhCZewVs63Gso52canottIwRUN384-DVeKZ91RaOeN_pzgnxZ-2jotOvlYl7TwRLmkvZHwOybGyMXMaZxPWlUHUuk3fyIr37STLV5R-X6lm58ATpBeL_QYWbq52bMYMfcGQD68nby0L5EPIDEYvMPwr_dJZiKMskVfeiBphUginEPfTGsfp2U=w359-h194-no" alt="$sum in MongoDB" /></p>

<h1 id="_id-in-group-stages">_id in $group Stages</h1>

<p>We’re going to understand the <code class="highlighter-rouge">_id</code> field within the <code class="highlighter-rouge">$group</code> stage &amp; look at some best practices for constructing <code class="highlighter-rouge">_id</code>s in group aggregation stages. Let’s look at this query:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    founded_year: {
      $gte: 2010
    }
  }
}, {
  $group: {
    _id: {
      founded_year: "$founded_year"
    },
    companies: {
      $push: "$name"
    }
  }
}, {
  $sort: {
    "_id.founded_year": 1
  }
}]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/cZdysCDFCMxAH0aA5UaCSKgsa23oINU-cC81I72xoB-dJaTYoCAC_Z29Jbf4DYgCPPnadfThclubc4d6bYGEGKI40-mp-Nqh5NSKezeS1W6HHzy7HCVi-BYLWNf2Qzo_lGtvDEjdS1bijrMao9pimLRSophJHrIeF0yq4DcutY6CG9l1DUarH4Chz1jjzcozOkgsU44W0AoAVX413CzX-Bm4hwR-z_XCNXDMAAuJOJUgm5tSGAyvanCbegqFc5MIH3bcwY21-BYlr2PZbX8wp9veq2h6l9Igiu1Ghw73WxMwzEKy7Q1smjigWNJUAwNJArJxdahO-WeWLDtNC0rQltt0Q5-eeKtei0I1Vr117qCyerREiUunDyZt7cOK9rDI0BqoFGQKaAuST5XK95BrUOj-S7PP-YcpsxiQmWQZgOilr3x-muwxy48MxM-qhvEkFYIWbDjS_H5RzRY17jJkFgPStt8WkbcNT6FwOlNLWhW3pXm0tbcvP37jOzZy_IZvatZEcYpCSuiYrEMvqdDB4tmV6kRcIxbaZ3wlZL-zGWopfo98HyLQqziwowKhr1v3Fp1ueY_m9mSOG3vH2dnj_wM384TaB5IB3Pxwjm4lTHSbkscK=w323-h246-no" alt="MongoDB $group with document approach" /></p>

<p>One thing which might not be clear to us is why the <code class="highlighter-rouge">_id</code> field is constructed this “document” way?  We could have done it this way as well:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    founded_year: {
      $gte: 2010
    }
  }
}, {
  $group: {
    _id: "$founded_year",
    companies: {
      $push: "$name"
    }
  }
}, {
  $sort: {
    "_id": 1
  }
}]).pretty()</code></pre>

<p><img src="https://lh3.googleusercontent.com/wt6rd44VLJdMXAM0_bafbHEEAH9r5DZvE-Jurpe3FM64nWQtk4XFTInfjYcc93c2n3Ms-r9hykOLXqcGCkhk7cQ0jyFgfBw3XZSVaOhZ94DxsYlMGXE-kXjhLu-rtcNDzqZ8_9K9GHGexwH2I9dX3jalSPIcoprKv6Noqo6whMZRAsmNZt93gimVP6q5kYFbly0LTWYBnh4c3qnZE0q1OounH6pP_KmI0k04WMuvRUvr7adIrXpslRIW-Aq6QrpV3HVhp398cQtW4mT45qqru2ZiTHaPVJCJ2sV0fqboJbKYweG8LcTlraBaNLj0vfMG-SGElc6PG6WhU5C7-i1ZMMqu60l9FlPCyKG3AJacqhAeiCefTC3vbB9uZ027IS0mWhSuwhRrMmy-hsjlBBLplGJ3Ry88fSwroNqlYxOFSlalmse--PP91BXCTW_DH_Kt19Iw2tRr89EyRQ2aurqZkP0pPsdLJppbS7HegGTmBhaAEu28ooFDAXT9mUZrIXBL6ObwtktVpLAsrRlg8o9P9iIwTDIiHebewSUG57VoC3BsEZE4pSOhK5lyLBdaYGvnc7LiwzHQS8l9yCSpmnInaSQ9LB6zgAfM0Skr-ig7B29y1qZd=w322-h220-no" alt="MongoDB $group without document approach" /></p>

<p>We don’t do it this way, because in these output documents - it’s not explicit what exactly this number means. So, we actually don’t know. And in some cases, that means there maybe confusion in interpreting these documents. So, another case maybe to group an <code class="highlighter-rouge">_id</code> document with multiple fields:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    founded_year: {
      $gte: 2010
    }
  }
}, {
  $group: {
    _id: {
      founded_year: "$founded_year",
      category_code: "$category_code"
    },
    companies: {
      $push: "$name"
    }
  }
}, {
  $sort: {
    "_id.founded_year": 1
  }
}]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/Dp75pUue_R3I8DI18FVuErEUeBNBomiGTQcVO45FoBeHgu9H_MAfGSpgmxOyVQddvuNTnv_oDMIoQWMsrQKmETdDLjBk8Yj6vh8cLmxrpbZd6u2g2qBJWkgBNvQRKVIpflDo9-7-tdOhneJ6QC_DqC4Nhb68Yac42rlzNeHjlrz8lKYLZFJMQ79m3dodgI6bI9JGHHKPfdHE7X_ypVxbARpqvYO8J6lh4Rtg6VshULFnskCQHBQYsCXfs3RtSaNi3t-D5dGSbf7RUuoTFaXxWGco6lBiALZze8Dfnen2wPHhTVDzqzDthR1o7NwB_VviKSMtFHZsb8B9lxzRy8X3DxCx297p8qG1R6xHKbw5lG5rawpIs-HCBkreXavm3MDwhrLbAnZuimFLTzVqxYBeICKSX1uCnzRKNKZkUAdhSDm4tof4nAJkkkP5RcOU7r7dNGLUMiK9bdHqqZVoTLopwRY8dcSW7OfPky3kyk5LKlGAG2jUJBaDY95WojrnSkZ2e8f7m6oocAaXPevZ0oqpg_Tp4jAoftsUoqcr3az3_3vL1JPweM3eNnyQQWIQUrvsOOIEGO3DWYTDE12zEy0ZBeoVNWVgNKINz0DA-aADQNVVL0aP=w354-h219-no" alt="group an _id document with multiple fields in MongoDB" /></p>

<p><code class="highlighter-rouge">$push</code> simply pushes the elements to generating arrays. Often, it might be required to group on promoted fields to upper level:</p>

<pre><code>
db.companies.aggregate([{
  $group: {
    _id: {
      ipo_year: "$ipo.pub_year"
    },
    companies: {
      $push: "$name"
    }
  }
}, {
  $sort: {
    "_id.ipo_year": 1
  }
}]).pretty()</code></pre>

<p><img src="https://lh3.googleusercontent.com/XqzUb0ni8-HrWSEsiUydzqXjJX0snqmU5NaHaZzKoubs3iy8Zp20F18g-fKt3cSiJucKtAkc72L2I7LI0BWrWmCL29ZmOZueKt3HCcONkTVnwRWPXkHWmotQ8-8ebeN2rKIYP0J6GWbfSQkjVq4vTgnoqnSIZv0CSRhSbh3NhjYv8xLxSf_bYvP6QNGUndBbJPwlE5wmCCpmiuNhVRgTz3XNkdYFsjbzzFUSrarnNtls9k9WnLMRlyx8_VWP-7iwWoQHY2WlLdff7VNAUF6IC4ih0mA8wV6GxyX5l_Bw9AqRj8rCgeDhGCpNzteUg0WTfxae0xyVqe73GjaA-o6j9mx-qch1RC1gf1xWXUEhdcxz2hBlJS6JjXPW95o43wNr-YJm-TAyp8Y38aLe7vgw75fO6Jl5mq3AGnoBrBFqceK6luEhe76QupAPQalWabE7JDAp4dEZ3ruvX7998vHR1afrShPG1DyP8DN267ef7UookJNbpq1scFqbX5DxNQZqCYZ89re5uW3dKiDq-Hqnx-h9a5oCLJ03HNapyg9i3T3e96hsPDAiIWahlQ0b_33jzZhiT1premDidg3pLIr_DHniV0YVSiK0Sffm7hN4MUpVlOBf=w280-h123-no" alt="group on promoted fields to upper level in MongoDB" /></p>

<p>It’s also perfect to have an expression that resolves to a document as a <code class="highlighter-rouge">_id</code> key.</p>

<pre><code>db.companies.aggregate([{
  $match: {
    "relationships.person": {
      $ne: null
    }
  }
}, {
  $project: {
    relationships: 1,
    _id: 0
  }
}, {
  $unwind: "$relationships"
}, {
  $group: {
    _id: "$relationships.person",
    count: {
      $sum: 1
    }
  }
}, {
  $sort: {
    count: -1
  }
}])</code></pre>

<p><img src="https://lh3.googleusercontent.com/GrLY0VWm7RExvL4So548j-OPoeBlcB4t8YlsPNfWuvM1zLHEwf2XaJly-Cg-wqu8_avEz3qYiYvY2quN3q4eVnok9DhAwAF8E-MPw3q1orDOipb-9mXnLzZPdNgIyAlVPBo3oQuPChXa1flWvNNz9xLD1QHQN_H4UiEo4SB2FONhMZ5QlebWfSSPiJlpE4LJupomYINf1kiFx-mD2p_Hfol7HB2VZEUxT4kgOlHo02hvXWh0k-CHr7sloJXnuEWM_cKIajOGyZLVbfsgEtf-2lMLJMQOIqcPP6fJ54sWjsVr2dMD6b7QtBUOgaR0E_-z_8Zik9wkHA3d6ShpUuPUaFpbHPre8UwVCRVOBcTuryn8JoRTHrVso4HshELeNp4XZTnz1oFDVKdFSOJ3eawiO3_0SWaNr6KJltgxAOAODX80nYp8r7rawWtMiCSX_GgmV7UELNKHemACsoykNpmTjqc5eWBx0B_HuhJmxN9sZY2Y0pDmaQdOwzKPMTTBFZyrwyLEAegARNM3DcEi1suRWnJWJZBhcpArVNggHpstSMK9BbM-fdvUcR6pGdtXE3a4_S6A28zDf68OqELWuFzNe5WMW1scoyAkg4svzvHJQZ_aCCdx=w346-h101-no" alt="expression that resolves to a document" /></p>

<h1 id="group-vs-project">$group vs. $project</h1>

<p>Not all accumulators are available in <code class="highlighter-rouge">$project</code> stage. We need to consider what we can do in project with respect to accumulators and what we can do in group. Let’s take a look at this:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    funding_rounds: {
      $ne: []
    }
  }
}, {
  $unwind: "$funding_rounds"
}, {
  $sort: {
    "funding_rounds.funded_year": 1,
    "funding_rounds.funded_month": 1,
    "funding_rounds.funded_day": 1
  }
}, {
  $group: {
    _id: {
      company: "$name"
    },
    funding: {
      $push: {
        amount: "$funding_rounds.raised_amount",
        year: "$funding_rounds.funded_year"
      }
    }
  }
}, ]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/iP9Z2s3BhkLDDkkNwvOG8PhmdkUn4vfCDjxflG41nvKIiwiUsJj4tlojJS256qmu3OD_5jL7nJdXj3HPyB6s7wYdqjTt9sAKwtjW-cxSW2pkUU_uE4CKSryguEq_T8KxmV7chfDxTB06TqVrHrZhj7HNne0xdbt3ybgdnMurQvBTCEMiV01_qCaXT9-NjBhQLCahcFqlfpM17Jk65I1VOqPZGUOdtInqKHCZ8ikAoZmyYP6wMThL6CjHHaf5rzjFrP1RQs8wVwN7xJ8J95EYSOIGbOXuFLwnxvU8HgOLF-QAE_YyII3aRwws-sdAD1F8QP5mZMBJKk8pdbcwtBCJRKkC98Uw77vCUOpfkQI9t-50Agv-0mxZkfb8VCh-Kk2z8YU64Czp6UwftiEVdH9qIHbtGhz42ZPvCKNTHOlkxfZDBKty_PguxuqwSBT1tdzUkE22GTF06WvmJEJBZRnBZnaqyILaN3EpZKZk1BS67bBlH-1bfCQA1I4YQnfgg4zpaLyvjaElZEPo-Pg259hFnwMN_avT9PYNwQl3a4k8aqhQlQtRS3QRzBjK4tuoAFDpHus-rlBqzjv5Top3y-y65TKSlGp16U3MkuWE0pzD53aJfuoN=w366-h134-no" alt="$group in MongoDB" /></p>

<p>Where we’re checking if any of the <code class="highlighter-rouge">funding_rounds</code> is not empty. Then it’s <code class="highlighter-rouge">unwind</code>-ed to <code class="highlighter-rouge">$sort</code> and to later stages. We’ll see one document for each element of the <code class="highlighter-rouge">funding_rounds</code> array for every company. So, the first thing we’re going to do here is to <code class="highlighter-rouge">$sort</code> based on:</p>

<ol>
  <li><code class="highlighter-rouge">funding_rounds.funded_year</code></li>
  <li><code class="highlighter-rouge">funding_rounds.funded_month</code></li>
  <li><code class="highlighter-rouge">funding_rounds.funded_day</code></li>
</ol>

<p>In the group stage by company name, the array is getting built using <code class="highlighter-rouge">$push</code>. <code class="highlighter-rouge">$push</code> is supposed to be part of a document specified as the value for a field we name in a group stage. We can push on any valid expression. In this case, we’re pushing on documents to this array and for every document that we push it’s being added to the end of the array that we’re accumulating. In this case, we’re pushing on documents that are built from the <code class="highlighter-rouge">raised_amount</code> and <code class="highlighter-rouge">funded_year</code>. So, the <code class="highlighter-rouge">$group</code> stage is a stream of documents that have an <code class="highlighter-rouge">_id</code> where we’re specifying the company name.</p>

<p>Notice that <code class="highlighter-rouge">$push</code> is available in <code class="highlighter-rouge">$group</code> stages but not in <code class="highlighter-rouge">$project</code> stage. This is because <code class="highlighter-rouge">$group</code> stages are designed to take a sequence of documents and accumulate values based on that stream of documents.</p>

<p><code class="highlighter-rouge">$project</code> on the other hand, works with one document at a time. So, we can calculate an average on an array within an individual document inside a project stage. But doing something like this where one at a time, we’re seeing documents and for every document, it passes through the group stage pushing on a new value, well that’s something that the <code class="highlighter-rouge">$project</code> stage is just not designed to do. For that type of operation we want to use <code class="highlighter-rouge">$group</code>.</p>

<p>Let’s take a look at another example:</p>

<pre><code>
db.companies.aggregate([{
  $match: {
    funding_rounds: {
      $exists: true,
      $ne: []
    }
  }
}, {
  $unwind: "$funding_rounds"
}, {
  $sort: {
    "funding_rounds.funded_year": 1,
    "funding_rounds.funded_month": 1,
    "funding_rounds.funded_day": 1
  }
}, {
  $group: {
    _id: {
      company: "$name"
    },
    first_round: {
      $first: "$funding_rounds"
    },
    last_round: {
      $last: "$funding_rounds"
    },
    num_rounds: {
      $sum: 1
    },
    total_raised: {
      $sum: "$funding_rounds.raised_amount"
    }
  }
}, {
  $project: {
    _id: 0,
    company: "$_id.company",
    first_round: {
      amount: "$first_round.raised_amount",
      article: "$first_round.source_url",
      year: "$first_round.funded_year"
    },
    last_round: {
      amount: "$last_round.raised_amount",
      article: "$last_round.source_url",
      year: "$last_round.funded_year"
    },
    num_rounds: 1,
    total_raised: 1,
  }
}, {
  $sort: {
    total_raised: -1
  }
}]).pretty()
</code></pre>

<p><img src="https://lh3.googleusercontent.com/mRiC7j6YFAk080yqyikHn0jyUO80jb9JT6dOgD5v6Gt6VRvbnVN4mr5YJs4t80zVhflyJMtiQJe-edk7RJcR378OkToVa1Wh5mMSZUTHp_9s-uGHf851eVOByztPWZZ8Xhpcl2r3-MsK45rY5yg2SI5h6nVhCpyvfHl1o55sgkKc-9p_1MsMIZlcYZG9J-eSSxCrQP0rl4LaAdxWZ72fZ5w7FstYRYPrUh1cG9OTZPncmoFTA2mN4IfRW201QBK2Xt4AvhKRBbwXyPc4QfWPvTU8j25BImEKyWbtKynluMMhRmLl8dUuZYAXznNZFegQ2yIwV3PZZLIYfg0JFrec6_gGvqZbdSpNzbyLzmOj6MqJJJyBS4r9Z_7NnUH1_gw6oTwu1z6dJVpvaF6wB5wuC9tsxiV5hxXfI2q7mPMwVcq6rECoRH-IMyOgK9gyI34HUirWEaZoV4cdYmrOCh8DhWuYt6ggGrejTqEOfbTyORyMQVDfoxytqrElabsN_ZRHUqurPpcu48h1gKTyv8SwKK4sgPKbtw6fxZOs2A0_NEKsxGNfSbrGWHQCuswTOPLoWS9t5X3lwO92UxBzBr74G9NkLJpEQO1nzOn4B4omClDeLO1P=w642-h207-no" alt="group vs project in MongoDB" /></p>

<p>In the <code class="highlighter-rouge">$group</code> stage, we’re using <code class="highlighter-rouge">$first</code> and <code class="highlighter-rouge">$last</code> accumulators. Right, again we can see that as with <code class="highlighter-rouge">$push</code> - we can’t use <code class="highlighter-rouge">$first</code> and <code class="highlighter-rouge">$last</code> in project stages. Because again, project stages are not designed to accumulate values based on multiple documents. Rather they’re designed to reshape documents one at a time. Total number of rounds is calculated using the <code class="highlighter-rouge">$sum</code> operator. The value <strong>1</strong> simply counts the number of documents passed through that group together with each document that matches or is grouped under a given <code class="highlighter-rouge">_id</code> value. The project may seem complex, but it’s just making the output pretty. It’s just that it’s including <code class="highlighter-rouge">num_rounds</code> and <code class="highlighter-rouge">total_raised</code> from the previous document.</p>

<p><a href="https://goo.gl/photos/VdyC1uyf62GcsJKx7">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/mongodb-aggregation-framework</wp:post_id>
        <wp:post_date>2016-09-24T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-09-24T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[MongoDB Indexes and Performance]]></title>
        <link>http://xameeramir.github.io/mongodb-indexes-and-performance/</link>
        <pubDate>2016-09-05T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://community.dedimax.com/wp-content/uploads/2016/07/speedtest.jpg" alt="Performance" /></p>

<p><a href="https://community.dedimax.com/index.php/2016/04/20/mettre-a-jour-ubuntu-14-04-lts-ou-15-10-vers-ubuntu-16-04-lts/">courtesy</a></p>

<h1 id="storage-engines-introduction">Storage Engines: Introduction</h1>

<p>Okey, let’s talk about sharding. Sharding is distributing database queries across multiple servers. Before we do that, let’s get the idea of storage engines. New in <code class="highlighter-rouge">MongoDB</code> 3.0 is that they offer pluggable storage engines. A storage engine is the interface between the persistent storage, which will call the disks which might be a solid state disk, and the database itself.</p>

<p><img src="https://lh3.googleusercontent.com/L6OeW3bF-IqdrJhk7qje_PLdfPgExIdmAZuTI1IGEqZ3ENb6rzZVGiSLWTLnw-sl656NqppFIf8RzythG3PQpMnXYY_InEaY92ulAyMEoXQbIWRdJS5IL09emKJEhXXYhGYg3AyX7h5DAoyN8jJ4grqbu_XeGG5R_QSK66I1ni3308EUuN57loWQGtyKuz0mdKbAQctB8nMQjVZwZ_5GqdN9SvNY0G32cGAfxtvaHhioPE5-h6cICRp6xofwW2Ob-3BhTprJmtCs_ZbC8Vnz7KbdmwT1Htv0Iio5mYmWJuXt6BrMoN7QcTR-lCmkfb6Tr64nVWCD1OJqfH2klKiQp3S8RG0lgPkJ_AoJK-wXMV1bnC9JoJtjrFLGo3YyYk4aFbXvp7BeRZD2YfVHXKIrVyHAOy1q_Ybf1bX0mZE_p14Hph7_TREbQjLbTH0amPIfYO7IJ1kAeNDEa4tSj1ffsetYtb3ip9rMoIYJgSBPeILOWow30UDtFkVPOY3_F-EMWX-x3c_a_4Ln0TtHxHkypetO0StsVGXh2aaltsccLDWuwixno20Zzubo9ent9VLKUfAhAEZ7sedqbXXDk5J2wG-nfvCVy-EMKLAiJtrBHlLf5pAS=w629-h323-no" alt="database talks to the persistent storage through a storage engine" /></p>

<p>So, the database talks to the persistent storage through a storage engine. Now, it may be the case that the storage engine itself decides to use the memory to optimize the process. So, in other words disk is very slow. Since the idea of databases is to store stuff persistently, what happens is the storage engine has control of memory on the computer. And it can decide what to put in memory and what to take out of memory and what to persist to disk and when. So the database server itself defers the handling of the memory on the server as well as the disk itself to the store engine. <code class="highlighter-rouge">MongoDB</code> provides pluggable storage engine where we can use more than one. With different storage engines, we get different performance characteristics. For <code class="highlighter-rouge">MongoDB</code>, there’re 2 storage engines shipped with:</p>

<ul>
  <li>MMAP - the older default storage engine</li>
  <li>WiredTiger - it came into picture when <a href="https://www.mongodb.com">MongoDB</a> acquired <a href="http://www.wiredtiger.com/">WiredTiger</a> in 2014. The team had worked at <a href="https://en.wikipedia.org/wiki/Sleepycat_Software">SleepyCat</a> and built <a href="https://www.oracle.com/database/berkeley-db/db.html">Barkeley DB</a>.</li>
</ul>

<p><strong>What a storage engine is not?</strong></p>

<p>If we have a bunch of <code class="highlighter-rouge">MongoDB</code> servers all running in a cluster, the storage engine doesn’t affect the communication between those different <code class="highlighter-rouge">MongoDB</code> servers. The storage engine doesn’t affect the API that the database presents to the programmer. The storage engine directly determines the data file format and format of indexes</p>

<h1 id="storage-engines-mmapv1">Storage Engines: MMAPv1</h1>

<p>We call it MMAPv1 - the original storage engine of <code class="highlighter-rouge">MongoDB</code> because it internally uses the <code class="highlighter-rouge">mmap</code> call under the covers in order to implement storage management. Let’s look at what the <a href="http://www.tutorialspoint.com/unix_system_calls/mmap.htm">MMAP</a> system call looks like. On Linux, it talks about memory allocation, or mapping files or devices into memory. Causes the pages starting address and continuing for at most length bytes to be mapped from the object described by the file descriptor at an offset. So, what does that really practically mean?</p>

<p>Well, <code class="highlighter-rouge">MongoDB</code> practically needs a place to put documents. And it puts the documents inside files. And to do that it initially allocates, let’s say a large file. Let’s say it allocates a 100GB file on disk. So, we wind up with 100GB file on disk. The disk may or may not be physically contiguous on the actual disk, because there are some algorithms that occur beneath that layer that control the actual allocation of space on a disk. But from our point, it’s a 100GB contiguous file. If <code class="highlighter-rouge">MongoDB</code> calls <code class="highlighter-rouge">mmap</code> system call, it can map this 100GB file into 100GB of virtual memory. To get this big virtual memory, we need to be on a x64 machine. And these are all <a href="http://www.computerhope.com/jargon/p/pagesize.htm">page-sized</a>. So pages on an OS or either 4k or 16k large. So, there is lot of them inside the 100GB virtual memory. And the operating system is going to decide what can fit in the memory. So, the actual physical memory of the box is let’s say 32GB, then if we go to access one of the pages in this memory space, it may not be in memory at any given time. The operating system decides which of these pages are going to be in memory. We’re showing the ones available in memory as green ones. So, when we go to read the document, if it hits a page that’s in memory, then we get it. If it hits a page that’s not in memory (the white ones), the OS has to bring it from the disk.</p>

<p><img src="https://lh3.googleusercontent.com/BWm46PHfwP2IKXbfUWzygkadOYh1vMQVNw-yoPATuLhYWsgLbfah6CDy5RE-1elidVeMsBilwePmodSkB8oH8aM8q3hYxzB853Gc9fATAfbI-R_1ZfvJyqda-hGJye2kng6mKIGetoDcTRY5UP0AnXGznVuC65alMFv5HY7I4xZJ0kp96cQr7nkZNN4PaZmkrATnyirp6BObK4yww9apLVPjh6EQQnFh0IuVWov5H890F0tet8nH-JZlXr8yJbW_wo5Uh6rm3JSwSFluR3fkn8lG3B0yvcYIZetj4yAVhEf8oilsMri7mgXvPW44ZsXj2pPtgLONQm41527tV129twENH2NOqzXnri5O-XgY-G27P3M03GvWWRyEJrtpkR-SQMhyph0FYsxEgpYk2FB1Kq6qJFv4M6DNo50cQtqR_8VoYO8xkWVB4eK5rESzvbFAqMdDCnqHZnTlp4FDzcjBs_4yGkpiyJPMN8he9hNIhOC0XPEhi2B2vo9KxtvojfSywZwlBJYAgCHbyQ9937gz-hG6FjbIWHmbMQPfzNysjIzVoI4AhjGsiknT0vDbG22jn4qmrPzkpYxrLbXLI7Lfr4koISUJcwuXhrEv787e_nCX2Ieg=w851-h466-no" alt="Storage Engines: MMAPv1" /></p>

<p><sub><a href="https://www.youtube.com/watch?v=os3591KviNM">source</a></sub></p>

<p>MMAPv1 storage engine provides</p>

<ol>
  <li><strong>Collection level concurrency (locking)</strong>. Each collection inside <code class="highlighter-rouge">MongoDB</code> is it’s own file (can be seen in <code class="highlighter-rouge">~\data\db</code>). If multiple <code class="highlighter-rouge">write</code>s are fired on the same collection, one has to wait for another to finish. It’s a multiple reader. Only one write can happen at a time to a particular collection.</li>
  <li><strong>Allows in place updates</strong>. So, if a document is sitting here in one of the available (green) page and we do an update to it, then we’ll try to update it right in place. And if we can’t update it, then what we’ll do is we’ll mark it as a whole, and then we’ll move it somewhere else where there is some space. And finally we’ll update it there. In order to make it possible that we update the document in place without having to move it, we uses</li>
  <li><strong>Power of 2 sizes</strong> when we allocate the initial storage for a document. So, if we try to create a 3bytes document, we’ll get 4bytes. 8bytes, if we create 7bytes. 32bytes when creating 19bytes document. In this way, it’s possible to grow the document a little bit. And that space that opens up, that we can re-use it more easily.</li>
</ol>

<p>Also, notice that since, OS decides what is in memory and what is on disk - we cannot do much about it. The OS is smart enough for memory management.</p>

<h1 id="storage-engines-wiredtiger">Storage Engines: WiredTiger</h1>

<p>For a lot of workloads, it’s faster. It provides</p>

<ol>
  <li><strong>document level concurrency</strong>. We don’t call it document level locking because it’s a lock free implementation which has an optimistic concurrency model where the storage assumes that two writes are not going to be the same document, and if they are to the same document, then one of those is unwound and has to try again and it’s invisible to the application. But we do get this document level concurrency versus collection level concurrency in the MMAP storage engine and that’s a huge win.</li>
  <li><strong>Support for compression</strong> of both indexes and data. It’s because WiredTiger is maging it’s own storage.</li>
  <li><strong>No inplace updates</strong> - if we update, it’s marked as <strong><em>no longer user</em></strong> and a new space allocation is done on disk and written there. Eventually, the vacant space is reclaimed. To invoke a WiredTiger storage engine, we would use <code class="highlighter-rouge">mongod --storageEngine wiredTiger</code>.</li>
</ol>

<h1 id="indexes">Indexes</h1>

<p>An index is an ordered set of things. An index in the database has ordered column(s) with their references (_ids or memory location). Ordered things are faster to search for. This is called b-tree indexes. The indexes works from the left most side. Let’s assume that the index is on 3 columns: <code class="highlighter-rouge">A</code>,<code class="highlighter-rouge">B</code>, <code class="highlighter-rouge">C</code>. We can search rapidly from <strong>left side</strong> by</p>
<ul>
  <li><code class="highlighter-rouge">A</code>,<code class="highlighter-rouge">B</code>, <code class="highlighter-rouge">C</code></li>
  <li><code class="highlighter-rouge">A</code>, <code class="highlighter-rouge">B</code></li>
  <li><code class="highlighter-rouge">A</code></li>
</ul>

<p>But to search from the right side is not supported by index. The following will not be speeded:</p>
<ul>
  <li><code class="highlighter-rouge">C</code></li>
  <li><code class="highlighter-rouge">B</code></li>
  <li>etcetra</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/vvXH6YnxhfM_X2l3duiE-Iu3-_l_KK07xmIW4JrFbHiQfzGX7UcJLJ3JcTbk_WJexAEHWKarTZnAI0JlWeS2ksEN1iZOfBMIJpn0Y278-MtX6VbEyfDDnOAFeha3dDNOTXtwc7o3Fge2CqkVD3WjblUgQeJOmzv58-vy1lJvzfNEN2HoK8ikSkSlf5VHB2DqkuSS9vTCQJ5ucrTJfuhOBRP5MNLNi8sQYL5jLWvgQ4cbaOEuB5Vw5RR4-Vyr253T26OGDiQ8Ij4uBB1lL1aNb2dWcxsE2IdPFVr2aGu_vlDzMelPFaf4T3Vily0YlIUIfvScGS2ap_g2p3_N1RglXQPo5cJTg1cqh92IIcF0j5L7YiwXn18IMPwEjeqIN4GPMUvDbnyqKFiZAmppq6wHKgWLioknddLqxGPb3s3hP4QOMzOHhFSfaLsWu7cQCoyeoWH3HmfHqHxd5n3_jdio-dfWA2w9N6VSxDzr21nFdXMCXQxbVbcfLj1AIUEp1n-lYaK40g8OnUbrs0GTd3LpGJKmM5GycpzGQ47aJVnr8oz3P0CR0GPCddSEjJYHdEVZxZ1xi-0ohQtJzVGd-XjPuY1AenA_8IIrvtI9nZ6QD_lV0Izx=w148-h194-no" alt="index support" /></p>

<p>Indexing is not free because whenever we change anything in the document which affects the index, we’re going to have to update the index. It needs to be written on memory and finally on disk. Also, it’s nice to know that indexing slows down the writes. Yes, the reads are faster. Creating indexes also takes time even on fast computers, because we have to scan the entire collection. Create new data structures and write them all to disk.</p>

<p>To create a compound index use command <code class="highlighter-rouge">db.collectionName.createIndex({A: 1, B: -1})</code>. Where <code class="highlighter-rouge">1</code> means ascending, -1 means descending. To drop the index, use <code class="highlighter-rouge">db.collectionName.dropIndex({A: 1, B: -1})</code>. Compound indexes cannot have both the columns with array types. If we try to do this, <code class="highlighter-rouge">MongoDB</code> will tell that it can’t index parallel arrays and the reason is that there’s an explosion of index points that create it because it has to create index points for the cartesian product of the items in the array and it doesn’t permit that. <strong>Multikey indexes</strong> are applied when we have arrays inside documents on indexed keys. To get the currently available indexes, use command <code class="highlighter-rouge">db.collectionName.getIndexes()</code>. The nested keys can also be indexed, e.g.: <code class="highlighter-rouge">db.collectionName.createIndex({'A.aa': 1})</code>. Where, <code class="highlighter-rouge">aa</code> is a sub-key inside key <code class="highlighter-rouge">A</code>.</p>

<h1 id="index-creation-option-unique">Index Creation Option, Unique</h1>

<p>Let’s create a collection with duplicate entries:</p>

<pre><code>
db.collectionName.insertOne(thing: 'apple');
db.collectionName.insertOne(thing: 'pear');
db.collectionName.insertOne(thing: 'apple');
</code></pre>

<p>To make sure that the entries are unique, we can apply a unique index. To create a unique index, use <code class="highlighter-rouge">db.collectionName.createIndex({thing:1}, {unique:true})</code>. This command will give an error because there’re multiple apples in the <code class="highlighter-rouge">collectionName</code>. To remove one, use command <code class="highlighter-rouge">db.collectionName.remove( {thing:'apple'}, {justOne: true} )</code>.</p>

<p>After this index is in place, any attempts for duplicate inserts will result in <code class="highlighter-rouge">duplicate key error</code>. To see whether the index is indeed created, use command <code class="highlighter-rouge">db.collectionName.getIndexes()</code>. One interesting thing to notice is that the index on <code class="highlighter-rouge">_id</code> is shown as <strong>unique</strong>, although it is.</p>

<h1 id="index-creation-sparse">Index Creation, Sparse</h1>

<pre><code>
{a:1, b:5, c:2}
{a:8, b:15, c:7}
{a:4, b:7}
{a:3, b:10}
</code></pre>

<p>Let’s assume that we wish to create an index on the above documents. Creating index on <code class="highlighter-rouge">a</code> &amp; <code class="highlighter-rouge">b</code> will not be a problem. But what if we need to create an index on <code class="highlighter-rouge">c</code>. The unique constraint will not work for <code class="highlighter-rouge">c</code> keys because <strong>null value is duplicated</strong> for 2 documents. The solution in this case is to use <code class="highlighter-rouge">sparse</code> option. This option tells the database to not include the documents which misses the key. The command in concern is <code class="highlighter-rouge">db.collectionName.createIndex({thing:1}, {unique:true, sparse:true})</code>. The sparse index lets us use less space as well.</p>

<blockquote>
  <p>Notice that even if we have a <code class="highlighter-rouge">sparse</code> index, the database performs all documents scan especially when doing sort. This can be seen in the <strong>winning plan</strong> section of <code class="highlighter-rouge">explain</code>’s result.</p>
</blockquote>

<h1 id="index-creation-background">Index Creation, Background</h1>

<p>There are multiple indexing options - foreground (default) &amp; background. Foreground is relatively fast and it blocks all writers and readers. Other databases we can still get to. This is supposed to be not done in a production environment.</p>

<p>Background index creation is a bit slower and they don’t block readers and writers. With <code class="highlighter-rouge">MongoDB</code> 2.4 and later, you can create multiple background indexes in parallel even on the same database.</p>

<p>Beginning in <code class="highlighter-rouge">MongoDB</code> 2.6, creating an index in the background on the primary will cause the indexes to be created in the background on secondaries, as well. The secondaries will begin index creation when the primary completes building its index.</p>

<p>There is another way to create index very efficiently in a production system. That is to create an index on a different server that is being used to serve most queries. Say, in a replica set of multiple database servers working in tandem, one can be taken out and the requests can be routed to the available ones. The foreground index creation can be done on the separated server. After the creation is done successfully, it can be brought back to the cluster.</p>

<h1 id="using-explain">Using Explain</h1>

<p>The <code class="highlighter-rouge">explain</code> command shows what action the database takes in executing a query. It returns an explainable object. What indexes it uses, how many documents are scanned. It does almost everything similar to what the actual query would do, but it’s not the entire simulation of the query. This command can be used bith from a shell as well as from the driver. It can be used in multiple cases:</p>

<ul>
  <li><code class="highlighter-rouge">db.collectionName.explain().find()</code></li>
  <li><code class="highlighter-rouge">db.collectionName.explain().update()</code></li>
  <li><code class="highlighter-rouge">db.collectionName.explain().remove()</code></li>
  <li><code class="highlighter-rouge">db.collectionName.explain().aggregate()</code></li>
</ul>

<p>But the following is not allowed:</p>

<ul>
  <li><code class="highlighter-rouge">db.collectionName.explain().insert()</code></li>
  <li><code class="highlighter-rouge">db.collectionName.remove({a:1, b:2}).exlain()</code></li>
</ul>

<p>To find out which functions can be used in conjunction with <code class="highlighter-rouge">explain</code>, use <code class="highlighter-rouge">db.collectionName.explain().help()</code>. In previous versions, it was possible to append this command at last on a cursor (remember that <code class="highlighter-rouge">find()</code> returns a cursor). e.g.: <code class="highlighter-rouge">db.collectionName.find().explain()</code>. This was changed to be pre-pended by an explainable object’s function. The reason is not all methods return a cursor. e.g.: <code class="highlighter-rouge">count()</code> will return a scalar.</p>

<h1 id="explain-verbosity">Explain: Verbosity</h1>

<p>The <code class="highlighter-rouge">explain</code> command can run in 3 modes:</p>

<ul>
  <li><code class="highlighter-rouge">queryPlanner</code> - tells mostly what the database would use in terms of indexes</li>
  <li><code class="highlighter-rouge">executionStats</code> - includes the <code class="highlighter-rouge">queryPlanner</code> mode, also includes what the result of using the indexes will be</li>
  <li><code class="highlighter-rouge">allPlansExecution</code> - includes the <code class="highlighter-rouge">queryPlanner</code> &amp; <code class="highlighter-rouge">executionStats</code> mode. It does what the query optimizer does periodically is it runs all the possible indexes that could be used for a particular shape of query, and it runs them in parallel. Then makes a decision about which one is fastest.</li>
</ul>

<pre><code>
var exp = db.collectionName.explain("executionStats");
exp.find();
</code></pre>

<p>One thing to understand when studying the performance stats is to see the number of returned documents (<code class="highlighter-rouge">nReturned</code>) and number of documents examined (<code class="highlighter-rouge">docsExamined</code>). The following data says that The query scanned 999,999 documents, returning 10,000 in 619 milliseconds.</p>

<pre><code>
&gt; exp = db.example.explain("executionStats")
Explainable(test.example)
&gt; exp.find( { a : 7 } )
{
    "queryPlanner" : {
        "plannerVersion" : 1,
        "namespace" : "test.example",
        "indexFilterSet" : false,
        "parsedQuery" : {
            "a" : {
                "$eq" : 7
            }
        },
        "winningPlan" : {
            "stage" : "COLLSCAN",
            "filter" : {
                "a" : {
                    "$eq" : 7
                }
            },
            "direction" : "forward"
        },
        "rejectedPlans" : [ ]
    },
    "executionStats" : {
        "executionSuccess" : true,
        "nReturned" : 10000,
        "executionTimeMillis" : 619,
        "totalKeysExamined" : 0,
        "totalDocsExamined" : 999999,
        "executionStages" : {
            "stage" : "COLLSCAN",
            "filter" : {
                "a" : {
                    "$eq" : 7
                }
            },
            "nReturned" : 10000,
            "executionTimeMillisEstimate" : 520,
            "works" : 1000001,
            "advanced" : 10000,
            "needTime" : 990000,
            "needFetch" : 0,
            "saveState" : 7812,
            "restoreState" : 7812,
            "isEOF" : 1,
            "invalidates" : 0,
            "direction" : "forward",
            "docsExamined" : 999999
        }
    },
    "serverInfo" : {
        "host" : "cross-mb-air.local",
        "port" : 27017,
        "version" : "3.0.1",
        "gitVersion" : "534b5a3f9d10f00cd27737fbcd951032248b5952"
    },
    "ok" : 1
}
</code></pre>

<h1 id="covered-queries">Covered Queries</h1>

<p>Covered query is a query, which can entirely be satisfied by an index. Hence, <strong>zero documents needs to be inspected</strong> to satisfy the query. This makes the query a lot faster. All the projection keys needs to be indexed.</p>

<h1 id="how-large-is-the-index">How Large is the Index?</h1>

<p>Like any other database, it’s important to keep <strong>“working set”</strong> in the <strong>memory</strong>. Working set is the data that is frequently being access by the client. This is especially true for indexes. If the index is in the disk, taking it from there for every query is very expensive. Estimating the amount of memory we’ll need for a <code class="highlighter-rouge">MongoDB</code> deployment. This can be found by using command <code class="highlighter-rouge">db.collectionName.stats()</code>, below is the output in concern:</p>

<p><img src="https://lh3.googleusercontent.com/zyB0RAbjaPn7PnjYOM4WLQE4IottvN6nu6DOaeEl1VS9szoX9M9wb6LqJvfD84rp57tHT2y79LX2gVPu9FW8-fIq5PtSGTMq6zZPRtnXgiHVjOSnqdenXupuBttVx5hc8M4JDzJNEKrIYLQ1uwchFrMz5AITbLRXjJtrTVN_JK_hNbXl6zjGbQEc0jTDGLGEZqT_H26Fsv6eV37WJNQQ6n6i0yICect8CD0EuFBwJBB7PzZrAMiAoZCx5MHPnEDWwPGWVnncDp8H296TpEAHzXAAA3SqoMOa0EoilPieTO8t81A6x062l56OSqs-dBGWDzIFJpLnOwDQ4aFAF8ifXSm8BnZQpn52ijBoGj5ohYJKNLYtc4CGcZ_Br_I5ba3rZoYkj3QTzdvMGKZT8UiI_5ix8Z-zcBsFI4Z_MdI-QxCWlL_qbSbJ_Gtl5LrrQyGWSCTbZ3HZsGWTwLhoNgVWGhhdHAahyCGqfoYSREMZ2CSuLuhwLaDaRw45QPYQcD4ItI1p5wmkdV6UG-P78j6LeUqCSMy-1rCqNe5gdMCHEx6YeuoWc4aSibJJIjCJGGHoh50MYhFcSEKBmd93ch_UW9VEW2pBBHPtvEde1vYung8NZ462=w294-h65-no" alt="size of the index" /></p>

<p>This output changes from one database engine to another. There’s also a shortcut <code class="highlighter-rouge">db.collectionName.totalIndexSize()</code> which gives the required size detail. With WiredTiger storage engine, the sizes of the indexes is much smaller because it supports a technology called prefix compression. But this compression comes at the cost of CPU. The moral of the story is that, we need to always make sure that the index fits into the working set and which in turn needs to fit in the memory.</p>

<p><img src="https://lh3.googleusercontent.com/4NkueuMMGHBCSeMx_gJ07HiRciBPeJfX8032Ccs8KKYFI5JUazpDSBWlkS3wPN7dEtxO9JTbKexpljU-MOq5YBlcge7ElW4nOz94DgI5smktNIo9U26E4Ncnzd_BC_sSU3lbnCqNJ6-zGDZxH8ZF6Wx11pUj3loTGfJkitlaG-7k5sOWj-yrycLBGSgKaIvJ3TjtZmfTHasqM2OLtuf8zIMaV8ABmwoeOagOoHlS2PERW-2b1lG07uQhEp9cSP3d5ytGYcF4FgNKCUoezqPoExh7C39njtvmH0EYlo2cK1DUL-IwqC-1J6hR572hjFumDrtmUfzJpzDS_45qFku9Qv1aYmOiBVJQMxsB7kJ0A0seYEjsq9WsKW06YTWtOtgxMJyTNDqDnAHCOCIGT2ETUSNdc4gm_7LqoIXrjhsASmKT1vo2u0-3yH3GwuiSVisdy8h1nJwvaOoekwSUqGIjDREw320OiLSkbQAMlry8zbZir-tbGRO2XcEoHwipWESW9qR_zJtq0kP7w1NjsWA-pWGo9kKH7FoqYGaPxm6YhHiEXmx1VgElcId1-N2PK7AOVVjs4bLrtB1OjeyFvRIpM1OXEavtGh046h9dbCzYAtWPwYi2=w534-h353-no" alt="index in memory" /></p>

<h1 id="number-of-index-entries">Number of Index Entries</h1>

<p><strong>Index cardinality:</strong> it refers to the number of index points for each different type of index that <code class="highlighter-rouge">MongoDB</code> supports.</p>

<ol>
  <li>Regular - for every single key that we put in the index, there’s certainly going to be an index point. And in addition, if there is no key, then there’s going to be an index point under the null entry. We get 1:1 relative to the number of documents in the collection in terms of index cardinality. That makes the index a certain size. It’s proportional to the collection size in terms of it’s end pointers to documents</li>
  <li>Sparse - when a document is missing a key being indexed, it’s not in the index because it’s a null and we don’t keep nulls in the index for a sparse index. We’re going to have index points that could be potentially less than or equal to the number of documents.</li>
  <li>Multikey - this is an index on array values. There’ll be multiple index points (for each element of the array) for each document. So, it’ll be greater than the number of documents.</li>
</ol>

<p><img src="https://lh3.googleusercontent.com/eudDYcP4vzZT1LzgUk6E_xXn6znq_DAe5dvs4NpNbxK-J38s3KQDIiPBegredK3-EnHkknn51SEsOPbmzmWx7TVDw7w9tjfRVUCtzQhqzxSS2rDTCAfnSnn8X-WySkCXFBN0P7D_0K6U629ev9wKN5t5UXZMngiZt8rzsTs3mxSYSK4xMXxOP29Ypr9i9EbKkRwueovKNY6pWaafl2d98G0jz2VVZuwgRNfdZuzBJWz41VDWrzeYp51Or4uPIbOSgaN3-Am6Kk1qLH1NqLgrvQjHRf02Dv3x_p6HTH8sAylcWxaP_pCE6h4zJX5j6TMH-8--sJpM__9uxipeEB6RHGDkxfqdTJUGZcABgkNx6A3BZ_SVfjh9S_MTbYM8PBLNCZdkgtMaioG4JSbR3Gbj7jF_07Gdh0kpJRR3y3ht0c-1HjvF_6l5zJySb4c7sWvNT-9qKbyXZWRkMsqNPBaLGKHFBbmAQs4rMjtCeRp0nyo6r4p2kO67GlCKIGOAtKVkD0idB5AMJnqnuvHvu7TSi6MGmPt6PnbgTFsQOl81xKEFByij5EoriaAcKv3lO9901paMBeII-ohwCrBl5kPxKxpX57tSqNf2VF3kIzS0Slxo3NDm=w390-h111-no" alt="number of index points" /></p>

<p>Let’s say you update a document with a key called tags and that update causes the document to need to get moved on disk. Assume you are using the MMAPv1 storage engine. If the document has 100 tags in it, and if the tags array is indexed with a multikey index, 100 index points need to be updated in the index to accommodate the move?</p>

<h1 id="geospatial-indexes">Geospatial Indexes</h1>

<p>These indexes allow us to find things based on location. We’ve 2 options: <strong>2D</strong> &amp; <strong>3D</strong>
 In 2-D, we’ve a cartesian plane with <code class="highlighter-rouge">x</code> &amp; <code class="highlighter-rouge">y</code> coordinates and a bunch of different objects.</p>

<p><img src="https://lh3.googleusercontent.com/k5A_aF5PPl21Fbuoaz3qWkzVcwyBwc_xf5a7avN0oPPr9cM61hhRxUukKWI0GSq1GxkDBv5AxmHcnIypBC4hdpexqfS4sBIvCPyJnAXdT43BOR-dG4Nn4cY9abe4yYr75m56YrmdSNKuzGhcfgzT5AGr-rhhW5oHFCY3A2NARdj6nb_f9fmSohl8kgnIK2Gho9f-CEO7gOOJY_8_qqh-QlsHz4F3FnOufyQK0wus5SLkgGGUictf_M6cJ7Lbx5E7IWWCiW29F2QDR444g_y-CSWHixt0I3AduGU6aGO4mGsjYwyPhW5UAHniM7tyB7iz35zqIdDeIH_KXDLNR-75jIuNvf0TA5Hmr4mYhmfYpkJ9WDf5djKrd_NFK2yOF-at7OL38VOLoJyHRUbXrH-4QwP1__ueXHUmolD_AfnU9wLUejWeSZNPhD3Yj_kXqB3QH67epwu67zAp0WZXzUXxyfL9FXOjzA2gd1-3A_cgdB2F-k-OMPFIC10MBxekpUCs3xSMBbf8r5Vm2tiHwj_wc_QsDEUMWSg7BAvmJAo404sBOJL9U-I64WwEP-m35nBNNcTLREKnHkb1wK1XWn9yJxHjXGI-U_OBE8QChxWIP4V_GD-l=w629-h323-no" alt="2D cartesian plane" /></p>

<p>The document needs to store some sort of <code class="highlighter-rouge">x</code>,<code class="highlighter-rouge">y</code> location with <code class="highlighter-rouge">createIndex({'location':'2d', 'type':1})</code>. The type option specifies the direction of the index i.e. ascending or descending (and it’s optional). It can be a compound index. To find near locations use command <code class="highlighter-rouge">db.collectionName.find({location: {$near:[x,y]}})</code>. And practically speaking, the way this is often used is through a <code class="highlighter-rouge">limit</code>. To limit the results to 20 append <code class="highlighter-rouge">.limit(20)</code>.</p>

<h1 id="geospatial-spherical">Geospatial Spherical</h1>

<p>The location on the globe are represented using longitude and latitude. Latitude is how far off the equator is. Equator is at zero degrees latitude. We can go from <strong>-90</strong> to <strong>90</strong>. A special type of index called 2d sphere. To specify location of things, we use <a href="http://geojson.org/geojson-spec.html#examples">GeoJSON</a>. The locations can be described using a point or a polygon. The <code class="highlighter-rouge">type</code> &amp; <code class="highlighter-rouge">coordinates</code> are reserved words. The values for <code class="highlighter-rouge">type</code> are reserved words. For this type of data, the indexing will be done using  <code class="highlighter-rouge">createIndex({'location':'2dsphere', 'type':1})</code></p>

<p>For collection named “stores” to return the stores that are within 1,000,000 meters of the location latitude=39, longitude=-130? Assuming the stores collection has a 2dsphere index on “loc”. Each store record looks like this:</p>

<pre><code>
{
    "_id":{
        "$oid":"535471aaf28b4d8ee1e1c86f"
    },
    "store_id":8,
    "loc":{
        "type":"Point",
        "coordinates":[
            -37.47891236119904,
            4.488667018711567
        ]
    }
}
</code></pre>

<p>The query will be <code class="highlighter-rouge">db.stores.find({ loc:{ $near: { $geometry: { type: "Point", coordinates: [-130, 39]}, $maxDistance:1000000 } } })</code>.</p>

<h1 id="text-indexes">Text Indexes</h1>

<p>To create a text based index on a key, use command <code class="highlighter-rouge">db.collectionName.ensureIndex({'textColumnName': 'text'})</code>. After this index is applied, use the search commands to search for a word i.e. <code class="highlighter-rouge">db.collectionName.find({$text: {$search:'your text here'}})</code>. There is a text score based on which the results are ranked, to see it project it in the score key like this : <code class="highlighter-rouge">db.collectionName.find({$text: {$search:'your text here'}}, {score: {$meta: 'textScore'}}).sort({score: {$meta: 'textScore'}})</code>.</p>

<p>If we create a text index on the <code class="highlighter-rouge">title</code> field of the <code class="highlighter-rouge">movies</code> collection, and then perform the text search <code class="highlighter-rouge">db.movies.find( { $text : { $search : "Big Lebowski" } } )</code>. The following documents will be returned, assuming they are in the movies collection:</p>

<ul>
  <li>
    <p><code class="highlighter-rouge"><span class="p">{</span><span class="w"> </span><span class="nt">"title"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"The Big Lebowski"</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="err">star</span><span class="p">:</span><span class="w"> </span><span class="s2">"Jeff Bridges"</span><span class="w"> </span><span class="p">}</span></code></p>
  </li>
  <li>
    <p><code class="highlighter-rouge"><span class="p">{</span><span class="w"> </span><span class="nt">"title"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"Big"</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="err">star</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"Tom Hanks"</span><span class="w"> </span><span class="p">}</span></code></p>
  </li>
  <li>
    <p><code class="highlighter-rouge"><span class="p">{</span><span class="w"> </span><span class="nt">"title"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="s2">"Big Fish"</span><span class="w"> </span><span class="p">,</span><span class="w"> </span><span class="err">star</span><span class="p">:</span><span class="w"> </span><span class="s2">"Ewan McGregor"</span><span class="w"> </span><span class="p">}</span></code></p>
  </li>
</ul>

<p>This is because, there will be a <strong><em>logical OR</em></strong>ing on <code class="highlighter-rouge">Big</code> &amp; <code class="highlighter-rouge">Lebowski</code>.</p>

<h1 id="when-is-an-index-used">When is an Index Used?</h1>

<p>Say, <code class="highlighter-rouge">MongoDB</code> gets a query in. Assume that it has the following indexes:</p>

<ol>
  <li><code class="highlighter-rouge">b</code>,<code class="highlighter-rouge">c</code></li>
  <li><code class="highlighter-rouge">c</code>,<code class="highlighter-rouge">b</code></li>
  <li><code class="highlighter-rouge">d</code>,<code class="highlighter-rouge">e</code></li>
  <li><code class="highlighter-rouge">e</code>,<code class="highlighter-rouge">f</code></li>
  <li><code class="highlighter-rouge">a</code>,<code class="highlighter-rouge">b</code>,<code class="highlighter-rouge">c</code></li>
</ol>

<p><code class="highlighter-rouge">MongoDB</code> based on the shape of the query, index selection for executing the query is decided. Let’s say <strong>1</strong>, <strong>2</strong> &amp; <strong>5</strong> are selected. Then the execution plan is executed in parallel, with these indexes:</p>

<p><img src="https://lh3.googleusercontent.com/TC8NKAMt_QZUOwQqV-WNcgzTL6Vaar9k8vHxenzpNt1D3hmHZljixBDI5mFEUQExU5WfYTEkyXFM2gTPfhLRdSabFQNFMWaS5hGmNsk1eqP1wSYP5aM8hHdLDhQ1uVzYUYjpzT1TYkKDykSFFBKdTP1xBBp6Dr5dve6SfGld15bHfupYYYhCZr-f8dJUoI-kMoWYCa-6LPWSqQWGz40IEMd9CGzMIAPz8iyOPmb4JvkABdEC1wXfteX7FeWJVQJlArPxHcCMIrfcirc9AFmpagn7kkkxt9yXVlNjAKuAx9arf0v_IRvbfci1kGvzpQnffWD-zgDMXeq5llbqusTfBwWNuepm_y3bHSvG4zUObgajbudQxwR5Kn26jeIG11DtjXHk1cDQ3EJLsWpsCb23w_wAf96dNEk1o9erVmDSuuii8kBRS3mRCJqFj7-yz78lYV14wD22ORjZGeUb3Hfp9eLX8j-CDUb7zTAroVkBKWmfOTsSmgUrXvUAtllCxK3X17Uvndx2jAyn22qYdlg34twWYe9srmqC-kGjds8Oa5pNhSZPVqUTK_Ij9zvS-EUDSbFK7oT_xj2uzd9R-uV6w9X1EjuTj4zEZ0V9JDwSZJhGr4C5=w489-h305-no" alt="index race" /></p>

<p>The one with fastest results for all plans or sorted threshold results wins. This index is cached and used for similar queries in future. This cached index is removed from the cache when the threshold writes happens on the collection, which is 1000 writes as of this writing. If indexes are rebuilt, then also this caching is restructured. Or if the <code class="highlighter-rouge">mongod</code> process is restarted, this indexing information is removed from the cache.</p>

<h1 id="designing--using-indexes">Designing / using Indexes</h1>

<p>Like for doing anything greater, designing indexes requires some forward thinking. The goal is:</p>

<ul>
  <li>Efficiency - fast read / write operations</li>
  <li>Selectivity - minimize records scanning</li>
  <li>Other requirements - e.g. how are sorts handled?</li>
</ul>

<p>Selectivity is the primary factor that determines how efficiently an index can be used. Ideally, the index enables us to select only those records required to complete the result set, without the need to scan a substantially larger number of index keys (or documents) in order to complete the query. Selectivity determines how many records any subsequent operations must work with. Fewer records means less execution time.</p>

<p>Think about what queries will be used most frequently by the application. Use <code class="highlighter-rouge">explain</code> command and specifically see the <code class="highlighter-rouge">executionStats</code>:</p>

<ul>
  <li><code class="highlighter-rouge">nReturned</code></li>
  <li><code class="highlighter-rouge">totalKeysExamined</code> - if the number of keys examined very large than the returned documents? We need some index to reduce it.</li>
</ul>

<p>Look at <code class="highlighter-rouge">queryPlanner</code>, <code class="highlighter-rouge">rejectedPlans</code>. Look at <code class="highlighter-rouge">winningPlan</code> which shows the <code class="highlighter-rouge">keyPattern</code> which shows which keys needed to indexed. Whenever we see <code class="highlighter-rouge">stage:SORT</code>, it means that the key to sort is not part of the index or the database was not able to sort documents based on the sort order specified in the database. And needed to perform in-memory sort. If we add the key based on which the sort happens, we will see that the <code class="highlighter-rouge">winningPlan</code>’s’ <code class="highlighter-rouge">stage</code> changes from <code class="highlighter-rouge">SORT</code> to <code class="highlighter-rouge">FETCH</code>. The keys in the index needs to be specified based on the range of the data for them. e.g.: the <strong>class</strong> will have lesser volume than <strong>student</strong>. Doing this needs us to have a trade-off. Although the <code class="highlighter-rouge">executionTimeMillis</code> will be very less but the <code class="highlighter-rouge">docsExamined</code> and <code class="highlighter-rouge">keysExamined</code> will be relatively a <strong>little</strong> large. But this trade-off is worth making.</p>

<p>There is also a way to force queries to use a particular index but this is <strong><em>not recommended to be a part of deployment</em></strong>. The command in concern is the <code class="highlighter-rouge">.hint()</code> which can be chained after <code class="highlighter-rouge">find</code> or <code class="highlighter-rouge">sort</code> for sorting etc. It requires the actual index name or the shape of the index.</p>

<p>In general, when building compound indexes for:</p>
<ul>
  <li><strong>equality field</strong>: field on which queries will perform an equality test</li>
  <li><strong>sort field</strong>: field on which queries will specify a sort</li>
  <li><strong>range field</strong>: field on which queries perform a range test</li>
</ul>

<p>The following rules of thumb should we keep in mind:</p>

<ul>
  <li>Equality fields before range fields</li>
  <li>Sort fields before range fields</li>
  <li>Equality fields before sort fields</li>
</ul>

<p><code class="highlighter-rouge">MongoDB</code> automatically logs slow queries with 100+ ms execution.</p>

<h1 id="profiling">Profiling</h1>

<p><code class="highlighter-rouge">MongoDB</code> has a sophisticated feature of profiling. The logging happens in <code class="highlighter-rouge">system.profile</code> collection. The logs can be seen from <code class="highlighter-rouge">db.system.profile.find()</code>. There are 3 logging levels:</p>

<ul>
  <li>Level 0 - no logging</li>
  <li>Level 1 - logs slow queries</li>
  <li>Level 2 - log all queries, this is much of a debugging feature rather than a performance debugging option</li>
</ul>

<p>To see what profiling level the database is running in, use <code class="highlighter-rouge">db.getProfilingLevel()</code> and to see the status <code class="highlighter-rouge">db.getProfilingStatus()</code>. To change the profiling status, use the command <code class="highlighter-rouge">db.setProfilingLevel(level, milliseconds)</code> - where <code class="highlighter-rouge">level</code> refers to the profiling level and <code class="highlighter-rouge">milliseconds</code> is the ms of which duration the queries needs to be logged. To turn off the logging, use <code class="highlighter-rouge">db.setProfilingLevel(0)</code>.</p>

<p>The query to look in the system profile collection for all queries that took longer than one second, ordered by timestamp descending will be <code class="highlighter-rouge">db.system.profile.find( { millis : { $gt:1000 } } ).sort( { ts : -1 } )</code>.</p>

<h1 id="mongotop">Mongotop</h1>

<p>For performance tuning, we have seen <code class="highlighter-rouge">explain</code>, <code class="highlighter-rouge">hint</code> and <code class="highlighter-rouge">profile</code> options. But what if we want to look at the high level inside a program and figure out where it’s spending it’s time, how would we do that? We’ve <code class="highlighter-rouge">Mongotop</code>, named after <code class="highlighter-rouge">Unix</code> command <code class="highlighter-rouge">top</code>. To see the log on the shell use command <code class="highlighter-rouge">mongotop seconds</code> - where <code class="highlighter-rouge">seconds</code> is the number of seconds after which the next log entry shall be printed.</p>

<p>e.g.: <code class="highlighter-rouge">mongotop 3</code></p>

<h1 id="mongostat">Mongostat</h1>

<p><code class="highlighter-rouge">Mongostat</code> is similar to <code class="highlighter-rouge">iostat</code> command from the <code class="highlighter-rouge">Unix</code>. It gives the database stats in the intervals of 1 seconds. It shows what operations happened during that 1 second. Output may vary depending upon what storage engine is being used. The results of it also shows <code class="highlighter-rouge">getmore</code> is how many <code class="highlighter-rouge">getmore</code> command we’re running every seconds. It’s the way we get more from a cursor, if we’re doing a query that has a large result. The getmore column concerns the number of requests per time interval to get additional data from a cursor. <code class="highlighter-rouge">command</code> shows the number of commands running per second. <code class="highlighter-rouge">flushes</code> refers to the number of times the disk is flushed out per second. <code class="highlighter-rouge">mapped</code> is the amount of mapped memory. <code class="highlighter-rouge">res</code> refers to the resident memory. <code class="highlighter-rouge">faults</code> refers to the number of page faults that we’re causing every second. It’s an important number because page faults mean we’re getting more I/O and more I/O means slower database. <code class="highlighter-rouge">qr</code> and <code class="highlighter-rouge">qw</code> are the queues length for a number of sockets that are requested or waiting for read and write. <code class="highlighter-rouge">ar</code> and <code class="highlighter-rouge">aw</code> are the number of active readers and writers. <code class="highlighter-rouge">netIn</code> &amp; <code class="highlighter-rouge">netOut</code> refers to the amount that was sent into and out of the database during this time frame. <code class="highlighter-rouge">dirty</code> refers to the amount of cache <code class="highlighter-rouge">WiredTiger</code> storage engine has written to and needs to be written back to the disk. <code class="highlighter-rouge">used</code> is the total cache size we’re using.</p>

<h1 id="sharding">Sharding</h1>

<p>Sharding is a technique of splitting up a large collection amongst multiple servers. When we shard, we deploy multiple <code class="highlighter-rouge">mongod</code> servers. And in the front, <code class="highlighter-rouge">mongos</code> which is a router. The application talks to this router. This router then talks to various servers, the <code class="highlighter-rouge">mongod</code>s. The application and the <code class="highlighter-rouge">mongos</code> are usually co-located on the same server. We can have multiple <code class="highlighter-rouge">mongos</code> services running on the same machine. It’s also recommended to keep set of multiple <code class="highlighter-rouge">mongod</code>s (together called <strong>replica set</strong>), instead of one single <code class="highlighter-rouge">mongod</code> on each server. A replica set keeps the data in sync across several different instances so that if one of them goes down, we won’t lose any data. Logically, each replica set can be seen as a <strong>shard</strong>. It’s transparent to the application, the way <code class="highlighter-rouge">MongoDB</code> chooses to shard is we choose a <strong>shard key</strong>.</p>

<p><img src="https://lh3.googleusercontent.com/8mQlJAlaLupNLIIPzjRAowZ2tiMx_EHE54Ssvf_Ph2bp553MLZ6Xsf_Qz6dUDW6zsX2Cb2etBt1hi-_OHW8dNOfj-A6tm3i8dLcq5dj_1B-ZeO6qJuAKLwaq9IoCdiwIz-VndrxHJ0h7A8sXhlxIathRNf2Bj8qrWiaAZpgfOWfznV84IKmxIKYPMgpW2ooAEU41cMNoYSUhlzih64qKgrWm0gGfFBnvaLIqHFIGuLwkMHBkp2QwqUE_uT9NWGS2HV9fZMqMdADZzGWRZu_GNmn0Gw9kmlfrcZfO355tT1wzI37fET-GlnDiVFEhZLa02MUiNewPihV-PkqxK3OpsGUthcZMmY-YwerOr2V-uUiNoh7wdhQjpYf5aA7ygkvcqxtNH6fs7vHsn7KqFjBV_JlWnSZo4cM_USqmW1jjpG00WNEYu_z0S_8n1RNg7BDT7ALzlVI6ceq0QtyV_2VbK-UrgZSoNRRyWgO2fghuIdDBnevSN3sgEJNVQo1gfzlQdHamSkab56jGQNsWr5DBxVQUUveXUtMJ2U-a4ly3a1ufuO09FHWuPM5apwLmspPnz6vxWjqCJgWoE_-gtXlv1hW-LsxyP6nqP0NVCyh_XXZjp86-=w1354-h624-no" alt="MongoDB sharding" /></p>

<p>Assume, for <code class="highlighter-rouge">student</code> collection we have <code class="highlighter-rouge">stdt_id</code> as the shard key or it could be a compound key. And the <code class="highlighter-rouge">mongos</code> server, it’s a range based system. So based on the <code class="highlighter-rouge">stdt_id</code> that we send as the shard key, it’ll send the request to the right <code class="highlighter-rouge">mongod</code> instance.</p>

<p><strong>So, what do we need to really know as a developer?</strong></p>

<ul>
  <li><code class="highlighter-rouge">insert</code> must include a shard key, so if it’s a multi-parted shard key, we must include the entire shard key</li>
  <li>we’ve to understand what the shard key is on collection itself</li>
  <li>for an <code class="highlighter-rouge">update</code>, <code class="highlighter-rouge">remove</code>, <code class="highlighter-rouge">find</code> - if <code class="highlighter-rouge">mongos</code> is not given a shard key - then it’s going to have to broadcast the request to all the different shards that cover the collection.</li>
  <li>for an <code class="highlighter-rouge">update</code> - if we don’t specify the entire shard key, we have to make it a multi update so that it knows that it needs to broadcast it</li>
</ul>

<p><a href="https://goo.gl/photos/Zap9QDfK48bqssgd6">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/mongodb-indexes-and-performance</wp:post_id>
        <wp:post_date>2016-09-05T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-09-05T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[MongoDB schema design]]></title>
        <link>http://xameeramir.github.io/mongodb-schema-design/</link>
        <pubDate>2016-08-30T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://files.pdfsr.com/data/screenshot/MongoDB-Schema-Design-Presentation-Transcript-13756.jpg" alt="MongoDB schema design" /></p>

<p><a href="http://pdfsr.com/pdf/mongodb-schema-design">courtesy</a></p>

<p>Notes for 4th week of <a href="https://university.mongodb.com/courses/MongoDB/M101JS/2016_August/"><code class="highlighter-rouge">MongoDB</code> for <code class="highlighter-rouge">node.js</code> course</a></p>

<h1 id="schema-design">Schema Design</h1>

<p>There is an ideal way to design databases in relational databases - 3rd normal form. In <code class="highlighter-rouge">MongoDB</code>, it’s important to keep data in way that’s conducive to the application using the data. You think about</p>

<ul>
  <li>application data patterns</li>
  <li>what pieces of data are used together</li>
  <li>what pieces of data are used mostly read-only</li>
  <li>what pieces of data are written all the time</li>
</ul>

<p>In contrast, in relational DBMS - the data is organized in such a way that is agnostic to the application.</p>

<p><code class="highlighter-rouge">MongoDB</code> supports <strong>rich documents</strong>. We can store an array of items, a value for a certain key can be an entire other document. This is going to allow us to <strong>pre-join/embed data</strong> for fast access. And that’s important because <strong><code class="highlighter-rouge">MongoDB</code> doesn’t support joins directly</strong> inside the kernel. Instead if we need to join, we need to join in the application itself. The reason being <em>joins are very hard to scale</em>. This forces us to <strong><em>think ahead of time about what data you want to use together with other data</em></strong>. We might wish to embed the data directly within the document. There’re <strong>no constraints</strong>. In case of <code class="highlighter-rouge">MongoDB</code>, it’s as important as we think because of embedding. <code class="highlighter-rouge">MongoDB</code> considers <strong>atomicity</strong> in a way. Also it <strong>doesn’t support transactions</strong>, however <strong>atomic operations</strong> are supported within one document. The data needs to be designed in such a way that it supports atomic operations.</p>

<p>There’s <strong>no declared schema</strong> but there’s a good chance that an application is going to have a schema. By having a schema, we mean that every single document in a particular collection is probably going to have a pretty similar structure. There might be small changes to that structure depending on the different versions of your application. Even though it’s not declared ahead of time, it’s important to think about the data structure so that the data schema itself supports all the different features of your application</p>

<h1 id="relational-normalization">Relational Normalization</h1>

<p>Let’s look at the below denormalized table for a blog posts project. It’s not the 3rd normal form, it’s broken. Let’s say there are multiple
posts with same author, we may update a few rows and leave others un-updated. Leaving the table data inconsistent.</p>

<p><img src="https://lh3.googleusercontent.com/7uhXLc0vHEeIl6guinTbjKfrbn37RlT3Mii6nLdIdAGjR-66TPSDB9EyDkZeca71P7pA_tOphReWJ6xk4Y5vh7zO5eh4K8Twfroyh2N8GizTvbvWLvB_zgdnquVNCKK5vMXPCfigOUS_6MNjEftb8Vl-2Epr4nFOORfi3TlcekzYtPBUdJRHR7Km9MPKCYW8snNQBEvhWmQdJ2jDzUKvKqks38wwGV8tKT8ok6vNX3f9nEmniUOs0fTEcmX5BesT5HH-aufUbUExHOhl2JLqhJvYqIqw2bI6IK1SdhWlwsguJrusjr88ESwR3qVXdSdvTC7nAZrQTohidnlJ79U26c24EhQOpfTjfF1VKQ4jWM7ENAsurGinlQcV1zU2K7X2I0_qQ7oSQZ-O8loyKjzm-0GlfeWNhBnmH3azDKmCWsHsIzga_OCTCk8rGeWjbV-CTbxvnWhkTrqAhd99Y0TIQqMDJjUNPYHkTKBM2aTAq0TD0k9YPOYFheHxDZmmlx49apT2suoSzEQ41r3s9pZAzTsIq9UUwYSK8G7iRtYs4Hvv0rzqlp1TK1VJMQS4SF-8JeKAE8X8aBPlfokq9BjrFaDS8bBEtp81CKnNGFkupYqmM81z=w472-h95-no" alt="denormalized table for a blog posts project" /></p>

<p>Hence this violates normalization because it violates a common way to describing normalized tables in 3rd normal form, which is that <strong><em>every non-key attribute in the table must provide a fact about the key, the whole key and nothing but the key</em></strong>. And that’s of a play on words for what you say in a US courtroom, telling the truth, the whole truth and nothing but the truth. The key in this case, is the <code class="highlighter-rouge">Post Id</code> and there is a non-key attribute <code class="highlighter-rouge">Author Email</code> which does not follow that. Because it does, in fact tell something about the author. And so it violates that 3rd normal form.</p>

<p>The above table can be represented in <code class="highlighter-rouge">MongoDB</code> as:</p>

<pre><code>
{
  id: 'some id',
  title: 'some title',
  body: 'some content here',
  author: {
    name: 'author name',
    email: 'author email id'
  }
}
</code></pre>

<h1 id="refresher---what-are-the-goals-of-normalization">Refresher - what are the goals of normalization?</h1>

<ul>
  <li><strong>Frees the database from modification anomalies</strong> - For <code class="highlighter-rouge">MongoDB</code>, it looks like embedding data would mostly cause this. And in fact, we should try to avoid embedding data in documents in <code class="highlighter-rouge">MongoDB</code> which possibly create these anomalies. Occasionally, we might need to duplicate data in the documents for performance reasons. However that’s not the default approach. The default is to avoid it.</li>
  <li><strong>Should minimize re-design when extending</strong> - <code class="highlighter-rouge">MongoDB</code> is flexible enough because it allows addition of keys without re-designing all the documents</li>
  <li><strong>Avoid bias toward any particular access pattern</strong> - this is something, we’re not going to worry about when describing schema in <code class="highlighter-rouge">MongoDB</code>. And one of the ideas behind the <code class="highlighter-rouge">MongoDB</code> is to tune up your database to the applications that we’re trying to write and the problem we’re trying to solve.</li>
</ul>

<h1 id="living-without-constraints">Living Without Constraints</h1>

<p>One of the great things about relational database is that it is really good at keeping the data consistent within the database. One of the ways it does that is by using foreign keys. A foreign key constraint is that let’s say there’s a table with some column which will have a foreign key column with values from another table’s column. In <code class="highlighter-rouge">MongoDB</code>, there’s no guarantee that foreign keys will be preserved. It’s upto the programmer to make sure that the data is consistent in that manner. This maybe possible in future versions of <code class="highlighter-rouge">MongoDB</code> but today, there’s no such option. The alternative for foreign key constraints is <strong>embedding data</strong>.</p>

<h1 id="living-without-transactions">Living Without Transactions</h1>

<p>Transactions support <a href="https://en.wikipedia.org/wiki/ACID">ACID</a> properties but although there are no transactions in <code class="highlighter-rouge">MongoDB</code>, we do have atomic operations. Well, atomic operations means that when you work on a single document that that work will be completed before anyone else sees the document. They’ll see all the changes we made or none of them. And using atomic operations, you can often accomplish the same thing we would have accomplished using transactions in a relational database. And the reason is that, in a relational database, we need to make changes across multiple tables. Usually tables that need to be joined and so we want to do that all at once. And to do it, since there are multiple tables, we’ll have to begin a transaction and do all those updates and then end the transaction. But with <code class="highlighter-rouge">MongoDB</code>, we’re going to embed the data, since we’re going to <strong>pre-join</strong> it in documents and they’re these rich documents that have hierarchy. We can often accomplish the same thing. For instance, in the blog example, if we wanted to make sure that we updated a blog post atomically, we can do that because we can update the entire blog post at once. Where as if it were a bunch of relational tables, we’d probably have to open a transaction so that we can update the post collection and comments collection.</p>

<p>So what are our approaches that we can take in <code class="highlighter-rouge">MongoDB</code> to overcome a lack of transactions?</p>

<ul>
  <li><strong>restructure</strong> - restructure the code, so that we’re working within a single document and taking advantage of the atomic operations that we offer within that document. And if we do that, then usually we’re all set.</li>
  <li><strong>implement in software</strong> - we can implement locking in software, by creating a critical section. We can build a test, test and set using find and modify. We can build semaphores, if needed. And in a way, that is the way the larger world works anyway. If we think about it, if one bank need to transfer money to another bank, they’re not living in the same relational system. And they each have their own relational databases often. And they’ve to be able to coordinate that operation even though we cannot begin transaction and end transaction across those database systems, only within one system within one bank. So there’s certainly ways in software to get around the problem.</li>
  <li><strong>tolerate</strong> - the final approach, which often works in modern web apps and other applications that take in a tremendous amount of data is to just tolerate a bit of inconsistency. An example would, if we’re talking about a friend feed in Facebook, it doesn’t matter if everybody sees your wall update simultaneously. If okey, if one person’s a few beats behind for a few seconds and they catch up. It often isn’t critical in a lot of system designs that everything be kept perfectly consistent and that everyone have a perfectly consistent and the same view of the database. So we could simply tolerate a little bit of inconsistency that’s somewhat temporary.</li>
</ul>

<p><code class="highlighter-rouge">Update</code>, <code class="highlighter-rouge">findAndModify</code>, <code class="highlighter-rouge">$addToSet</code> (within an update) &amp; <code class="highlighter-rouge">$push</code> (within an update) operations operate atomically within a single document.</p>

<h1 id="one-to-one-relations">One to one relations</h1>

<p>1 to 1 relations are relations where each item corresponds to exactly one other item. e.g.:</p>

<ul>
  <li>an employee have a resume and vice versa</li>
  <li>a building have and floor plan and vice versa</li>
  <li>a patient have a medical history and vice versa</li>
</ul>

<pre>
<code>
 //employee
 {
 	_id : '25',
  	name: 'john doe',
 	resume: 30
 }

 //resume
 {
 	_id : '30',
  	jobs: [....],
 	education: [...],
  employee: 25
 }
 </code>
 </pre>

<p>We can model the employee-resume relation by having a collection of employees and a collection of resumes and having the employee point to the resume through linking, where we have an <code class="highlighter-rouge">ID</code> that corresponds to an <code class="highlighter-rouge">ID</code> in th resume collection. Or if we prefer, we can link in another direction, where we have an employee key inside the resume collection, and it may point to the employee itself. Or if we want, we can embed. So we could take this entire resume document and we could embed it right inside the employee collection or vice versa.</p>

<p>This embedding depends upon how the data is being accessed by the application and how frequently the data is being accessed. We need to consider:</p>

<ul>
  <li>frequency of access</li>
  <li>the size of the items - what is growing all the time and what is not growing. So every time we add something to the document, there is a point beyond which the document need to be moved in the collection. If the document size goes beyond 16<a href="https://en.wikipedia.org/wiki/Megabyte">MB</a>, which is mostly unlikely.</li>
  <li>atomicity of data  - there’re no transactions in <code class="highlighter-rouge">MongoDB</code>, there’re atomic operations on individual documents. So if we knew that we couldn’t withstand any inconsistency and that we wanted to be able to update the entire employee plus the resume all the time, we may decide to put them into the same document and embed them one way or the other so that we can update it all at once.</li>
</ul>

<h1 id="one-to-many-relations">One to Many Relations</h1>

<p>In this relationship, there is many, many entities or many entities that map to the one entity. e.g.:</p>
<ul>
  <li>a city have many persons who live in that city. Say <a href="https://en.wikipedia.org/wiki/New_York_City">NYC</a> have 8 million people.</li>
</ul>

<p>Let’s assume the below data model:</p>

<pre>
 <code>
  //city
  {
  _id: 1,
  name: 'NYC',
  area: 30,
  people: [{
      _id: 1,
      name: 'name',
      gender: 'gender'
        .....
    },
    ....
    8 million people data inside this array
    ....
  ]
}
</code>
</pre>

<p>This won’t work because that’s going to be REALLY HUGE. Let’s try to flip the head.</p>

<pre>
<code>
 //people
 {
 _id: 1,
 name: 'John Doe',
 gender: gender,
 city: {
     _id: 1,
     name: 'NYC',
     area: '30'
       .....
   }
}
</code>
</pre>

<p>Now the problem with this design is that if there are obviously multiple people living in NYC, so we’ve done a lot of duplication for city data.</p>

<p>Probably, the best way to model this data is to use <strong>true linking</strong>.</p>

<pre>
<code>
 //people
 {
 _id: 1,
 name: 'John Doe',
 gender: gender,
 city: 'NYC'
}

//city
{
_id: 'NYC',
...
}
</code>
</pre>

<p>In this case, <code class="highlighter-rouge">people</code> collection can be linked to the <code class="highlighter-rouge">city</code> collection. Knowing we don’t have foreign key constraints, we’ve to be consistent about it. So, this is a <em>one to many</em> relation. It requires 2 collections. For small one to few (which is also one to many), relations like blog post to comments. Comments can be embedded inside post documents as an array.</p>

<p>So, if it’s truly one to many, 2 collections works best with linking. But for one to few, one single collection is generally enough.</p>

<h1 id="many-to-many-relations">Many to Many Relations</h1>

<p>e.g.:</p>

<ul>
  <li>books to authors</li>
  <li>students to teachers</li>
</ul>

<p>The books to authors is a <strong>few to few</strong> relationship, so we can have either an array of books or authors inside another’s document. Same goes for students to teachers. We could also embed at the risk of duplication. However this will required that each student has a teacher in the system before insertion and vice versa. The application logic may always not allow it. In other words, the parent object must exist for the child object to exist.</p>

<h1 id="multikeys">Multikeys</h1>

<p>Multikey indexes is the feature because of which linking and embedding works so well. Assume that we’ve 2 schemas for student and teachers.</p>

<pre>
<code>
 //students
 {
 _id: 1,
 name: 'John Doe',
 teachers: [1,7,10,23]
}

//teachers
{
_id: '10',
name:'Tony Stark'
}
</code>
</pre>

<p>Now there are 2 obvious queries.</p>

<ul>
  <li>How to find all the teachers a particular student has had? - this can be searched by looking for teachers key in the students collection</li>
  <li>How to find all the students whom have had a particular teacher? - this is a little difficult query and requires to use <code class="highlighter-rouge">set</code> operators. And order for that we need to be efficient, we need use <strong>Multikey indexes</strong>.</li>
</ul>

<p>To create an index on <code class="highlighter-rouge">teachers</code> column on <code class="highlighter-rouge">students</code> collection, use <code class="highlighter-rouge">db.students.ensureIndex({ teachers : 1 })</code>.</p>

<p><img src="https://lh3.googleusercontent.com/ed4cCRxNgf3FCq2JwHbq-PiHC1vgvvgE3S-rQ3UxA9R0cD3LxHGuI8t_YHk03wWxylFHEhNDjlJ-CfxitfLe35SbxPW9cK84bvTcghlpqf-vWBVC2xAruTx5jOPEesF8gc-9SvTeI8F2ZN-tmOEIuIQmRMrNYONPzkoXjFbs7-wVrMgjT0Jn7PHVyZQKzn9aaFasCcLrZzqHO8AW7qlIhraBZkd9BqbFC4fP6eKzskcbYVNTO4w7oG7CeKLFmc-riIxjZscSRm-_V6P8dZMp8W-l7XfSo_gcaiVyAXnZkAHsws7sd06q1v80IKa5i0lw82c53JoAZzQQKq-T3jxLC9xu1wkVOsprq0qEHODoh_LEc31C7M87lbAvRhkIlSNEjVADfevM8FFwyXlpr11ORFKBJJ4ZHxeMmxLdYgC8AMiegUXxs_LAnweV_A1SHe8N1R9CrC1h-EQXkv7XEFuCAl1Wh69VmxAGA12CbPpunPMiEjhh5vXU_DvCLBHfjvTRLo2aOG7Bdlvs1CAPtAZY5E3zW0nLlP9OHa4xT1TSV9Y6LWC0UMK9QnmOtQ6u0yPrkN1qEuX4i0fm8_VY7n53XFvQ7ZuVJkM4OvXnXdlpJ3gEYlwF=w424-h113-no" alt="creating indexes in MongoDB" /></p>

<p>Now to find all the students whom have had a particular teacher? use the query <code class="highlighter-rouge">db.students.find( { 'teachers': {$all: [0,1]}} )</code>. Now, if we append <code class="highlighter-rouge">.explain()</code> to the above query - it shows the internal working by showing where the keys were applied etc.</p>

<h1 id="benefits-of-embedding">Benefits of Embedding</h1>

<p>The main reason for embedding documents in <code class="highlighter-rouge">MongoDB</code> is performance. The main performance benefit comes from improved read performance. Now, why do we get read performance. The reason is the nature of the way computer systems are built, which is they often have spinning disks and those spinning disks have a very <strong>high latency</strong>, which means they take a very long time (upto 1ms) to get to the first byte. But, when the first byte is access, each additional byte comes very quickly. So they tend to be pretty <strong>high bandwidth</strong>. So the idea is if we can co-locate the data to be used together in the same document, embed it and then we’re going to spin the disk, find the sector where we need this information and then we’re gonna start reading it. And we’re going to get all the information we need in one go. Also it means if we have 2 pieces of data that would normally be in 2 collections or in several relational database tables. Instead, they’re in one document, that we avoid <strong>round trips to the database</strong>.</p>

<h1 id="trees">Trees</h1>

<p>One classic problem from the world of schema design is how do you represent a tree inside the database? Let’s look at the example problem for representing the e-commerce categories in a e-commerce site, such as Amazon. Where we have home, outdoors, winter, snow. And the idea is that we’ve the <code class="highlighter-rouge">products</code>. Also we’ve a <code class="highlighter-rouge">category</code>, where we can lookup <strong>category 7</strong> and see the <code class="highlighter-rouge">categoryName</code>, some of the properties for the <code class="highlighter-rouge">category</code>.</p>

<pre>
<code>
 //products
 {
category: 7,
 productName: 'ABC'
}

//category
{
_id: '7',
categoryName:'outdoors',
parent: 6
}
</code>
</pre>

<p>One way to do it is to keep a <code class="highlighter-rouge">parent</code> id - this might be something we can do in a simple relational database. But this doesn’t make it easy to find all the <code class="highlighter-rouge">parent</code>s to this <code class="highlighter-rouge">category</code>. We’ve to iteratively query, find the parent of this and the parent of that until we get all the way to the top.</p>

<p>So an alternative way to do it in <code class="highlighter-rouge">MongoDB</code> is to be able to list ancestors or children. So, let’s think about that and how that would work. So, we could decide to list all the children of this <code class="highlighter-rouge">category</code>:</p>

<pre>
<code>
//category
{
_id: '7',
categoryName:'outdoors',
children: [3,6,7,9]
}
</code>
</pre>

<p>That’s also fairly limiting, if we’re looking to be able to look and find the entire sub-tree that is above a certain piece of tree. Instead, what works pretty well and again, enable by the ability to put arrays inside <code class="highlighter-rouge">MongoDB</code> is to list the ancestors from the top in order.</p>

<pre>
<code>
//category
{
_id: '7',
categoryName:'outdoors',
ancestors: [3,7,5,8,9]
}
</code>
</pre>

<p>Again the ability to structure and express rich data is one of the things that makes <code class="highlighter-rouge">MongoDB</code> so interesting. This would be very difficult to do in a relational database. Now, in terms of how you represent the data for something like a <code class="highlighter-rouge">product</code> <code class="highlighter-rouge">category</code> hierarchy, again it all depends upon the access patterns. It depends on how we believe we’re going to need to show the data, access the data for the user. And then based on that, we know how to model it.</p>

<h1 id="when-to-denormalize">When to Denormalize</h1>

<p>One of the reasons for normalization in relational database is to avoid modification anomalies that come with the duplication of data. And when we look at <code class="highlighter-rouge">MongoDB</code> and how it’s structured, allowing these rich documents, it’s easy to assume that what we’re doing is we’re denormalizing the data. And to certain extent, that’s true. As long as we don’t duplicate data, we don’t open ourselves for modification anomalies.</p>

<p>Generally it’s good to embed that data in case of <strong>one to one</strong> relationships. In case of <strong>one to many</strong> relationships, embedding can also work well without duplication of data as long as we embed from <strong>many to the one</strong>. Now, if we go from the one to the many, then linking would avoid the duplication of data. Now, if we want to embed something, even if it causes duplication of data for performance reasons to match the access patterns of the applications. That could make sense, especially if the data is rarely changing or being updated. But we can avoid it often enough, even in this relationship, if we go from the <strong>many to one</strong>. In <strong>many to many</strong> relation, which we looked at with <code class="highlighter-rouge">students</code> and <code class="highlighter-rouge">teachers</code> and <code class="highlighter-rouge">authors</code> and <code class="highlighter-rouge">books</code>, there if you want to avoid the modification anomalies that come with denormalization, all we need to do is link through the arrays of <code class="highlighter-rouge">object ids</code> in the documents.</p>

<p><img src="https://lh3.googleusercontent.com/7ZmjMz8KulV4BR4hn8A_a2toNpau-CzJmZlpbv8WJ9iSdiwTQLwoJl-VzHQohfJOhYLOZKdwYQX5enzB4D6NyDwHoky95tes8IFlh07ReY_Zi7m8cRdS3AwY-oerBUnu6Nk76yS4QrVW14zLN4FW8jDI9jcizIE9SMw9HmKbtHpVUQ7Jwt8EY1pnOlycrB2Bcx0VmhTKJNawDKf4oFsVDajX0mCVC7DKmIBFWuh2RhKMWmhnf-SEjQt5RAFayO78yW__AZ7IXM7Jv8HA8ENqeDhlaUjr4mXfHq4fn8Z4oUkWPrcskbZihR6dqOjTQl8-Mpcw2afMCqdi06HkaeES8Zvdh6ua6p5lOjzTLq1Nn6Y_Op5k_ENe9sdj_UR-9OnU6ATnpZwRakacZRdlPXbaSLSMUc1doJtG8PSRZSlgf8yUe2UNdKV8xeuTuRBj7gWWeZKzSuN00PQp_Ej6rY9DZbPWlMxhwm2dT1VJDRZkSsmjScGsQdYSNmjGWlnsBUOU4lCEC0GmuDET8YwQPmfRtsc_1IZqdymJUy44q368UTgGWUDEG49532tEnwcv70crSN03dRWoGOdcC7R-lxNR_jNRr1-CPvDzKDIM10mDHGqqwTsW=w629-h270-no" alt="When to Denormalize in MongoDB" /></p>

<p>These are all guidelines. For a real world application, we may need to embed data for performance reasons, to match the data access patterns - - it might be needed to embed the data.</p>

<p><a href="https://goo.gl/photos/mTCgFQN8b9s9sNzSA">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/mongodb-schema-design</wp:post_id>
        <wp:post_date>2016-08-30T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-08-30T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[CRUD operations in MongoDB]]></title>
        <link>http://xameeramir.github.io/mongodb-crud-operations/</link>
        <pubDate>2016-08-16T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.codingerik.com/assets/images/crudblog.png" alt="CRUD" /></p>

<p><a href="http://www.codingerik.com/CRUD_Loop_Tutorial-post.html">courtesy</a></p>

<p>In this post, we’re going to see a few example of CRUD operation in <code class="highlighter-rouge">MongoDB</code></p>

<h1 id="restoring-using-mongorestore">Restoring using mongorestore</h1>
<p>After making sure that <code class="highlighter-rouge">mongod</code> and <code class="highlighter-rouge">mongo</code> are running, go to the dump’s parent directory in a new terminal. And use the command <code class="highlighter-rouge">mongorestore dump</code>. Where <code class="highlighter-rouge">dump</code> is the folder name in which the database dump is present.</p>

<p><img src="https://lh3.googleusercontent.com/GsQPxzd5QaVK3bN6tQaOFAepiQ_BIVmn-CgSuPo5bVH4L3w1Ev5JJUJkO3NaOCqQK7i14uxm5QikvmCbv-6jz5hJJzcFG4-HXZo40-jxAyAPNclNx1m5puEaXUmnLA7Nss5zrP0ovBJL1jiKOBZH0Rof8Kg6yfKzdWBA8I8__kW2eXgLWVnbjqeGlz2N2tH_7Ou9eXYxGNSB4-ZuXot3_rm_GYar-TPwkr05D_0fITy2JgsPQezsTMpMHr7REkxVRK-Il-TRzktppVaS0Pd3eCnyRaK_PF867pCvWI25AkTjS_Y1VUn3BniociBqIqZBsQklP-miKtDlurav6CAh_Fek7b0vQCmfvbDX1MmpV9x00QNUrxfoCdDZ6oVuoH3jRYsVntsxmRfi5zTCqvh9ddUjPjrlBNJ9HyJrRaK5ee8P5tI_xquJODZn4CtLAU6g2oVQ4bxDtfZppzf_pYcmUBWuN1v-jQIn4zdc2xbfhePTqASgDi5NZiF83o8XhwuCjhXEY-aqGastao7ZYC77CNKodQ8knWeR9ApAq9STOQ6Orvsz-IuvCCnlG01-Qz8i2aqCz3Rr4rEX_RFIlfIHd4EmcRfvC98=w648-h443-no" alt="Restoring using mongorestore" /></p>

<h1 id="creating-documents">Creating Documents</h1>

<p>There’re two principal commands for creating documents in MongoDB:</p>

<ul>
  <li><code class="highlighter-rouge">insertOne()</code></li>
  <li><code class="highlighter-rouge">insertMany()</code></li>
</ul>

<p>There’re other ways as well such as <code class="highlighter-rouge">Update</code> commands. We call these operations, upserts. Upserts occurs when there’re no documents that match the <strong>selector</strong> used to identify documents.</p>

<p>Although MongoDB inserts ID by it’s own, We can manually insert custom IDs as well by specifying <code class="highlighter-rouge">_id</code> parameter in the <code class="highlighter-rouge">insert...()</code> functions.</p>

<p>To insert multiple documents we can use <code class="highlighter-rouge">insertMany()</code> - which takes an array of documents as parameter. When executed, it returns multiple <code class="highlighter-rouge">id</code>s for each document in the array. To drop the collection, use <code class="highlighter-rouge">drop()</code> command. Sometimes, when doing bulk inserts - we may insert duplicate values. Specifically, if we try to insert duplicate <code class="highlighter-rouge">_id</code>s, we’ll get the <code class="highlighter-rouge">duplicate key error</code>:</p>

<pre><code class="javascript">

db.startup.insertMany(
  [
  {_id:"id1", name:"Uber"},
  {_id:"id2", name:"Airbnb"},
  {_id:"id1", name:"Uber"},
  ]
  );
</code></pre>

<p><img src="https://lh3.googleusercontent.com/g_f8pkYn3-e01QF8AECbIi-n_x6qB1xhbEx-e5FEZC9KA8f5FI9mx05cGZaNAaDUCdsJ7LHJz9DH-aXpU8iZlFwu154_8FsUe8cpfLTm4yImQJ4MJv8CZyat0GqjCpbN05sZ_UgEv9HqxTTgbNjlFGrPYthKepJwZ0dQrmMNxyAJOwXU_FQd752v9l_f-1-jKzkmrgNwOmYFpkvxq1PKbmo39LJdRxjR2CUsUn0xaIvrX5Ns_dJjKAaiWZN-7Kn73i55eWWt4sZduGdpE4fsUVIUZRZmUp2RpPu6VPZ7nbRG6BVkL6oFvQYuwI0Y4aCbe8AnIlkr3Y8tpN8iSxSLnZIDSoH0KB92ldrIAZjYK2UugB5WlSLiLuJst0tdLCs2FPpbFf4nu1ajDzzpkEKsdOR79lQNRxz-uOAg8lAaXY4EY7QL7VpWNVtKhFFsuCSkcZRKDmwyFwYFVL2RrsKBB6-Jz2lAAfaFFb5tBvHClr-iH91UYoLlNcF138MtaoXanU25K_5SqicvoF7gC5J4TaeaM4Obl95dBFtIVxPdlJOc_sXrPNsCKduhtC7MR3LBj7su0MxKixG850BQApxCjX6Bk_neK8I=w603-h102-no" alt="MongoDB duplicate key error" /></p>

<p>MongoDB stops inserting operation, if it encounters an error, to supress that - we can supply <code class="highlighter-rouge">ordered:false</code> parameter. Ex:</p>

<pre><code class="javascript">

db.startup.insertMany(
[
{_id:"id1", name:"Uber"},
{_id:"id2", name:"Airbnb"},
{_id:"id1", name:"Airbnb"},
],
{ordered: false}
);
</code></pre>

<h1 id="the-_id-field">The _id field</h1>

<p><code class="highlighter-rouge">MongoDB</code> assigns an <code class="highlighter-rouge">_id</code> field to each document and assigns primary index on it. There’re ways by which we can apply secondary indices as well. By default, <code class="highlighter-rouge">MongoDB</code> creates values for the <code class="highlighter-rouge">_id</code> field of type <code class="highlighter-rouge">ObjectID</code>. This value is defined in <code class="highlighter-rouge">BSON</code> spec and it’s structured this way:</p>

<blockquote>
  <p>ObjectID (12 bytes HEX string) = Date (4 bytes, a timestamp value representing number of seconds since the Unix epoch) + MAC address (3 bytes) + PID (2 bytes) + Counter (3 bytes)</p>
</blockquote>

<h1 id="reading-documents">Reading documents</h1>

<p>To apply specific value filters, we can pass specific values to the <code class="highlighter-rouge">find()</code> command. Here is a SQL query:</p>

<p><code class="highlighter-rouge">SELECT * FROM Table1 WHERE name = 'ABC'</code></p>

<p>which is equivalent to the following in <code class="highlighter-rouge">MongoDB</code> (notice <code class="highlighter-rouge">Collection1</code> for <code class="highlighter-rouge">Table1</code>):</p>

<p><code class="highlighter-rouge">db.Collection1.find({name: 'ABC'})</code></p>

<p>We can chain <code class="highlighter-rouge">count()</code> to get the number of results, <code class="highlighter-rouge">pretty()</code> to get a readable result. The results can be further narrowed by adding additional parameters:</p>

<p><code class="highlighter-rouge">db.Collection1.find({name: 'ABC', rollNo: 5})</code></p>

<p>It’s important to notice that these filters are <strong>AND</strong>ed together, by default. To apply an <strong>OR</strong> filter, we need to use <code class="highlighter-rouge">$or</code>. These filters will be specified depending upon the structure of the document. Ex: for object attribute <code class="highlighter-rouge">name</code> for an object <code class="highlighter-rouge">school</code>, we need to specify filter like <code class="highlighter-rouge">"school.name" = 'AUHS'</code></p>

<p>We’re using here the <strong>DOT</strong> notation, by trying to access a nested field <code class="highlighter-rouge">name</code> of a field <code class="highlighter-rouge">school</code>. Also notice that the filters are <strong>quoted</strong>, without which we’ll get syntax errors.</p>

<p><strong>Equality matches on arrays can be performed:</strong></p>

<ul>
  <li>on the entire arrays</li>
  <li>based on any element</li>
  <li>based on a specific element</li>
  <li>more complex matches using operators</li>
</ul>

<p>In the below query:</p>

<p><code class="highlighter-rouge">db.Collection1.find({name: ['ABC','XYZ']})</code></p>

<p><code class="highlighter-rouge">MongoDB</code> is going to identify documents by an exact match to an array of one or more values. Now for these types of queries, the <strong>order</strong> of elements matters, meaning that we will only match documents that have <code class="highlighter-rouge">ABC</code> <strong>followed</strong> by <code class="highlighter-rouge">XYZ</code> and those are the <strong>only 2</strong> elements of the array <code class="highlighter-rouge">name</code></p>

<pre><code>
{name:["ABC","GHI","XYZ"]},
{name:["DEF","ABC","XYZ"]}
</code></pre>

<p>In the above document, let’s say that we need to get all the documnts where <code class="highlighter-rouge">ABC</code> is the first element. So, we’ll use the below filter:</p>

<p><code class="highlighter-rouge">db.Schools.find({'name.0': 'ABC' })</code></p>

<h1 id="cursors-in-mongodb">Cursors in MongoDB</h1>

<p><code class="highlighter-rouge">MongoDB</code> returns results in batches. To see how many objects are left in a batch, we use <code class="highlighter-rouge">objLeftInBatch()</code> like this:</p>

<pre><code>
var c = db.Schools.find();
var doc = function() {return c.hasNext()? c.next : null;}
c.objLeftInBatch();
</code></pre>

<p>To iterate through this batch we can use <code class="highlighter-rouge">doc()</code> that we setup in the above code block. More learning on cursors can be found at <a href="https://docs.mongodb.com/">https://docs.mongodb.com/</a></p>

<h1 id="projection-in-mongodb">Projection in MongoDB</h1>

<p>Projection is a handy way of reducing the size of the data returned for any one query. By default <code class="highlighter-rouge">MongoDB</code> returns all fields in all documents for queries. To limit the amount of data that <code class="highlighter-rouge">MongoDB</code> sends to the application, we can include projections in the queries to reduce network overhead and processing requirements by limiting the fields that’re returned in results documents. They’re provided as second argument to the <code class="highlighter-rouge">find()</code> command. Now, if we need to limit our documents so that they just contain a title. We can do that using this <code class="highlighter-rouge">db.Schools.find({name:"ABC"},{rollNo:1}).</code> In the result, <code class="highlighter-rouge">_id</code> is always returned. To exclude it, use <code class="highlighter-rouge">db.Schools.find({name: "ABC"},{rollNo: 1, _id: 0}).</code>. So, to exclude any field, use 0 next to the colon in project query.</p>

<h1 id="comparison-operators-in-mongodb">Comparison operators in MongoDB</h1>

<p>We can use <a href="https://docs.mongodb.com/manual/reference/operator/query-comparison/">comparison operators</a> as well in our queries. Eg: Use <code class="highlighter-rouge">db.Schools.find({rollNo: {$gt: 10}})</code> To find all students having roll number beyond than 10. Notice the <a href="https://docs.mongodb.com/manual/reference/operator/query/gt/#op._S_gt"><code class="highlighter-rouge">$gt</code></a> operator. Combine this filter with <a href="https://docs.mongodb.com/manual/reference/operator/query/lt/#op._S_lt">$lt</a> for getting results beyond roll number 10 and before roll number 50: <code class="highlighter-rouge">db.Schools.find({rollNo: {$gt: 10, $lt: 50}})</code>.</p>

<p>There’re other operators as well: <code class="highlighter-rouge">$gte</code> (greater than, equal to), <code class="highlighter-rouge">$lte</code> (less than, equal to), <code class="highlighter-rouge">$ne</code> (not equal to). One thing to notice about the not equal to (<code class="highlighter-rouge">$ne</code>) operator is that it not only returns documents having value not equal to specified value but also returns documents not having the attribute itself.</p>

<h1 id="element-operators-in-mongodb">Element operators in MongoDB</h1>

<p><code class="highlighter-rouge">MongoDB</code> because of it’s flexible data model supports operators that allow us to detect the presence of or absence of a given field. This flexibility in terms of data models also extends to the data type of a field value. Because it’s possible although not usually a good idea, to have the same field in a collection have a different type of value from one document to another. These operators are used for finding the existence of elements (<code class="highlighter-rouge">$exists</code>) and data type of the field using the <code class="highlighter-rouge">$type</code> operator.</p>

<h1 id="logical-operators">Logical operators</h1>

<p>Like SQL, there’re <a href="https://docs.mongodb.com/manual/reference/operator/query-logical/">logical operators</a> such as <code class="highlighter-rouge">$and</code>, <code class="highlighter-rouge">$or</code>, <code class="highlighter-rouge">$not</code> and <code class="highlighter-rouge">$nor</code>. These’re the examples:</p>

<pre><code>
db.Schools.find({
  $and: [{ rollNo: { $gt: 10 }}, { rollNo: { $gt: 50 }}]
  })

db.Schools.find({
  $or: [{ rollNo: { $gt: 10 }}, { rollNo: { $gt: 50 }}]
  })
</code></pre>

<p>Now, why there’s an <code class="highlighter-rouge">$and</code> operator <a href="http://stackoverflow.com/q/38960922/2404470">when the filters are by default <strong>AND</strong>ed?</a> Because, in a <code class="highlighter-rouge">JSON</code> document, we cannot have duplicate keys. In the above <code class="highlighter-rouge">$and</code> example, we’re <strong>AND</strong>ing <code class="highlighter-rouge">rollNo</code> twice. Remember that <code class="highlighter-rouge">$and</code> is used we need to filter data on the same field.</p>

<h1 id="regular-operators">Regular operators</h1>

<ul>
  <li>The slashes <code class="highlighter-rouge">/</code> in the below regex code means the start and end of the regular expression.</li>
  <li>The carat <code class="highlighter-rouge">^</code> means start at the beginning of whatever value we’re matching against and match exactly a capital AB.</li>
  <li>The dot <code class="highlighter-rouge">.</code> is the wild card character.</li>
  <li>The arterisk <code class="highlighter-rouge">*</code> indicates match any character any number of times</li>
  <li><code class="highlighter-rouge">\s</code> means a space character after AB</li>
</ul>
<pre><code>
db.Schools.find({
{ name: { $regex: /^AB\s.*/ }}
})
</code></pre>

<h1 id="array-operators">Array operators</h1>

<p>These operators are used to work on arrays. For getting matching values from an array (<code class="highlighter-rouge">$all</code>), arrays of a particular size (<code class="highlighter-rouge">$size</code>) and <code class="highlighter-rouge">$elemMatch</code> - which <a href="http://stackoverflow.com/q/38960922/2404470">requires all criteria be satisfied</a> within a single element of an array field.</p>

<h1 id="updating-documents">Updating documents</h1>

<p><code class="highlighter-rouge">MongoDB</code> provides 3 ways to update documents.</p>

<ul>
  <li><code class="highlighter-rouge">updateOne()</code> - the first argument is the filter expression, second specifies the values to be updated</li>
  <li><code class="highlighter-rouge">updateMany()</code></li>
  <li><code class="highlighter-rouge">replaceOne()</code></li>
</ul>

<pre><code>
db.Schools.updateOne({ name: "ABC" }, { $set: { rollNo: 15 } })
</code></pre>

<p>There are a couple of <a href="https://docs.mongodb.com/manual/reference/operator/update/#id1">update operators</a>. In the above query, <code class="highlighter-rouge">$set</code> operator simply replaces (or adds if not already exists) the value for the field being specified. There are <a href="https://docs.mongodb.com/manual/reference/operator/update/#array">array update operators</a> as well. To apply updates for each <code class="highlighter-rouge">array</code> element, use the <code class="highlighter-rouge">$each</code>. <code class="highlighter-rouge">$position</code> modifies the $push operator to specify the position in the array to add elements.</p>

<p>Sometimes, we might see elements set to <strong>NULL</strong>. It’s better to remove them altogether using <code class="highlighter-rouge">$unset</code> operator.</p>

<pre><code>
db.Schools.updateMany({ name: null }, { $unset: { name: "" } })
</code></pre>

<h1 id="upserts-of-update-command">Upserts of update command</h1>

<p>Upserts are operations for which, if no document is found matching our filter, we insert a new document - hence the term <strong>upsert</strong>.</p>

<p>And here we finish second week <a href="https://university.mongodb.com/courses/M101JS/about">course</a> notes</p>

<p><a href="https://goo.gl/photos/bXNX1CXXhi6qahue9">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/mongodb-crud-operations</wp:post_id>
        <wp:post_date>2016-08-16T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-08-16T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[MongoDB for node.js developers jumpstart]]></title>
        <link>http://xameeramir.github.io/mongodb-for-nodejs/</link>
        <pubDate>2016-08-09T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://coenraets.org/blog/wp-content/uploads/2012/10/nodemango1.jpg" alt="MongoDB for node.js developers jumpstart" /></p>

<p><a href="http://coenraets.org/blog/2012/10/creating-a-rest-api-using-node-js-express-and-mongodb/">courtesy</a></p>

<p>These’re my notes for the <a href="https://university.mongodb.com/courses/M101JS/about">MongoDB for node.js course</a></p>

<h1 id="what-is-mongodb">What is MongoDB?</h1>

<p>MongoDB is a document database holding data in JSON format. Since it’s not based on joining, it’s easy to distribute data across servers by it’s sharding feature.</p>

<p>Developers can develop application which can be agnostic about deployments. MongoDB supports scaling out as opposed to RDBMS which supports scaling up. Mongo shell is written using C++ V8 for administering the MongoDB.</p>

<h1 id="what-is-nodejs">What is node.js</h1>

<blockquote>
  <p><code class="highlighter-rouge">node.js</code> is basically a <code class="highlighter-rouge">C++</code> program that you control using <code class="highlighter-rouge">V8 javascript</code>. So any applications you write using <code class="highlighter-rouge">node.js</code> will be written in <code class="highlighter-rouge">javascript</code> and it will control this <code class="highlighter-rouge">C++</code> application (<code class="highlighter-rouge">node.js</code>) and you’ll be able to say something like they made request for this resource and your application actually in <code class="highlighter-rouge">javascript</code> will say: okey, they made a request for this resource, I don’t have to respond to that. Now respond accordingly.</p>
</blockquote>

<p><code class="highlighter-rouge">Node.js</code> connects to <code class="highlighter-rouge">MongoDB</code> using drivers. Installing <code class="highlighter-rouge">32</code> bit release shall be avoided because it limits the addressable size of data using the default storage engine.</p>

<h1 id="what-is-json">What is JSON?</h1>

<p>To a layman, <a href="http://json.org/"><code class="highlighter-rouge">JSON</code></a> is merely a string, anyways. <code class="highlighter-rouge">JSON</code> objects are composed of <em>key-value</em> pairs. Keys must be strings, Keys and values must be separated by semi-colons. Fields within a <code class="highlighter-rouge">JSON</code> object are separated by commas as delimiters. <code class="highlighter-rouge">JSON</code> objects are opened and closed using curly braces:</p>

<pre>
<code>
{
  "string" : "sting value goes here",
  "date" : "2015-10-27T22:35:21.908Z",
  "number" : 123,
  "object" : {
    "key1" : "value1",
    "key2" : "value2"
  },
  "boolean" : true,
  "array" : [ 
    "test", 
    { "key1" : "a", "key2" : "b" },
    [ "abc", "xyz" ]
  ]
}
</code>
</pre>

<p>The above example shows that <code class="highlighter-rouge">JSON</code> supports a number of data-types. The <code class="highlighter-rouge">object</code> field shows an example of nested values. As we can see <code class="highlighter-rouge">object</code> and <code class="highlighter-rouge">array</code> - <code class="highlighter-rouge">MongoDB</code> data models commonly make use of nesting and even what we might call <strong>deep nesting</strong>. The flexibility <code class="highlighter-rouge">JSON</code> provides makes it simple to implement different data access patterns by creating objects that contain all the data required to render a webpage full of content or say to provide another type of data view for users with very few requests.</p>

<h1 id="what-is-bson">What is BSON?</h1>
<p><code class="highlighter-rouge">MongoDB</code> stores data as <a href="http://bsonspec.org/"><code class="highlighter-rouge">BSON</code></a> (binary <code class="highlighter-rouge">JSON</code>). Here is the comparison:</p>

<pre>
<code>
// JSON
{
	"hello": "world"
}

// BSON
"\x16\x00\x00\x00\x02hello\x00 \
x06\ x00\ x00\ x00world\ x00\ x00 "
</code>
</pre>

<p><code class="highlighter-rouge">MongoDB</code> drivers send and recieve data in <code class="highlighter-rouge">BSON</code> format and when the data is written to <code class="highlighter-rouge">MongoDB</code>, it’s stored in <code class="highlighter-rouge">BSON</code>.</p>

<p>On the application side, the drivers map <code class="highlighter-rouge">BSON</code> to most appropriate native data types. It’s</p>

<ul>
  <li>lightweight</li>
  <li>traversable, to support a variety of operations necessary for writing, reading and indexing <code class="highlighter-rouge">MongoDB</code> documents</li>
  <li>efficient, meaning encoding/decoding data to/from BSON as the drivers need to do can be performed very quickly.</li>
</ul>

<p><code class="highlighter-rouge">JSON</code> doesn’t distinguishes between <code class="highlighter-rouge">integer</code>s and <code class="highlighter-rouge">float</code>s. Doesn’t supports <code class="highlighter-rouge">date</code>s. <code class="highlighter-rouge">BSON</code> extends the JSON value types to include <code class="highlighter-rouge">integer</code>s, <code class="highlighter-rouge">double</code>s, <code class="highlighter-rouge">date</code>s and binary data to support images and a number of other types of data.</p>

<h1 id="installation-for-windows">Installation for Windows</h1>

<p>To access the <code class="highlighter-rouge">mongo</code> and <code class="highlighter-rouge">mongod</code> directly from shell, Change the path for MongoDB:</p>

<ul>
  <li>Go to <code class="highlighter-rouge">System Properties</code></li>
  <li>Go to <code class="highlighter-rouge">Advanced settings</code></li>
  <li>Click <code class="highlighter-rouge">Environment variables</code></li>
  <li>Go to <code class="highlighter-rouge">System variables</code></li>
  <li>Go to <code class="highlighter-rouge">Path</code> (this is where Windows looks for executables)</li>
  <li>Add the <code class="highlighter-rouge">MongoDB</code>’s startup location (eg: <code class="highlighter-rouge">C:\Program Files\MongoDB\Server\3.2\bin</code>)</li>
</ul>

<p>Sometimes, you <a href="http://superuser.com/q/1111180/249540">might need to refresh the system to see these shortcuts working</a></p>

<p>However before using <code class="highlighter-rouge">mongodb</code> from terminal, create the <code class="highlighter-rouge">C:\data\db</code> directory for <code class="highlighter-rouge">MongoDB</code> to <strong>store</strong> data by following the below commands:</p>

<p><code class="highlighter-rouge">md \data\db</code></p>

<p>Notice, the <code class="highlighter-rouge">\</code> before <code class="highlighter-rouge">data\db</code> - this makes sure that the directory is created in root directory (in this case <code class="highlighter-rouge">C:\</code>) only.</p>

<p>Now, if you type <code class="highlighter-rouge">mongod</code> and hit <kbd>Enter</kbd>, it starts running. If you read the log printed on the terminal, it says that <code class="highlighter-rouge">MongoDB</code> is listening on <code class="highlighter-rouge">port=27017</code> and that <code class="highlighter-rouge">dbpath=C:\data\db</code> i.e. the default path - which we created lately.</p>

<p>Now, once <code class="highlighter-rouge">mongod</code> is running, we can start <code class="highlighter-rouge">mongo</code> which makes a connection to port <code class="highlighter-rouge">27017</code>.</p>

<h1 id="doing-some-crud">Doing some CRUD</h1>

<p>For the sake of testing this installation, we’ll do a simple document <code class="highlighter-rouge">insert</code> using:</p>

<p><code class="highlighter-rouge">db.names.insert({name:'testing'})</code> and <code class="highlighter-rouge">find</code> (or <code class="highlighter-rouge">select</code> in relational terms) using the below command:</p>

<p><code class="highlighter-rouge">db.names.find()</code></p>

<p><img src="https://lh3.googleusercontent.com/kry_91WuTGqKobZt4ma96UEYocDv8YPufHa4YA1JQdo4Or9JQZPR6hBaQbEZ3r_829TIWIPAkCPPgnC4t1g-UxkNxxc_cTULnZ6B2CLwxz94SxTC1DRS6BGuFrWUk19WLOp1Km-_FsjZKK6TUQlPurTtk7iqKaGUlXogg05Dgl4Cj4swVbi3HhuY0-7oEjXuVi52FpNZtwpG4RujgvtUQ4kZb9kC66iP328As9XpnZAiBqtmImc1vzllMIut5Zxg4TYZUlnO3DB4zYIq1_cynCmoy_kVn4u8tJ-Wtp4RFY9sOmlXMPlAT1t49H1H0OpMHjAtelVxs_BJU0TMbaphDyQ28xeepwNiSPa4IE_nxiMFGJySs6s5RN_d0mQR_kjKD3rW0uaAt5vozAQAcscrt6qzYkQxHPg8n7kBAvOCDupumKmnpbbyPzoCQpCQjvOoRojxwoemeldPNrJ1mCkYCBJjuZoCa3CIvFm2b7U0sRy3Hp7pFAgU-TVvxFA6L5hphNx-KQ0uMWaM_iAKi3isMNzneTRmtSLSLuHKfC-jWPw3AgZsi8qjX6YTx31q3VMbW21DeUvBUV-bcj-vKc_a674rt621BHc=w643-h158-no" alt="testing MongoDB installation" /></p>

<p>Where <code class="highlighter-rouge"><span class="p">{</span><span class="err">name:'testing'</span><span class="p">}</span></code> is an example of document. Also, to make the result of <code class="highlighter-rouge">.find()</code> much readable, we can chain <code class="highlighter-rouge">.pretty()</code> command.</p>

<p>We can run <code class="highlighter-rouge">MongoDB</code> as a <a href="http://stackoverflow.com/a/2438758/2404470">service</a> as well.</p>

<p>In <code class="highlighter-rouge">MongoDB</code>, documents are stored in colletions which are organized into databases. To see databases present in <code class="highlighter-rouge">MongoDB</code> run <code class="highlighter-rouge">show dbs</code></p>

<p>To insert a document into a collection, we first need to know how to specify that collection in the command. A collection and database that contains it form a <strong>namespace</strong>. When doing <code class="highlighter-rouge">CRUD</code> operations, we reference the global variable <code class="highlighter-rouge">db</code>. This variable holds the reference to the database we’re currently using. To switch to a database names <strong>test</strong> type <a href="http://stackoverflow.com/a/5287027">MySQL like command</a> <code class="highlighter-rouge">use test</code>.</p>

<p>The insert operation returns a document as well, where <code class="highlighter-rouge">acknowledged</code> set to true indicates that the record (or better say, document) was inserted successfully. All documents must have an <strong>underscore</strong> _id field. Each document in a collection must have a unique document id. At the heart of the query language for <code class="highlighter-rouge">MongoDB</code> is a query by example strategy. We can pass a blank object <code class="highlighter-rouge"><span class="p">{}</span></code>, key value pair <code class="highlighter-rouge"><span class="p">{</span><span class="err">name:</span><span class="w"> </span><span class="nt">"Uber"</span><span class="err">}</span></code>. The result of <code class="highlighter-rouge">find()</code> command is not a mere array of documents, it’s instead a <code class="highlighter-rouge">cursor object</code>. We can see this:</p>

<pre><code>
var c = db.names.find();
c.hasNext() //returns true, meaning there is a document yet to be visited by this cursor 
c.next() //grabs that document
</code></pre>

<h1 id="building-using-node">Building using node</h1>

<p>To build applications using <a href="https://nodejs.org/en/">node.js</a>, we first need to <a href="http://xameeramir.github.io/install-node/">install it</a>.</p>

<p>Let’s create a simple <code class="highlighter-rouge">http</code> server:</p>

<pre><code>
// Source: howtonode.org/hello-node

// Load the http module to create an http server.
var http = require('http');

// Configure our HTTP server to respond with Hello World to all requests.
var server = http.createServer(function (request, response) {
  response.writeHead(200, {"Content-Type": "text/plain"});
  response.end("Hello World\n");
});

// Listen on port 8000, IP defaults to 127.0.0.1
server.listen(8000);

// Put a friendly message on the terminal
console.log("Server running at http://127.0.0.1:8000/");
</code></pre>

<p>Store the above code in a <code class="highlighter-rouge">.js</code> file, let’s say <code class="highlighter-rouge">app.js</code></p>

<blockquote>
  <p>And how do we start it?</p>
</blockquote>

<p>In the terminal, go to the location of the file and type <code class="highlighter-rouge">node app.js</code>. To verify, if it’s running or not, go to <a href="http://localhost:8000">http://localhost:8000</a>. Notice port <code class="highlighter-rouge">8000</code>, which <strong>we</strong>‘ve pecified in the above code.</p>

<h1 id="what-is-npm">What is NPM</h1>

<pre><code>
    var express = require('express'),
    cons = require('consolidate'),
    mongodb = require('mongodb');
</code></pre>

<p><code class="highlighter-rouge">require()</code> is how we add an external library in a <code class="highlighter-rouge">node.js</code> application. If we run this code through <code class="highlighter-rouge">node</code> terminal, we’ll get the below error:</p>

<p><img src="https://lh3.googleusercontent.com/heymDr6IIbrxBAL1ZtKpC7pZBQ9uZ3jb2IGIJ9H7sceVBVg_zIx8J4hY48Ez2Vff4JMz2arwZN-Q6TAakoT_Zz1OR5cxkOtnT5qzhP9Rw_Jnc3_kS97U2H_UHOn4dFZ4-f5umRvGA-UX0z7QvsNdUinYtxdJ1eFWbyoooSzPTwd2CRsesjNth1K9s-OqaucfLSqzEzCkTAvQksHnBNyQs-q0H4gYSN80E-LJj2FApyuS514y8423lfpyWXO6JLXU3qlmCnU3E5jcPajmQVUyEREJHTVwNBxxVBtZgDpMpJ-9ME4xkZCOqA4POINzSKaGf76JCsEsq2ZN--690d_pESogGYV_hps4i15KVDfw25UqW5k5MTQC3QwjOB_ynDOhrI3GrOx-WXePjgRNQwaMH24Noga6DXbtTsCfTxAT1ICKZqWDKyicj_PWMwwDrPpc2BaFfBXJNbvfGrp5uqMpnGg3al1agYZNSj-pD-aJ7ov76oVL-FiMKo3MR3dt6U9kPXK4u0-s3ZUAwVcvxem8q0P4OE9OAHtxvXLQEgiCJbVR1-AjftZuzJNjfjDBSQfVKy20FDh560_QzQAK7oXOJgD0tpX8tK0=w643-h171-no" alt="could not find module express" /></p>

<p>To get this missing <code class="highlighter-rouge">express</code> thing as a <code class="highlighter-rouge">node</code> package, we can use <code class="highlighter-rouge">node</code> command line <code class="highlighter-rouge">npm install express</code>.
In real projects, there will be a bunch of package dependencies. Installing them all one-by-one will be a big pain. To resolve this comes <code class="highlighter-rouge">package.json</code> file. This file contains meta data about the dependencies:</p>

<pre><code>
{
  "name": "project name goes here",
  "version": "0.1.2",
  "description": "npm introduction",
  "main": "app.js",
  "dependencies": {
        "consolidate": "~0.13.1",
        "express": "~4.13.3",
        "mongodb": "~2.1.3"
  },
  "author": "ABC",
  "license": "MIT"
}
</code></pre>

<p>With this file in <strong>place</strong>, simply running <code class="highlighter-rouge">npm install</code> will get all the packages for us inside <strong>project’s local</strong> <code class="highlighter-rouge">node_modules</code> directory. There’s also a way to install packages globally.</p>

<h1 id="what-is-nodejs-driver">What is Node.js Driver</h1>

<p>The driver communicates with the <code class="highlighter-rouge">MongoDB</code> server using it’s wire protocol. It handles things like opening sockets, detecting errors and managing connections to replica sets. To include the driver in an application, use code <code class="highlighter-rouge">var mongodb = require('mongodb');</code> and install using <code class="highlighter-rouge">npm install mongodb</code>. As we can see, it’s <strong>just</strong> a node package. Try to connect to <code class="highlighter-rouge">MongoDB</code> using this package:</p>

<pre><code>
var MongoClient = require('mongodb').MongoClient,
    assert = require('assert');

var url = 'mongodb://localhost:27017/startup';

MongoClient.connect(url, function(err, db) {

    assert.equal(null, err);
    console.log("Successfully connected to server");

    // Find some documents in our collection
    db.collection('startup').find({}).toArray(function(err, docs) {

        // Print the documents returned
        docs.forEach(function(doc) {
            console.log(doc.name);
        });

        // Close the DB
        db.close();
    });

    // Declare success
    console.log("Last call");
});
</code></pre>

<p>In order to use the <code class="highlighter-rouge">MongoDB Node.js driver</code>, it’s important to have a solid understanding of the <strong>asynchronous</strong> nature of <code class="highlighter-rouge">IO</code> in <code class="highlighter-rouge">javascript</code>, including database requests.</p>

<blockquote>
  <p>The <code class="highlighter-rouge">mongo</code> shell is synchronous meaning that when you issue a find command, it blocks waiting for command to return before continuing. This is not the case with <code class="highlighter-rouge">Node.js</code> driver. Whether you’re doing a query, as we are here in the call defined or just setting up a connection to the database. As is common in <code class="highlighter-rouge">Javascript</code> applications, the <code class="highlighter-rouge">Node.js</code> driver we’re going to use is designed so that it’s methods function asynchronously. What this means is that instead of waiting on a return value from any methods we call, we instead pass in a callback function.</p>
</blockquote>

<p>The second parameter in the above <code class="highlighter-rouge">MongoClient.connect</code> call is a callback function. And is going to handle the result of this connection operation. Because of <strong>anysnchronous</strong> nature of <code class="highlighter-rouge">node.js</code>, the following message gets printed before any database values:</p>

<blockquote>
  <p><code class="highlighter-rouge">Last call</code></p>
</blockquote>

<h1 id="what-is-express">What is Express</h1>

<p><code class="highlighter-rouge">Express</code> is a <code class="highlighter-rouge">node.js</code> module that handles routing, request parameters and other details of <code class="highlighter-rouge">HTTP</code> requests.</p>

<p>Here is a basic example of setting up a basic <code class="highlighter-rouge">Express</code> server:</p>

<pre><code>
var express = require('express'),
    app = express();

app.get('/', function(req, res){
    res.send('Hello World');
});

app.use(function(req, res){
    res.sendStatus(404); 
});

var server = app.listen(3000, function() {
    var port = server.address().port;
    console.log('Express server listening on port %s', port);
});
</code></pre>

<h1 id="implementing-html-templates">Implementing HTML Templates</h1>

<p>The following example shows how to <strong>implement</strong> a <code class="highlighter-rouge">HTML</code> template:</p>

<pre><code>
//file: app.js
var express = require('express'), //set up the Express server
    app = express(), //use it to create an Express app
    engines = require('consolidate'); //use the wrapper library

app.engine('html', engines.nunjucks); //register nunjucks template engine

app.set('view engine', 'html'); //as being associated with the html extension, set the view engine app setting

app.set('views', __dirname + '/views'); //specify template location

app.get('/', function(req, res) {
    res.render('hello', { name : 'Templates' });
});

app.use(function(req, res){
    res.sendStatus(404); 
});

var server = app.listen(3000, function() {
    var port = server.address().port;
    console.log('Express server listening on port %s', port);
});
</code></pre>

<pre><code>

//file: views/hello.html

&lt;h1&gt;Hello, &#123;&#123;name&#125;&#125;!&lt;/h1&gt;

</code></pre>

<p>In the above code, <code class="highlighter-rouge">consolidate</code> is basically a set of wrappers for a number of template engines for <code class="highlighter-rouge">Express</code>. <code class="highlighter-rouge">Express</code> requires certain libraries to have a certain interface and <code class="highlighter-rouge">consolidate</code> handles that for us. <code class="highlighter-rouge">__dirname</code> is a <code class="highlighter-rouge">node.js</code> variable which allows us to access to the directory in which the application file (in our case, <code class="highlighter-rouge">app.js</code>) resides. Since, we’ve passed <code class="highlighter-rouge">name : 'Templates'</code> - we’ll see the below output:</p>

<p><img src="https://lh3.googleusercontent.com/G2kdPbPZRByvK44lLOPvSLCYd7l-NOpK9MayaxFBJeme9UjdUNxvLJex0qtUHhYPi-TM-apU0SMT0ZnjtnwkmNCLxw4JkLNFHapWujKjlSbVCfDSux_J-daorCYLATI6YuedbLFhsXySXqFg5Iv4xJ-p578uxuo0C-_DYc8J4QYCo_6ppJHFH3EHATavtPwzeGdLPmspF_Px97A9WANzbtRAirmE0GjQYVptcb13AXl9bm5aJ2gFGJJLjQw18ddl7gH7E-wuOtwEy3S5fi9oirjzn5wUqvyU2UhTywMLKzPB4BMom_LW0k7-hVQp_JBsDjoZeXKuSCkL4dYk9iYKjESSPq3A693RLP83vYJq1qhK0cloVMraAeIWBfDdLWaJG3WJGxzc5GitE4LQR2PeDQDoqLylMymGoXoNuj4gEsi2UAXlO01ncifSaU7lGiIucX8hcgWZ6dCFbMgbjxlNoFqlIm3bN_G5we6o25ZAvVoabBt6csO7YS5szhFtVSLA56J2rZaFFH2-2ODqNF8_Z4hg7mKcFWRJOIqT1QC8P4NpqyE9pkMQHzfA6GwRvfBBMBVHehwHsR341FOYcdM3JNZ20RUCtF4=w276-h98-no" alt="Hello Templates" /></p>

<p>Here’s a more advanced version which connects to the database as well:</p>

<pre><code>
//file: app.js

var express = require('express'),
    app = express(),
    engines = require('consolidate'),
    MongoClient = require('mongodb').MongoClient,
    assert = require('assert');

app.engine('html', engines.nunjucks);
app.set('view engine', 'html');
app.set('views', __dirname + '/views');

MongoClient.connect('mongodb://localhost:27017/startup', function(err, db) {

    assert.equal(null, err);
    console.log("Successfully connected to MongoDB.");

    app.get('/', function(req, res){

        db.collection('startup').find({}).toArray(function(err, docs) {
            res.render('startup', { 'name': docs } );
        });

    });

    app.use(function(req, res){
        res.sendStatus(404);
    });
    
    var server = app.listen(3000, function() {
        var port = server.address().port;
        console.log('Express server listening on port %s.', port);
    });

});
</code></pre>

<pre><code>

//file: views/startup.html

&lt;h1&gt;Hello, &#123;&#123;name&#125;&#125;!&lt;/h1&gt;

</code></pre>

<h1 id="handling-get-requests-using-express">Handling GET requests using Express</h1>

<pre><code>
var express = require('express'),
    app = express(),
    engines = require('consolidate');

app.engine('html', engines.nunjucks);
app.set('view engine', 'html');
app.set('views', __dirname + '/views');

// Handler for internal server errors
function errorHandler(err, req, res, next) {
    console.error(err.message);
    console.error(err.stack);
    res.status(500).render('error_template', { error: err });
}

app.get('/:name', function(req, res, next) {
    var name = req.params.name;
    var getvar1 = req.query.getvar1;
    var getvar2 = req.query.getvar2;
    res.render('hello', { name : name, getvar1 : getvar1, getvar2 : getvar2 });
});

app.use(errorHandler);

var server = app.listen(3000, function() {
    var port = server.address().port;
    console.log('Express server listening on port %s.', port);
});
</code></pre>

<p>The <code class="highlighter-rouge">hello</code> template is:</p>

<pre><code>
&lt;h1&gt;Hello, &#123;&#123;name&#125;&#125;, here are your GET variables:&lt;/h1&gt;
&lt;ul&gt;
    &lt;li&gt;&#123;&#123;getvar1&#125;&#125;&lt;/li&gt;
    &lt;li&gt;&#123;&#123;getvar2&#125;&#125;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>

<p>and the <code class="highlighter-rouge">error</code> template goes here:</p>

<pre><code>
&lt;h1&gt;Error: &#123;&#123;error&#125;&#125;&lt;/h1&gt;
</code></pre>

<p>In the above app, we’re just registering only one route i.e. <code class="highlighter-rouge">/:name</code>. The colon says to take this part of the URL and store in a variable called <code class="highlighter-rouge">name</code>.</p>

<p>Will share further notes next week.</p>

<p><a href="https://goo.gl/photos/Yuigw4S9mLXDpSZN6">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/mongodb-for-nodejs</wp:post_id>
        <wp:post_date>2016-08-09T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-08-09T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[What is Silverlight?]]></title>
        <link>http://xameeramir.github.io/what-is-silverlight/</link>
        <pubDate>2016-06-30T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://d2rormqr1qwzpz.cloudfront.net/uploads/0/5/31462-silverlight_teaser.jpg" alt="Microsoft silverlight" /></p>

<p><a href="http://www.tested.com/tech/web/3143-rumor-silverlight-5-to-be-the-final-version-of-microsofts-plug-in/">courtesy</a></p>

<p>Recently, I was learning about <code class="highlighter-rouge">Silverlight</code> for a project. Here is what I’m keeping for future reference:</p>

<h1 id="silverlight-5">Silverlight 5</h1>
<p>A Microsoft platform for developing and deploying Rich internet applications. Right now, it’s a <strong>depreceated</strong> technology.
Runs as a browser plugin.
Supports .NET languages like <code class="highlighter-rouge">C#</code> and <code class="highlighter-rouge">VB.NET</code>, <code class="highlighter-rouge">IronPython</code> and <code class="highlighter-rouge">IronRuby</code> using DLR (Dynamic Language Runtime).</p>

<h1 id="installation">Installation:</h1>

<p>There’re 3 options:</p>

<ul>
  <li>Install silverlight using WPI</li>
  <li>Install Expression blend for designing purposes</li>
  <li>Install XNA Game studio for working with 3D</li>
</ul>

<p>We also need to install the Silverlight SDK.</p>

<h1 id="creating-a-silverlight-project">Creating a Silverlight project</h1>

<ul>
  <li>Create a new project in <a href="https://www.visualstudio.com">VS</a> under <code class="highlighter-rouge">C#</code> -&gt; <code class="highlighter-rouge">Silverlight</code></li>
</ul>

<p><img src="https://lh3.googleusercontent.com/V06tfnM0rmM84LVLfZhIT263P6BcB85WE6Dvf-6JeLN2o90YgYVJgydYh8DtEA5Lg5mmW34TN9JwqRwwlSzvjGSNN2jiMLRXWN_81hw00JAiK50Z2ozgMQSVMud-D1TPnZ_-EoT5MpdI0R2TLpimDDjQHGkX_FhMJHAblBafUozDiv5OtzN9Jk7wSl6uAjla7RQXQvu92YmMVR6SAvmqa2wUl-CYzwFjCPSqXZuSKxsIsttSGN7_Esjd4MtIeSZnXaAjgNYpbEF0jUmU2vO01GnR38lDU85ft7MgIh7pQeRXN1xzJiSDnjREaDn5R5w2HPQJNrk0J15KAu_v0cQvtvaMnDbYznnUEqcCbgkdK0lTEgpY8s_8e9KsFr8i57De_WATOCV0rcLlLz27GuQzcsY3aer-lCUGdeRlU5Cw2y1Rp2Ba_XJy1CW4VXCKJe_aOMuQq01E6iDep74NqRCUXcH-587DCjCoKNkqBQrl9koxxakNDS8hFs_TOByVJQKcJzxCzOiJ0TZ0hdt15M335dqXFtX__QmgmYOWc7onrsFqTvk0PI4DeSTenjtXt8ptQ8S52bOPiHbnJQ332IPm24zBkCAL9Zk=w955-h582-no" alt="Creating a Silverlight project" /></p>

<ul>
  <li>Make sure to check <strong>Host the Silverlight application in a new website</strong></li>
</ul>

<h1 id="running-the-project">Running the project</h1>

<p>If the developer runtime for <code class="highlighter-rouge">Silverlight</code> is not installed, the following popup will be shown</p>

<p><img src="https://lh3.googleusercontent.com/RdPeAPujcDG9EpUDIcLGI6R0aNr4gCKmgvu6Zz0cTGc6F8J5htppsiNEgLk2VrVWMoGM0gwQxIsUOiSDmoQVbr_vyAnvyqO_yJiSqpLj7L9KGWMtrCj4KAKf6SjR6o3zjPxNzQrmKjYf2RvsCgPRGPjtoTso6ulSwdarqBzTUFmVSgMO6gQdnI-tm2mCshMyF2fgCw1vILn7oKlAFOII5f4SMcnA71JT7-6jsZ3U4C4lpF3AUyF5SHknlKzF80YTy0C9eWl7SjmL1rI9MmpoZ2L4ulkkeRTZkyRnnCUR7WWxQY9D6HPJQ3OVuRdFQ7dwxXm_psvtWhvohTOQndIp-K6N2-vhpGBPNoBDJH1WDAzFyTgs5RB0U8BtDwfNL3lgnkh1hwPUC4TBm01s6wc0vby7JTP78NRpeBA9CSc0IXPs0GxGTsURejRGbN9m4rs9ZeH9XiRe-l6_F4IPxRScyQSobpTYK5pEvU5WUxLz3JGKsYGCqYyO9u2deoBHgfOXdYChet_Jz-eM8gAPUtPHmSTHI7AaN29maOQPLcfMKooYsXjlHshYu-Ri6d5NvBuuxfs5z2hs3lPhNzOkl1Y7Z9qL8acnhIk=w497-h199-no" alt="developer runtime for Silverlight is not installed" /></p>

<p>When running the project, in case the <code class="highlighter-rouge">Silverlight</code> is not installed in the browser, the following browser notification will be shown:</p>

<p><img src="https://lh3.googleusercontent.com/FNzB1QBestDTfS1pRNWXFd_VAfBAKY4AnQU_D8f7B_3m5so3M-ZVGLPhxaIGJ-d5ep7pMU99zioVkOeUWbxdIP4Eo1EE8d1xBDegZ8ee1X3K-VtukN1H47gdc2mqP8codvc9Ux2NMydnmUw35flAVm4gjqxl77HSDChLC1i-Lcx8N60RzGZi_AwmBecs9-2XjVHoeiR5b0FJ1yRUYs37m96thWmHGW3hNGOrze33BDJqeVs1_fdklnG_Xoa6k9A1BTLykuxIvGkJsNFyt3sTs3QiCpR0pdFU1GqrfPjRvoQLZZ92c13iUT-9J-s6_3r9gVnj8Il0rHZ73pbQmn32JOt8vMOHvfAI8NK34tZALKlRMQV3Jw6dIhtLcw0uN0YJLEpBFlEz9NK85DkUaRra4qOk8a30kpDVc2CUyD8LwMEgbEwJW2ETwxLG04Yyporj4xR1CCqGcWk0-UtS6un9AfS3tEnVJrCeciWmdMFL69orcEYx4JhkDagvz92BuxzgAYJvfXLjtWt1ZQGWbOjIiGXSJu2A9uXAH1qhr0-uL_73S3TN4zmK7-2Az-l_mrB7Dii8sHhItGKWrK7IFPfpGLMUnd7CsWM=w357-h278-no" alt="Running Silverlight in Chrome" /></p>

<blockquote>
  <p>Clicking the install link will take us to the Microsoft website for downloading and installing the plugin</p>
</blockquote>

<h1 id="visual-studio-settings">Visual studio settings</h1>

<p>From the VS main menu’s Tools -&gt; Options</p>

<ul>
  <li>For All languages: enable <code class="highlighter-rouge">word warp</code> and <code class="highlighter-rouge">line number</code> under General node</li>
  <li>Set <code class="highlighter-rouge">Tab</code> and <code class="highlighter-rouge">indent size</code> to 2 under Tabs node. Also keep tabs</li>
</ul>

<h1 id="assemblies">Assemblies</h1>

<p>There are two types of Microsoft Silverlight assemblies:</p>

<p>The core Silverlight assemblies</p>

<ul>
  <li><code class="highlighter-rouge">mscorlib.dll</code></li>
  <li><code class="highlighter-rouge">System.Core.dll</code></li>
  <li><code class="highlighter-rouge">system.dll</code></li>
  <li><code class="highlighter-rouge">System.Net.dll</code></li>
  <li><code class="highlighter-rouge">System.Windows.dll</code></li>
</ul>

<p>SDK assemblies, which are used for additional functionalities.</p>

<h1 id="structure-of-a-silverlight-project">Structure of a Silverlight project</h1>

<ul>
  <li>App.xaml file contains Global settings and global events</li>
  <li>MainPage.xaml is the main Silverlight UI</li>
</ul>

<p><code class="highlighter-rouge">Path in web</code> setting specifies where to put the output <code class="highlighter-rouge">.xap</code> files. In the image shown, it’s <code class="highlighter-rouge">ClientBin</code> folder.</p>

<p>The initial / startup control can be set from <code class="highlighter-rouge">App.xaml.cs</code>.</p>

<p>The Silverlight application is compiled into a <code class="highlighter-rouge">.dll</code> which is then used by the Silverlight runtime.</p>

<p>The <code class="highlighter-rouge">.csproj</code> file contains the build instructions. During build, VS executes the build instructions contained in the <code class="highlighter-rouge">.csproj</code> file. One of the instructions calls the language compiler such as <code class="highlighter-rouge">csc.exe</code> for <code class="highlighter-rouge">C#</code>, <code class="highlighter-rouge">vbc.exe</code> for <code class="highlighter-rouge">VB.NET</code></p>

<p>Although the process is build, a lot of devs call it compiling.</p>

<p>With Solution configuration set to <code class="highlighter-rouge">Debug</code>, the Visual studio will create a <code class="highlighter-rouge">Debug</code> folder inside the <code class="highlighter-rouge">Bin</code> folder of the project. In general cases, there will be <strong>5</strong> files</p>

<ul>
  <li>The application <code class="highlighter-rouge">AppManifest</code> file - contains the application information</li>
  <li>The application <code class="highlighter-rouge">.dll</code> file - the actual code which will be loaded by the Silverlight runtime when executing the project</li>
  <li>The application <code class="highlighter-rouge">.pdb</code> file - the portable debug file for the project</li>
  <li>The application <code class="highlighter-rouge">.xap</code> file - the zipped bundle of <code class="highlighter-rouge">AppManifest</code> and the application <code class="highlighter-rouge">.dll</code>s. This is useful in cases when the application uses SDK assemblies. The zip bundle will help the client download the SDK <code class="highlighter-rouge">.dll</code>s</li>
  <li>The application test <code class="highlighter-rouge">.html</code> file - the application test file generated by the <code class="highlighter-rouge">Properties</code> -&gt; <code class="highlighter-rouge">Debug</code> -&gt; <code class="highlighter-rouge">Start Action</code> set to <code class="highlighter-rouge">Dynamically generate a test page</code></li>
</ul>

<h1 id="deployment">Deployment</h1>

<p>When doing the deployment, the mime types need to be mapped in IIS by following the below steps:</p>

<ul>
  <li>Select the application in concern from Sites node</li>
  <li>Double click <code class="highlighter-rouge">Mime Types</code> and the entries as shown below:</li>
</ul>

<p><code class="highlighter-rouge">.xap</code> -&gt; <code class="highlighter-rouge">application/x-silverlight</code> - For Silverlight 1 and later
<code class="highlighter-rouge">.xap</code> -&gt; <code class="highlighter-rouge">application/x-silverlight-2</code> (-2 means the second implementation of the mime type) - For Silverlight 2 to 5
<code class="highlighter-rouge">.xaml</code> -&gt; ‘application/xaml+xml’</p>

<p>When the application starts up, the <code class="highlighter-rouge">Test</code> HTML page (generated inside the <code class="highlighter-rouge">Bin</code> folder) asks the browser to load the Silverlight plugin which is specified in the following tag:</p>

<pre>
<code>
&lt;object data="data:application/x-silverlight-2," type="application/x-silverlight-2" width="100%" height="100%"&gt;
</code>
</pre>

<p>The browser plugin then later asks for the <code class="highlighter-rouge">.xap</code> file. Which is basically a <code class="highlighter-rouge">.zip</code> folder containing application and other <code class="highlighter-rouge">.dlls</code> with information inside the application manifest file.</p>

<p>To not allow browser to load the default error page when the Silverlight plugin isn’t available, set the <code class="highlighter-rouge">object</code> tag’s <code class="highlighter-rouge">autoUpgrade</code> parameter to <code class="highlighter-rouge">false</code></p>

<pre><code>
&lt;param name="autoUpgrade" value="false" /&gt;
</code></pre>

<p>with url set to the download link of the required Silverlight plugin. The javascript <code class="highlighter-rouge">onSilverlightError</code> needs to be used. The <code class="highlighter-rouge">ErrorCode</code> to watch for is <code class="highlighter-rouge">8001</code>:</p>

<pre><code>
function onSilverlightError(sender, args) {

	if (args.ErrorCode == 8001) {
		//code to run when correct Silverlight plugin version isn't available
	}
}
</code></pre>

<p>The Silverlight code behind files are in <code class="highlighter-rouge">partial</code> classes (one holding the event handling, another for the UI handling).
Using a <code class="highlighter-rouge">XAML</code> element is equal to instantiating a <code class="highlighter-rouge">.NET</code> class. The <code class="highlighter-rouge">XML</code> elements are validated against xml namespaces.</p>

<h1 id="binding">Binding</h1>

<p>To assign run time calculation of value and assing to a property we need to use Markup extensions. These classes do binding and resource lookup.</p>

<p>When we assign a property in XAML, we’re passing a</p>

<ul>
  <li>string</li>
  <li>passed through a TypeConverter (and the conversion happens at the compile time)</li>
</ul>

<p><strong>Passing values at compile time</strong></p>

<pre><code>
&lt;TextBox Text='abc' Background='Orange' /&gt;
</code></pre>

<p><strong>Passing values at run time</strong></p>

<pre><code>
&lt;TextBox Text='{local:LatinWords}' Background='{StaticResource warning}' /&gt;
</code></pre>

<p>Types of data binding in XAML are:</p>

<ul>
  <li>Binding: binding by Data source</li>
  <li>Template: get value from control template and assign it to property</li>
  <li>StaticResource: Lookup resource defined in ResourceDictionary</li>
  <li>Null: Assing null value to preperty</li>
  <li>Element to element binding:</li>
</ul>

<pre><code>
&lt;!-- Make this element idenfiable by name --&gt;
&lt;TextBox Text='Hello' x:Name='textHello' Background='Goldenrod' /&gt;
&lt;!-- Assign value from the above textHello to this element --&gt;
&lt;TextBox Text='Goodbye' Background='{Binding ElementName=textHello, Path=Background}' /&gt;
</code></pre>

<ul>
  <li>Self binding:</li>
</ul>

<pre><code>
&lt;!-- Read value red from Text property and assign it to Background property --&gt;
&lt;TextBox Text='Red' Background='{Binding Text, RelativeSource={RelativeSource Self }}' /&gt;
</code></pre>

<ul>
  <li>StaticResource binding:</li>
</ul>

<pre><code>
&lt;!-- Define a static resource --&gt;
&lt;LinearGradientBrush x:Key='seaBrush'&gt;
	&lt;LinearGradientBrush.GradientStops&gt;
		&lt;GradientStop Offset="0" Color="Yellow" /&gt;
		&lt;GradientStop Offset="0.5" Color="Orange" /&gt;
		&lt;GradientStop Offset="0.8" Color="LightCoral" /&gt;
	&lt;/LinearGradientBrush.GradientStops&gt;
&lt;/LinearGradientBrush&gt;

&lt;!-- use the seaBrush static resource for the Background property --&gt;
&lt;TextBox Text='StaticResource' Background='{StaticResource seaBrush}' /&gt;
</code></pre>

<ul>
  <li>Null binding:</li>
</ul>

<pre><code>
&lt;!-- Null MarkupExtension --&gt;
&lt;TextBox Text='Null MarkupExtension' Background='{x:Null}' /&gt;
</code></pre>

<ul>
  <li>Custom markup extension binding:</li>
</ul>

<pre><code>
&lt;!-- The XML namespace abc is defined which refers to abcLib in UserControl --&gt;
&lt;UserControl xmlns:abc='clr-namespace:abcLib;assembly=abcLib' &gt;

		... rest of the code ...

&lt;!-- use our custom markup extension--&gt;
&lt;TextBox Text='{abc:LatinWords WordCount=5}' Background='{x:Null}' /&gt;
&lt;/UserControl&gt;
</code></pre>

<p>and the implementation of custom markup extension is:</p>

<pre><code>
namespace abcLib
{
  public class LatinWords : IMarkupExtension&lt;string&gt;
  {

    public bool RandomStartPoint { get; set; }
    public int WordCount { get; set; }


    private Int32 _numberOfWords;
    private static Random ran = new Random();
    private string[] _words;

    public void SetupWords()
    {
      // for demo limit the number of words to 100
      if (WordCount &lt;= 1)
      {
        _numberOfWords = 1;
      }
      if (_numberOfWords &gt; 100)
      {
        _numberOfWords = 100;
      }
      else
      {
        _numberOfWords = WordCount;
      }

      _words = _sourceString.Split(' ');

    }
    public string ProvideValue(IServiceProvider serviceProvider)
    {
      SetupWords();
      int skipCount = 0;
      if (this.RandomStartPoint)
      {
        skipCount = ran.Next(3, 20);
      }
      return string.Join(" ", _words.Skip(skipCount).Take(_numberOfWords).ToArray());
    }

    private string _sourceString = "Lorem ipsum. ";

  }
}</code></pre>

<h1 id="dependency-property-system---dps">Dependency property system - DPS</h1>

<p>Silverlight uses a unique property system which was invented by WPF team. This provides services for UI like Animation, Templates, Styles and reduces critical resource usage (e.g. memory). It has two parts:</p>

<ul>
  <li>Dependency properties</li>
  <li>Attached properties</li>
</ul>

<p>When creating own user controls, dependency property (e.g. on Button element: FontSize) and .NET property <strong>both</strong> are correct ways to expose a property on them.</p>

<ul>
  <li>First, create a dependency property to work with the Silverlight services like data binding</li>
  <li>Second, create a .NET property to set and read property values in code</li>
</ul>

<p><strong>Value resolution priorities</strong></p>

<ol>
  <li>Active animation</li>
  <li>Local value</li>
  <li>Templated properties</li>
  <li>Style setters</li>
  <li>Property value inheritance</li>
  <li>Default</li>
</ol>

<p>Case:</p>
<ul>
  <li>If the <code class="highlighter-rouge">local value</code> for a property is set to <strong>20</strong> and the control in concern is getting animated changing property value from <strong>40 to 80</strong></li>
  <li>When we query the value of the property, the value set by the current animation step will be returned, as per the above priority list</li>
</ul>

<p><strong>Setting dependency properties using code:</strong></p>

<ul>
  <li>In <code class="highlighter-rouge">XAML</code> file</li>
</ul>

<pre><code>
&lt;Button x:Name='sampleButton' Content='Set the Properties in Code' Click='sampleButton_Click' /&gt;
</code></pre>

<ul>
  <li>In code behind</li>
</ul>

<pre><code>
		private void sampleButton_Click(object sender, RoutedEventArgs e)
		{
			sampleButton.FontSize = 40;  // using a .NET wrapper to set value

			double size = sampleButton.FontSize; // use the .NET wrapper to read value

			// use the DP system directly

			sampleButton.SetValue(FontSizeProperty, 30);
			size = (double)sampleButton.GetValue(FontSizeProperty);

		}</code></pre>

<p>Silverlight elements and controls (default or custom) have lots of dependency properties. This system provides services such as animation, data binding, control templates and styles to the Silverlight elements.To get these services a developer needs to write ‘ugly’ registration code.</p>

<p>An example of declaring and registering a dependency property is:</p>

<pre><code>
	public partial class StarShape : UserControl {

	public StarShape()
	{
		InitializeComponent();
	}

	//declaring
	public static readonly DependencyProperty PointsProperty;

		//registering
		static StarShape()
		{

			// 2. Register with the DP system
			PointsProperty = DependencyProperty.Register("Points", typeof(double), typeof(StarShape), null);

		}
	}</code></pre>

<p>Notice that the property is declared readonly, which means it can only be instantiated in it’s static constructor.</p>

<h1 id="attached-dependency-property">Attached dependency property</h1>

<p>They are a special dependency property to provide decoupled extensible model. We can think of it as a ‘global property’ meaning it is available to all controls in Silverlight runtime.</p>

<p>It is owned and registered by a Type. The method for the same is <code class="highlighter-rouge">DependencyProperty.RegisterAttached</code>. It uses the dotted syntax <code class="highlighter-rouge">TypeName.AttachedProperty</code>. These properties are mostly used in layout panels Canvas, Grid, DockPanel.</p>

<p><strong>Key points:</strong></p>

<ul>
  <li>Attached property value is stored in DPS</li>
  <li>Value is assigned with element assigning the value</li>
  <li>The owning class will query the value from the DPs</li>
</ul>

<p><a href="https://goo.gl/photos/fWU5PoCK333JNVpA8">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/what-is-silverlight</wp:post_id>
        <wp:post_date>2016-06-30T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-06-30T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Geek Night Tours]]></title>
        <link>http://xameeramir.github.io/geek-night-tours/</link>
        <pubDate>2016-05-31T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://cdn-az.allevents.in/banners/805e0c0c4a07a5562b2b9b9d3e19d4e8" alt="Geek night tours Build Tools Thoughtworks" /></p>

<p><a href="https://allevents.in/mumbai/geeknight-tours-mumbai/1539396199689544">courtesy</a></p>

<p>I attended <a href="http://engage.thoughtworks.com/E0P0Q0MoDvj0Q0mE0t0qn0q">Geek Night Tours</a>. It was sponsored by <a href="http://www.thoughtworks.com/">ThoughtWorks</a>.</p>

<p>Experts <a href="https://www.linkedin.com/in/suvish-thoovamalayil-01aa2133">Suvish</a> and <a href="https://www.linkedin.com/in/mushtaq-ahmed-a0b76b">Mushtaq</a> covered a lot of things about <code class="highlighter-rouge">Gradle</code> and <code class="highlighter-rouge">SBT</code> as build tools.</p>

<p>It gave a brief introduction to continuous integration and build automations. Since, I work and prefer <code class="highlighter-rouge">.NET</code> - my intentions of attending was:</p>

<ul>
  <li>Why shall I set-up a separate build server when I can do a <strong>simple</strong> <kbd>Ctrl</kbd> + <kbd>Shift</kbd> + <kbd>B</kbd> in <a href="https://www.visualstudio.com/"><code class="highlighter-rouge">Visual studio</code></a>?</li>
  <li>I personally have built a large <code class="highlighter-rouge">.NET</code> solution with multiple projects with ~50k+ SLOC which doesn’t take more than 2-3 minutes, it’s quite <strong>fast</strong>. So what is the reason of using a separate build infrastructure?</li>
  <li>I can <strong>already</strong> build and verify the dependencies inside <code class="highlighter-rouge">VS</code>. What is build server trying to build already build and verified solution?</li>
</ul>

<p>Although <code class="highlighter-rouge">.NET</code> was not specifically focused. However, I understood that <a href="http://google.com/search?q=Gradle+.NET"><code class="highlighter-rouge">Gradle</code> can be used for <code class="highlighter-rouge">.NET</code> as well</a> however it might need some plugins. A few more take aways:</p>

<h1 id="continous-integration">Continous integration</h1>

<p>Continuous Integration (CI) is a development practice that requires developers to integrate code into a shared repository several times a day. Each check-in is then verified by an automated build, allowing teams to detect problems early. <a href="https://www.thoughtworks.com/continuous-integration">source</a></p>

<p>Here is a simple use case, in my own words:</p>

<ul>
  <li>Make a commit to <code class="highlighter-rouge">git</code> source control</li>
  <li>Source control pushes notification (or CI server polls from source control) to build server</li>
  <li>Build system builds the project along with dependencies (e.g. <code class="highlighter-rouge">.dlls</code> for a <code class="highlighter-rouge">.NET</code> solution)</li>
  <li>Build system publishes the repository to production (e.g. to <code class="highlighter-rouge">IIS</code> server)</li>
</ul>

<p>One can read and read a lot about it, however the best way to learn something is to see it in action.</p>

<p>The summary of May’28 edition is:</p>

<h1 id="part-1-agile-game">Part 1: Agile game</h1>

<p>Moral of the story:</p>

<ul>
  <li>We need to be in continuous contact with the client</li>
  <li>Product owner / client are more of like becoming the part of the dev team</li>
  <li>The tasks need to be divided evenly based on the skill sets</li>
  <li>Planning is most important</li>
  <li>Agile methodology reduces wastage</li>
</ul>

<h1 id="part-2-android-apps-ready-for-n">Part 2: Android apps ready for N</h1>

<p>Important points:</p>

<ul>
  <li>There are Android apps for reducing battery usage (<strong>app level</strong>)</li>
  <li>To reduce battery usage, Android will provide ways at the <strong>platform level</strong></li>
  <li>The biggest culprit for battery waste is connectivity changes (wifi to broadband and vice versa), N will use job schedulers for solving this problem</li>
  <li>They’ve removed system level broadcast, the speaker suggested content resolvers</li>
  <li>Google forcing devs to start optimizing their apps because Android will not support implicit broadcasts</li>
  <li>There’re 3 types of services in Android
    <ol>
      <li>Bound</li>
      <li>Foreground</li>
      <li>Unbound</li>
    </ol>
  </li>
  <li>Android will stop supporting unbound services</li>
  <li>Multi window support is provided at the platform level</li>
  <li>Uses <code class="highlighter-rouge">Android:resizableActivity:true</code> in app manifest for multi window support, all apps no matter what version of Android will have this property set to <code class="highlighter-rouge">true</code></li>
  <li>To make sure that the apps run in correct window (single or multiple) devs need to make sure that this property is set</li>
  <li>To show new windows open in the adjacent window use property <code class="highlighter-rouge">FLAG_ACTIVITY_LAUNCH_ADJACENT</code></li>
  <li><strong>Question</strong>: How to decide a screen is in landscape or portrait mode?</li>
  <li><strong>Ans</strong>: Landscape : width size is large and same concept for portrait</li>
  <li>For <em>Android N</em>, devs are forced to code different layouts for different screen orientations (landscape and portrait), <strong>this was not needed till now</strong></li>
</ul>

<h1 id="part-3-view-debugging-in-ios-and-other-magic">Part 3: View debugging in iOS and other magic</h1>

<p>The speaker shown some hacking the UI of a jail break iPhone using <a href="http://revealapp.com/">AppReveal</a>.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/geek-night-tours</wp:post_id>
        <wp:post_date>2016-05-31T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-05-31T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[The basic concepts of Angular JS]]></title>
        <link>http://xameeramir.github.io/The-basic-concepts-of-Angular-JS/</link>
        <pubDate>2016-03-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://d1067y8t86k9le.cloudfront.net/wp-content/uploads/2016/04/22150642/angular_js.jpg" alt="Angular JS by Google" /></p>

<p><a href="https://www.amitavroy.com/justread/content/articles/working-xml-angular-js/">courtesy</a></p>

<h1 id="why-should-we-use-angular-js">Why should we use Angular JS?</h1>

<ul>
  <li>Helps organize the javascript code</li>
  <li>Helps create responsive (as in fast) websites</li>
  <li>Plays well with jQuery</li>
  <li>Is easy to test</li>
</ul>

<h1 id="what-is-angular-js">What is Angular JS?</h1>

<blockquote>
  <p>A client side javascript framework for adding interactivity to HTML.</p>
</blockquote>

<p>We need to figure out when to trigger our Javascript.</p>

<h1 id="directives">Directives</h1>

<blockquote>
  <p>A directive is a marker on a HTML tag that tells Angular to run or reference some Javascript code.</p>
</blockquote>

<p>e.g. In the following code snippet, <code class="highlighter-rouge">ng-crontroller</code> is a <strong>marker</strong> on body tag</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;body ng-crontroller='abcController'&gt;
&lt;/body&gt;
</code></pre>
</div>

<p>And the referenced javascript code is:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>function abcController(){
 alert('hello Angular JS!');
}
</code></pre>
</div>

<p>The first step is to download the library from the <a href="https://angularjs.org">official website</a></p>

<h1 id="modules">Modules</h1>

<ul>
  <li>Modules are where we write pieces of our Angular application to keep our code encapsulated to make our code more maintainable, testable and readable.</li>
  <li>Modules are where we define depencies for our application.</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/n2g4PqKfllLyrdlTbXv_4mtSPrXv0p2bzwlirBofVwG5shLptExjrrnn9BP3QdUky-bIiKCGiyjBZN5OZWmeBvMgjUWzxGXp0_NzXWlPOI5Fjn7m18P6iJs2reLZZ8jSJTJaLqycjhxRCtFKl2VLDsT5N7rqw028H2XH7ZwAslSM85-VXGPiXwYalJR9aecT7YoGSjORixSKsBdewOV09l-yx-YkI-IJoV62UMaoclnDoLrr8WkJHuWn3bW24krJCxenhmK5QiCVWcVhEPxj1EZ-mLKZ6K_EqJ26py3FD2NAr0YT-Kad4HrFYYwDrxbOEU8VYozi_FcjXLRdKB3teN-8a3hIbCXAHengCYJ8TnLYeXu53P4FAHoarOJFSX7J4MM9mWulYZrwUOqz6LccoJUHm-txtqpWe79k4ht25ScnX89PCmmXraLYtdkCjKXc1eCZliIe5KwWkINznaY-cddX663tONMGRYGOnEJVzpkEDGm9fjUFwkVUWoYkI11fGSuBiDwLiHOTQjAs8ldVE4cWXr5-PHw4VcfQtWFxrxJQHB_MCZB5-U-mvJuLUSH6C-Z-olczanmekrg7jGH0tC0ugSJZmJrXXobnYhbb-m-wOviSwuAs=w188-h177-no" alt="Module dependencies" /></p>

<p>Let’s create a module:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>var app = angular.module('abcApp',[]);
</code></pre>
</div>

<p>And use it:</p>

<div class="highlighter-rouge"><pre class="highlight"><code><span class="nt">&lt;html</span> <span class="na">ng-app=</span><span class="s">'abcApp'</span><span class="nt">&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre>
</div>

<p>The above code does nothing as such, currently it is just saying that the entire <code class="highlighter-rouge">HTML</code> area is part of the Angular application. We can start using expressions at this point:</p>

<p>4</p>

<p>Expressions can also be used for string manipulation:</p>

<p>Hello</p>

<h1 id="controllers">Controllers</h1>

<blockquote>
  <p>Controllers are where we define our app’s behavior by defining functions and values.</p>
</blockquote>

<p>Let’s have some data printed on the view using controller.</p>

<div class="highlighter-rouge"><pre class="highlight"><code>(function(){

var app = angular.module('abc', []);
app.controller('abcController', function(){	
this.a = abc;
});

var abc = {
propertyA : 'A',
propertyB: 'B'
};
})();
</code></pre>
</div>

<p>The view should look like this:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div ng-controller='abcController as abc' &gt;
  
  
&lt;/div&gt;
</code></pre>
</div>

<p>This works well with a single object but what if we have an array?</p>

<p>Inside a controller:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>(function(){

var app = angular.module('abc', []);
app.controller('abcController', function(){	
this.as = abc;
});

var abc = [{
propertyA : 'A',
propertyB: 'B'
}, {
propertyA : 'C',
propertyB: 'D'
}, {
propertyA : 'E',
propertyB: 'F'
}];
})();
</code></pre>
</div>

<p>To show this in the view, we need to use <code class="highlighter-rouge">ng-repeat</code>:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>&lt;div ng-controller='abcController as abc' &gt;
  &lt;div ng-repeat='a in abc.as'&gt;
  
  
  &lt;/div&gt;
&lt;/div&gt;
</code></pre>
</div>

<p>There are a lot of <a href="http://www.techstrikers.com/AngularJS/angularjs-built-in-directives.php">build in directives</a> like <code class="highlighter-rouge">ng-app</code>, <code class="highlighter-rouge">ng-controller</code>, <code class="highlighter-rouge">ng-show</code>, <code class="highlighter-rouge">ng-hide</code>, <code class="highlighter-rouge">ng-repeat</code> etc.</p>

<h1 id="filters">Filters</h1>

<p>The basic formula of filters is as follows:</p>

<p>e.g.:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>MM/dd/yyyy @ h:mm &lt;!-- formats the date --&gt;
lowercase string &lt;!-- uppercases the string --&gt;
a vvveeeerrrryy llooonnngggg strrrriiiinngggg &lt;!-- limits the string to specified number 8 --&gt;	
&lt;li ng-repeat='a in abcs | limitTo: 3'&gt; &lt;!-- limits the array elements to specified number 3 --&gt;
&lt;li ng-repeat='a in abcs | orderBy: -A'&gt; &lt;!-- sorts the array elements in descending order because of - charachter --&gt;
</code></pre>
</div>

<p>The pipe charachter in the expression asks the expression to take the first parameter to the expression and pass it to the second part of the expression. Like in the following:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>$2.695865
</code></pre>
</div>

<p>Currency is a filter in this case.</p>

<p><a href="https://www.codeschool.com/courses/shaping-up-with-angularjs">source</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/The-basic-concepts-of-Angular-JS</wp:post_id>
        <wp:post_date>2016-03-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-03-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Company motivation statement]]></title>
        <link>http://xameeramir.github.io/company-motivation-statement/</link>
        <pubDate>2016-02-06T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.hdwallpapers.in/walls/snow_peak-HD.jpg" alt="motivation mountain peak" /></p>

<p><a href="http://www.hdwallpapers.in/tag/peak.html">courtesy</a></p>

<p>I have read many company values but the ones from <a href="https://www.google.com/about/company/philosophy/">Google</a>, <a href="https://www.facebook.com/">facebook</a> and <a href="https://www.atlassian.com/company/values">Atlassian</a> looked most logical.</p>

<p>Thinking of how people write, I tried to jump in and here is a fleshy document stating a nice company’s motivation.</p>

<h1 id="focus-on-user">Focus on user</h1>

<p>We build everything from the ground up with <strong>you</strong> in mind. Whether it’s something new or an enhancement, it is forced to serve <strong>you</strong>.</p>

<p>Believing this give us enough confidence that, everything else will follow us.</p>

<ul>
  <li>make products <strong>insanely quick</strong>, before light emits from it’s source</li>
  <li>show products <strong>simple</strong>, clean and smart</li>
  <li><strong>democratize</strong> and respect it</li>
  <li><strong>don’t #@!%</strong> the user</li>
</ul>

<h1 id="innovate-with-focus">Innovate with focus</h1>

<ul>
  <li><strong>hack</strong> - a lot, break your head (not mirrors), repeat</li>
  <li>do <strong>one</strong> thing really, really good</li>
  <li>follow 80-20 rule - <strong>impact</strong>ful?, do it. Otherwise, throw it</li>
  <li>always ask this - <strong>is there a need?</strong></li>
  <li><strong>balance</strong></li>
</ul>

<h1 id="be-bold-and-honest">Be bold and honest</h1>

<p>Doing big things requires lot of courage. Be bold, <strong>just do it</strong>.</p>

<ul>
  <li><strong>no politics</strong></li>
  <li><strong>no fear</strong>ful decisions</li>
  <li>take responsibilities and <strong>collaborate</strong></li>
  <li>take risks, <strong>inpire</strong> and have fun</li>
  <li>fail and <strong>fail faster</strong></li>
  <li><strong>don’t evil</strong> for money</li>
</ul>

<p>Be open, <strong>honest</strong>, confident and integrated. That’s how we want to be known. It allows us to make better decisions. As clear as a brand new mirror.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/company-motivation-statement</wp:post_id>
        <wp:post_date>2016-02-06T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-02-06T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Building ASP.NET 5 on Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/building-asp-net-5-ubuntu-linux/</link>
        <pubDate>2016-01-30T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://lh3.googleusercontent.com/0sxgq8spWKYyayyuUBBTAZB90UaS8N2wnLPrvVQ3D7B-3YMcdoK5SQ-IAOk-D7m5Ifskm62lVf_ZhGq-2JuxKSoS-nJxLHxANDJpwV9rGjP5cgQ7kEvzadAh0-QcRjxYPN-PBuwd_esMRbD11wzEByVsUqLZVhSLa2GuTakMl3OgvchtnA2dEz-dfCRU_Z-bqDeCRJRMxAypQhnKkG0cklaq1SAXprqkMqiJB66KzI7OtmxUsstHqcQpKYWuaV8nOvblt4pLV0caltkfFqUhXUJkV9gyGB4cTrksTZBOix8A5hv63Wexl_JHKNUUvgHrSfgL8TUHwLS2Oqy_CCvl4m2rdT79QWHIn2Qj0FjgQJIF7zKbWCfVsYPUvN34VVLy9HPxIllMEasWeiOc9mIi7HlrdpfamRqdbFPRsWl6B3sQ0ScsXMRDoJ6wPxDV_HCXsuxPn67N64FeTCXG6BHk7zkW-DDBwIclbhsNjpsiVsCTnJ-KqKBI5ZKACXDP12efoqbW_v291B6kbiPCkQztDs5QTuYtXN9g-JZeeIYiSCQamdBrTOA4a2qriq9V0_gz_Z9u=w492-h199-no" alt="Running ASP.NET 5 with on Ubuntu linux" /></p>

<p>After <a href="http://xameeramir.github.io/configure-net-ubuntu-linux/">configuring .NET on Ubuntu Linux</a>, I was looking at ways to start developing <a href="http://www.asp.net/vnext">ASP.NET vNext</a> projects on <a href="http://releases.ubuntu.com/14.04/">Ubuntu 14.04 Linux</a> using <a href="https://code.visualstudio.com/docs/runtimes/ASPnet5">Visual Studio Code</a>. So, let’s jump in.</p>

<h1 id="scaffolding-the-aspnet-project">Scaffolding the ASP.NET project</h1>

<p>Since, there is no <strong>File</strong> -&gt; <strong>New Project</strong> facility in <a href="https://code.visualstudio.com">Code</a> till now, we can either use <a href="http://www.monodevelop.com/">MonoDevelop</a> or alternatives such as <a href="http://yeoman.io/">Yeoman</a>, asp.net generator, bower and gulp.</p>

<p>Yeoman is a scaffolding tool for modern webapps. Install it, asp.net generator, bower and gulp using <a href="http://xameeramir.github.io/install-node/">node</a>, using the following command:</p>

<p><code class="highlighter-rouge">sudo npm install -g yo generator-aspnet gulp bower</code></p>

<p><strong>Scaffolding the ASP.NET 5 project:</strong></p>

<ul>
  <li>run <code class="highlighter-rouge">yo aspnet</code></li>
  <li>select <strong>Web Application</strong></li>
</ul>

<p><img src="https://lh3.googleusercontent.com/3vi6In7tDIe2i4rSvWy4DE6mYIHyTiJVHOTn3Y9fKh5rlly5CYQ47ZU0K5pArTkOwm_JONI8UXFwN2Z_YPRmthz8jxYcrnRFQtSavn17_3hNoOT_PIg4qu8F3SUlt5vXUQl5iwT14sem3I49zINREjHZGx8Zy7c-QSpEljeRE1FTodgG0JXvGFs37RZtA3nwLynutdxzLO_tlTam3kII34x86-tls7gO1H7lVLbhyQgIAgYXsXTa5l1ESmQHABXs7nfpba8OdCTUB4ks0DmYpgvccHuXdyRGrLRURlLJ6ZoiVMn__L8cgKpHVIWi-b63Non6XhJVvPmFZpRx32fQCu2qMrPNgynTjtCX82D30E9ebeIOmZEVhDrBNsnuXqOfBNgisgCo9uR5Vbt2bflQ__VrYBGHeSxCQrw8oP8tGYOUdk3Ku8wkdYxaz2YxJhvN74jeK0QwD7IeyAfDYySZCnXtL-3qXbdIgmvy-Zv1N9sW0bB4xMk3Lt5W3-VeK-5pnOgKBVn2sHTgd_Ytes5GYRPWRKhyM652TVGhO8dGOOCk0_CuyHN2p62IAhBbgutoRB9j=w1091-h516-no" alt="generating ASP.NET project with yeoman" /></p>

<ul>
  <li>give name to your project on <strong>What’s the name of your ASP.NET application?</strong> prompt, I named it <code class="highlighter-rouge">FirstASPNET5</code></li>
  <li>go to the project folder, in this case using <code class="highlighter-rouge">cd FirstASPNET5</code></li>
  <li>install the necessary <a href="https://www.nuget.org/">NuGet</a> packages using <code class="highlighter-rouge">dnu restore</code></li>
  <li>run the project using <code class="highlighter-rouge">dnx web</code></li>
</ul>

<p>The project will <a href="https://lh3.googleusercontent.com/IIl36_X3S5-bs3qkLqTH_DN8vuUkKLf3QuTuVnlhdTgFwQv9xHYl70lveYXoYN6tBgch5kjYJrQgQk7uUMbb6lrmT5xoSZuXyLJdvmnd_Ly-RkYs0TgMYwrMMKsUALUFr5OoxPKmozc_vvcyJGuODf6cA52H-CbJ1eGbi0_wMvKCDv0EVmLqX342Q2t8qXQYTNZ9Q5DZojlrk9iYQGeM-rh-pwkh83hF9JVOZlCxOmiPoZfeEf7xIc6yTWiGOEHyd4j4FRQDsZbd7fIaWm5VeJIrZmXqBlEmpKqgQMdHDHHGw-Yxj3OG7oH7vsyUDkk88c2rly56eQhQLaaE0UsbDEPAVpzS6vKDQ3QbbrkNwJyBb5lKJH2GdhvUBqJkShMSpeS3yPZF310f_kv6rJIr6fE_bKl2XcQGUYp_ANzuxPYS9Ueptq9oubNAHD5j6GJyC7mSW8cw4OAGAMXeh21XnlddqZAm5S35XlKtkp0bXqOd9e6i3vA3iRPmDwnysRrYCyeCigw9tnZt35DUjXBlY-5SlsCU_wosAGl5W7knmt8TcyA6V0WOfUeeReu6ryttseE4=w722-h462-no">start running</a> at <a href="http://localhost:5000">http://localhost:5000</a>.</p>

<h1 id="troubleshooting">Troubleshooting</h1>

<blockquote>
  <p>Side note: There seems to be some <a href="https://github.com/Microsoft/vscode/issues/2659">issue with running ASP.NET with VS Code</a>.</p>
</blockquote>

<p>In case of errors, <a href="http://askubuntu.com/a/480642/219603">upgrade npm</a>. In my specific case, the <code class="highlighter-rouge">&lt;VERSION&gt;</code> is <code class="highlighter-rouge">5.4.1</code>:</p>

<p><img src="https://lh3.googleusercontent.com/nFUbK778yH9ONxdn-q2Yuomrz2LCn1qbHXW5S7HyHpFUdfr7F32LJxoYxLMhB_NSmyuCDizyYE__ElNkgzsfBOlV6gxEj9tpBzVDhKxc6URr9ingiaEV-Y3RyApJaI1hFElgfDjBIfVTfz1OjWVqz2F55EFGv7pcqSJYNe6VPYAyp5qNaSESMJFsGWDLaI8cql0NBjCkA1l0YOR5al0rY_V31C8QtwGdXvdQUCM3OV5pdzOR13jT51xMIJNqgeWv7rt-RJUtZzwZXPqLjf4sxEITigl411qw5RXV6EWQQ0S8xHLVDsMIkoldpjYF8Kdl8G7aj4qPLlzZM_SUWKXGKE5QfIrjCG584Cpu6k2j1N2AJyXL6d3qnGGxaSCnuhZGWlEMJMeJG4pIhwQ-x8ESl5trJyNshkMpsWO1c3BQxRVXCxdyYkDUwoRJ-tbGDC0BRoBOf1umtFo-_wWIKHMOyGQQlKZmJ_GAmhBcKis8qxZDr62yHHimsDx-gC9GC0X9BZa-AVMrsvgJg2QRWrNgLA67iQa50XZNsxX-AzVXiJ20tFODF8gTTmb8lL5-Gue3s3bn=w722-h462-no" alt="Upgrading npm on Ubuntu Linux" /></p>

<p>Make sure that Mono is latest using <code class="highlighter-rouge">mono --version</code>:</p>

<p><img src="https://lh3.googleusercontent.com/g8eJfx3yyNx9ApVmP5jmpo_rMVHeScwpoXZ10sHZlyOl9VW-18J58oDiwXMqwo6InTmM82t5v0y_efg5awzQ21DXs19BQkZFeJ7XIflWI4Pg-HIF-i6uG6NL-luJm3gjCrVIkqsy9WwUcI9hy7YysqC4OYAm1dp7RWNwjOiI3h8TZibXP4qyr7KJp2SMxVXs2OAOq6Cqb-gQfpDcrIrzJkTrXohmLZKY03lkwn_OyFWQuwRjj3mgyW9v8enCWEb4XYp4MaSvqDMWOiBxvR0MIYacpdxwPoLe1c2moXbvJ3Nl5AZIFVVdevVh99bKXY6KSTM16Leij9guW1nqDdZtA_78CN8Mo0sc89mP1CWu5DiopeqgeEc6sncGC96EoyiNiqPYAl1N-ytTtK-I3PehGEp-bJhvVZvMOcCEnqL_kEDErAhbK7Of81WrhGP4BXyr_8RaSUyXOfF7mR2YSoOfZPGQyUFBr7qExy6cfIyOi_QlKrVt40nCheaLD9Gi8A9rPFPRxFgzVC_5mmDf9SmAOfm5ZepXl2a2S3z2azONRtlNtdrtfdpuvwpQIjcoGqiLeGNI=w722-h303-no" alt="Check Mono version" /></p>

<p>Also check if <code class="highlighter-rouge">dnvm</code> (.NET version manager) is latest or not using <code class="highlighter-rouge">dnvm upgrade</code>, upgrade if not:</p>

<p><img src="https://lh3.googleusercontent.com/4zlg7JmHDBscn4X0CmbQcFqSUljf6XDArRHBliSA6bPCV1QVFRYNqqg5vIL5Wdta0QeHPf56QuzQS-fxWz4UccMYdyTtotPHlACIVnkWa_lcv855ZkfDl6sXgZKZ5a4yb5DgubHBZ0hkr4yfXgJaM_4JF4a9FTYKNamF9AlHGmFLANWekqGkmbocmmx8xc_8i-N0QEfKMcgt1Aup3-wNgCwV7s7q0uESEeSgozT-W44uSzCmWFxRziPw6ebjaM69UGlsPNewxpWoVzBy8PiWkEZw4pOFcN1mb5gtiYH7eDyAVFgGpXVGFd4XS9Q0Q-C0s4a7D86-AllXO5t9Bh2Xi4qX0gi0eXJpBYucV2ATJi7bNYAY-QUA8LalD5W9HZGujjV3fYmRkKh4KYY4329mGHBi6KOyJlK6aXfRAPOWL7PG3fy7mtaqnKdp94_MxUld14JcRyccvQANVZo_byBRyK11njiBa0tuR5pB97HNlSIWRRGgJrC_GGe8Q_1tUayEH9b9GQfLoEOHpxgx40Swiq8JiygwKXHk-GnIMmL6xDCb1JASO4fufeIXjwyPdVQfJJbL=w722-h236-no" alt="upgrading dnvm" /></p>

<p>After every piece fits into the place, something like this will show up:</p>

<p><img src="https://lh3.googleusercontent.com/8XYNP8wNLEPU-4Xs06l4T01jrgRRbKjdSmCw0k5-lDd5n60quUqxJm0SiiJKuPPYlMO3nbZAgYkmDeBKNcgVMut5gwCrZ5PzUuabJ8pRLl_vniRKmaULdXfvqR7prnx823UQP4aEapriD9ykjT48oG-9qqEPDGTZL5lLTFZk38zVz65iou25hkkSIly6NfJiSKMynav7EgxZOE_RIIjC5ex3XTPlS6kWTUTN1TD9VFg6VCgE5rTs6PhmGOYi1I4CjuNWBOnpnz3Ck8CsIGjoITD7QKdhaiOR7zW19CCUsYhjewLgOjtPYn55RcJdl9MePHvmcIRRWpTUe3xjc6it98GLquqIzTti1jf2Mv8ahpmKBOefOi4j3Ntv7fhpSKIWW8LEp0s2tx66vR0A5p9-cQq99jr8-EP8WycV7Zud3oVQNEgW3nJ5NYdsYWeqEZERk7F1uqrx3vsgu89x1p38s3J3X1lwqp1ZwK9_WEeQGP0kEP66ZazfIl-O3exdZuoxoJLEYRpeIpuX-zoeJ7T8LkS3HixEzGomRKgSil8qr_lS0Ok3gdGJlVh5id3IonXkKSLs=w1215-h683-no" alt="Running ASP.NET 5 with on Ubuntu linux" /></p>

<p><a href="https://goo.gl/photos/GVXrTLg9ugg1h5t97">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/building-asp-net-5-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-30T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-30T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Solving Mysql Mono port issues]]></title>
        <link>http://xameeramir.github.io/solving-mysql-mono-port-issues/</link>
        <pubDate>2016-01-23T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://ccmit.mit.edu/wp-content/uploads/2014/09/problem-questions1.png" alt="solving MySql problems when porting to Mono" /></p>

<p><a href="https://ccmit.mit.edu/problem-solving/">courtesy</a></p>

<p><a href="http://atulgawande.com/book/the-checklist-manifesto/">Checklist items to tick</a> when porting <a href="http://www.asp.net/">ASP.NET</a> <a href="https://www.mysql.com/">MySql</a> projects from <a href="http://www.microsoft.com/net">.NET</a> on <a href="http://www.microsoft.com/en-in/windows">Windows</a> to <a href="http://www.mono-project.com/">Mono.NET</a> on <a href="http://www.ubuntu.com/">Ubuntu linux</a>:</p>

<ul>
  <li>Since Mysql is <em>more</em> <a href="http://dev.mysql.com/doc/refman/5.6/en/identifier-case-sensitivity.html">case-sensitive on Linux</a>, make sure that <a href="http://stackoverflow.com/a/26457971/2404470"><code class="highlighter-rouge">Database=</code> names matches with actual database names</a> in <a href="https://www.connectionstrings.com/mysql/">connection strings</a>. Better, keep them in lowercase.</li>
  <li>Make sure that <a href="http://www.tocker.ca/2014/04/21/installing-mysql-5-6-on-ubuntu-14-04-trusty-tahr.html">MySql 5.6+ is installed</a> since <a href="http://xameeramir.github.io/install-mysql-ubuntu-linux/">the default command <code class="highlighter-rouge">sudo apt-get install mysql-server</code> installs version 5.5</a></li>
  <li>The version of MySql on <a href="https://www.google.com/search?q=check+mysql+version+ubuntu+linux">Ubuntu Linux</a> and <a href="https://www.google.com/search?q=check+mysql+version+windows">Windows</a> shall match</li>
  <li>MySql v5.5 tables doesn’t support <a href="http://stackoverflow.com/q/963534/2404470">FULLTEXT indices</a> and <a href="http://stackoverflow.com/a/23153922/2404470">CURRENT_TIMESTAMP</a> features, upgrade from it</li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/solving-mysql-mono-port-issues</wp:post_id>
        <wp:post_date>2016-01-23T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-23T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Solving ASP.NET MVC project runtime errors on Mono]]></title>
        <link>http://xameeramir.github.io/solve-asp-net-error-on-mono/</link>
        <pubDate>2016-01-19T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://chornsokun.files.wordpress.com/2011/11/monodevelop-2-8-2-git.png" alt="Monodevelop logo" /></p>

<p><a href="https://chornsokun.wordpress.com/2011/11/11/build-monodevelop-on-ubuntu-11-10/">courtesy</a></p>

<p>In case we’re running an <a href="http://www.mono-project.com/docs/web/aspnet/">ASP.NET application on Mono</a> using <a href="http://www.monodevelop.com/">Monodevelop</a> for the first time, <a href="http://stackoverflow.com/a/34872143/2404470">we may receive the below error</a>:</p>

<p><img src="https://lh3.googleusercontent.com/2vI7SdMsVHBFLR7cOuqb7eoTF561t5BRLLmEfliOvKXH-9zZZ0t8dRM_2_t6jFF75C9kIz8fN3mgXRgg9ZiLzw80bbBMmvEVgevbBFgnuJpQXJ8E9kKQSKXbORy9rhFyIznWRgm7RaEJn_JjRGtAqIbgiCGW69GcoEwDjGloJW3pO0ayMt1J8N0V-4VhRllq-I9HWzEOJcC9SoDelR3d-zdYBxqQQ_M58USmJuYN5YtpulFfrh4UeeOPcJFrBGXMdwdXWvxLOt4mvf-QHHbYXV004KME6iZOZSN9g3O6MT2Iy3KtN13YlvRip_bERgyqRRs2BxJmfQoWnuEGVC7eymjcE5Qjf2pLuCg9RB_mZuOsleCyh2vlxzWKSpaU63Hp6U2aPrMko2-qmobCjSJNMCMi2Qfg9EzJ3ObWQ88W0alel_Lzfd_rWPoQLpJEnEKhP7ZkC8HQYezKj4jEPzSP4zF_S8TBGqAd-LGSb44m2OniZYHoev6Z9fjVjyX3fSWDKu2D48i9VIk6a8UyrVhveJerlZQk3aYOexOoaToYEmnaSE-1ZULem0dH-hG2N4eBI6Zh=w478-h179-no" alt="Could not launch ASP.NET web server" /></p>

<p>In some cases, the problem is incorrect installation of <a href="http://packages.ubuntu.com/precise/web/mono-xsp4"><code class="highlighter-rouge">xsp4</code></a> server.</p>

<p>Install it using:</p>

<p><code class="highlighter-rouge">sudo apt-get install mono-xsp4</code></p>

<p>This solved the above error.</p>

<p><strong>Optional:</strong> get it from <strong>Ubuntu software center</strong> by searching for <code class="highlighter-rouge">xsp4</code></p>

<p><img src="https://lh3.googleusercontent.com/C5-5C3FHK2RE7--bmz6VSqU6keQXyvUAxhtoGOPt2xXrp1oZVOhMdgF0-J91A7ptJWyyu33OY1I6s6oToOeV8B3IvC2XT6pU1FNb-WqIOA4xs3Xp6Eo0lK8CRsNrza4j6HXGZQUg536VoCbAaCvOykTkll0Rxo7aJp8etcKT6v7UvQvqUv5si9agQoVeF5n6fenW9evfZ55VoHldYUnYM2qcKe8BKIg5GXEya4sv0ESPktYXfZfi3VPVvhuzk-NqvNJrriTGiWnUgPm9Vci1efPzeriHgVx6L91WoBwrs0d5M8eNZxm1dg9G_22i5f3WuZe65QOkuT9AO_3ysC9o9ZLpIM6JQNNS6expj9sXAqMVUhTBm7yzV5EoeHOWE9XIA6R1C9eo-00JvWxDDhABP6U8aMbYeT_10yy0v_jfP2Y-qk3m1st-lnSBnQyCNBuj_qNMcxK7sR0zh4lDIbNEha_wKMy1rsfUEUexYFspMDBXLkZz1kJt9qnPgyVMp5rYIGLt5i_Kn32IfLDmqwA2aePfyTE3i_6LIq7S5eU3cuP6VqiSMxI11hcB8lYAFjI0ofbo=w1088-h637-no" alt="mono-xsp4 in Ubuntu software center" /></p>

<p>After the <code class="highlighter-rouge">xsp4</code> server is installed and ready. The project will start running at <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080/</a></p>

<p>A directory access error saying <a href="http://stackoverflow.com/q/24872394/2404470"><code class="highlighter-rouge">Access to the path “/etc/mono/registry” is denied</code></a> may also show up which can be solved by <em>simply</em> creating the folder using <a href="http://alvinalexander.com/unix/edu/examples/mkdir.shtml"><code class="highlighter-rouge">mkdir</code></a></p>

<p><code class="highlighter-rouge">sudo mkdir /etc/mono/registry</code></p>

<p>and setting the right permissions using <a href="https://en.wikipedia.org/wiki/Chmod"><code class="highlighter-rouge">chmod</code></a></p>

<p><code class="highlighter-rouge">sudo chmod uog+rw /etc/mono/registry</code></p>

<p><a href="https://goo.gl/photos/1GKy1Q5cQErmafNWA">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/solve-asp-net-error-on-mono</wp:post_id>
        <wp:post_date>2016-01-19T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-19T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[BlitzKrieg SQL Server diagnosis]]></title>
        <link>http://xameeramir.github.io/BlitzKrieg-SQL-Server-diagnosis/</link>
        <pubDate>2016-01-17T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://s-media-cache-ak0.pinimg.com/736x/25/fc/94/25fc94b2bd5c96e67912534644f3856e.jpg" alt="BlitzKrieg" /></p>

<p><a href="https://www.pinterest.com/pin/253749760225683004/">courtesy</a></p>

<p>Found a few cool tools for disgnosing the SQL Server issues. Here is the share for you:</p>

<h1 id="using-sp_blitzcache-to-find-your-worst-performing-queries">Using sp_BlitzCache to Find Your Worst-Performing Queries</h1>

<p><code>sp_BlitzCache</code> is <a href="https://www.brentozar.com/blitzcache/">a free tool</a> that help analyze which queries are consuming most resources like CPU, disk, time etc.</p>

<p>To learn about this tool, use the help parameter <code>sp_BlitzCache @help=1</code>
When ran without parameters, it returns top 10 most CPU expensive queries: <code>sp_BlitzCache</code></p>

<p>It results in all the diagnosis information like which database and stored procedures are taking the most time. It has a column named <code>Query Plan</code> which links to the actual execution plan. This execution can be shared through <a href="https://www.brentozar.com/pastetheplan/">pastetheplan.com</a></p>

<p>To narrow down the results to a single database use the parameter <code>sp_BlitzCache @DatabaseName='DBName'</code></p>

<p>To sort the results by number of reads, pass the <code>SortOrder</code> parameter <code>sp_BlitzCache @SortOrder='reads'</code>. Other options include CPU, duration, executions, XPM, memory grant, or recent compilations.</p>

<p>To limit the number of results use the <code>@Top</code> parameter. Remember that the more queries you analyze, the slower it goes <code>sp_BlitzCache @DatabaseName='DBName', @Top=50 </code></p>

<p>To do an expert level analysis and see more info, use <code>@ExpertMode</code> parameter <code>sp_BlitzCache @ExpertMode = 1 </code></p>

<p>For an export to excel friendly result, use <code>@ExportToExcel</code> parameter <code>sp_BlitzCache @ExportToExcel = 1 </code></p>

<p>To write the results to a separate database, use the new db entity parameters <code>sp_BlitzCache @OutputDatabaseName = 'NewDB', @OutputSchemaName = 'dbo',  @OutputTableName = 'OutputTable' </code></p>

<h1 id="sp_blitz--free-sql-server-health-check-script">sp_Blitz – Free SQL Server Health Check Script</h1>

<p><code>sp_Blitz</code> is an easy to use <a href="https://www.brentozar.com/blitz/">free simple health check tool</a> for SQL Server. Shows stuff like non-backuped databases etc.</p>

<p>To learn about this tool, use the help parameter <code>sp_Blitz @help=1</code></p>

<p>When executed without parameters, gives the list of suspicous things. Notice that issues upto priority <strong>50</strong> are urgent issues. So to see only the urgent issues use the priorities parmeter <code>sp_Blitz @IgnorePrioritiesAbove = 50</code></p>

<p>Writing the results is also possible like this <code>sp_Blitz @OutputDatabaseName = 'DBName', @OutputSchemaName = 'dbo' , @OutputTableName = 'SomeTable'</code></p>

<h1 id="sp_blitzfirst-helps-troubleshoot-slow-sql-servers">sp_BlitzFirst Helps Troubleshoot Slow SQL Servers</h1>

<p><code> sp_BlitzFirst </code> when executed on it’s own gives all the stuff which are causing the server to run slow like ongoing backup execution, high CPU utilization.</p>

<p>To see the detiled wait stats use the expert mode <code> sp_BlitzFirst @ExpertMode = 1 </code> and gives 3 resultsets:</p>

<ul>
  <li>Result set 1 : queries currently executing</li>
  <li>Result set 2 : the troubleshooting info like that of without any params</li>
  <li>Result set 3 : WAIT STATS (read below for the description of the same)</li>
  <li>Result set 4 : FILE STATS (read and write speeds for each database file – both data and log file)</li>
  <li>Result set 5 : Perfmon counters (statistics from the <a href="http://xameeramir.github.io/Setting-Up-Perfmon-for-SQL-Server-Tuning/">performance monitor</a>)</li>
  <li>Last result set : gives the currently executing queries</li>
</ul>

<p>To see the results since SQL Server started, use since startup param <code> sp_BlitzFirst @SinceStartup = 1 </code></p>

<p>The results can be stored in an output database as well.</p>

<h1 id="sp_blitzindex--sql-servers-index-sanity-test">sp_BlitzIndex – SQL Server’s Index Sanity Test</h1>

<p>To run the index tests on all of the databases on the server use the parameter <code> @GetAllDatabases = 1 </code> like so <code> sp_BlitzIndex @GetAllDatabases = 1 </code></p>

<p>If you’ve got more than 50 databases on the server, this only works if you also pass in @BringThePain = 1, because it’s gonna be slow.</p>

<p>To get the database specific details set mode to 4 as <code> sp_BlitzIndex @Mode = 4 </code></p>

<h1 id="wait-stats">WAIT STATS</h1>

<p>Whenever SQL Server is running queries, it’s tracking how much time it spends waiting on bottlenecks. These wait statistics are the easiest way to identify your bottleneck and in general called <strong>wait stats</strong> or <strong>waits and queues</strong>.</p>

<p>These statistics are tracked automatically in every version/edition of SQL Server, and they’re easy to query.</p>

<p><a href="https://github.com/BrentOzarULTD/SQL-Server-First-Responder-Kit">Source</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/BlitzKrieg-SQL-Server-diagnosis</wp:post_id>
        <wp:post_date>2016-01-17T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-17T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[SQL Server Profiler Best Practices and Tuning Advisory]]></title>
        <link>http://xameeramir.github.io/SQL-Server-Profiler-Best-Practices-and-Tuning-Advisor/</link>
        <pubDate>2016-01-13T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p>SQL Profiler is a great tool that allows you to see what’s going on inside SQL Server.  You can find out what your worst performing queries are, how often a query is executed etc.</p>

<p>To implement best posible indexes do the 3 step process:</p>

<ul>
  <li>Collect current workload information</li>
  <li>Determine if indexes are appropriate as per work load using Profiler</li>
  <li>Update indexes using Tuning advisor</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/DnlxGgq5NTSSl7MQzj4lI4yXBOFEd8MrtLCcCEBOjZurj5kuI7Y4Qxj6X9GVGKTijAvm-OJwQbG38Rht1W1Ez8qGqx0avuZC2ZmllwH2n4hojanh21_tzb1O1-M3MtudhfHyQLDRRyXxxBC6iCP4z8KHlrBSWHXknMcw4ixhT-fr8N3vIFh8-jKFg8jzkQR8YbhDaKNUIGyNQ48rSEwi_8eFD5QOaYgucvuFWaEvBhIb1UERopsJVo_o1JHo2dBfovXQ4mLgOqFnVEuf4LfgB5ni1pLiWU_dAzAWpmdF5MPU-ufsoyVuEO2xk_UkbrI-hKZRKJnS8jIEAw_Je9UZkdgfezOnvwVDkhtfYM1-HOchiNbe7fo4OpyARI-LyQzVO-q2IN7T9poYRrdp1lDz1n1dK7g8yYx5EBNss__lHVdnafzu9-xm2sXUABKvWrQNeS_FVWAU38MqNu3IChOyRX83WSPrnDHCzHWKOSYqIcb0SEukHbWR2qVIpbrBbvhzqHbg-A1wBw3tRR5Jlp9Xn11c0lmARy84LruJFCnQlZSXrZmA-eWRQz41oDnhOQt-6Q4resWLOlO2LAEFH__pcNrqJ91bB8wOhFmG-aJuYisEGiyFR-zXJD5PhqFEwhuWJo6lpXhxIeODCYvRZFjYNhEd-Na6Sr2IQ0qJmq1FCg=w899-h597-no" alt="Improving performance using Profiler and Tuning Advisor" /></p>

<p>The profiler automates collection of workload data and the tuning advisor takes the workload data generated by the profiler and come up with appropriate indexes.
To trace on specific database use the <strong>column filter</strong> feature. Start the trace with tuning template and save the trace data to a trace file.</p>

<h1 id="using-tuning-advisor">Using Tuning advisor</h1>

<ul>
  <li>Click on tools</li>
  <li>Click Database Engine Tuning advisor</li>
  <li>Provide the trace file</li>
  <li>Select the database on which the trace needs to be executed</li>
  <li>In the tuning options, go to advanced options maximum space for recommendation can be specified</li>
  <li>Click Start analysis</li>
</ul>

<p>The results shows how much improvement can be done if the suggestions are implemented:</p>

<p><img src="https://lh3.googleusercontent.com/14jn0Rd6Mis5yu-o3PYGkUhZZfXDKPu_mcYCosIjz2oCN9SNEm8a4xJsLDk-DevUee-VZHvUgSLU4kABY43mfQyNTwmmXnemHEMu0sWAmwI1JYYCRUI2hux_gaQeCLdlFMGD4pd0Sozoj0i8IYI1ulI7-149kwyfYj4OjzLHUtcjkceNgMAjoldwtU1EYcsUFp8wiiH9VEo8U74gMmNtixC4TOWdbFDaCaSWnVv-G7nHkb88BIMZ-4cl_TRd2KQGM77bcwmVZfy8lqbPPnJF0Obh861ir_0R2Y52mFbOGcyXZY_y9Lj-D9cpHP_H_fn0cYH6Mmw6-5DEVt26NsDALStIGNOXjRo63C3dC8tO67nt_8nyWlDxGbfYw7e54snjW7GpY56Ustvu9v6p7X3mi7k4-BhGXHBZ34KzqvqBn_wnIDlUZC-rIaWWtxCrk7bbyB9NlQLu4bJikqMPAAPmNLRq1MQnec_SZ-OpQhqYklQvjzIGuBpP8Got1pYzR5-l-3402gRGzVcGfDtj4J7LPMCaSbgR9fpUDkuvlt6kRRinCxlJju4gsM_1YnVg1W9MkKfXoSNgArOacKf2zJg8IpgGg8u4aAC-ydqBNwu7C8T5XRb5Zye41M1bVpoaEkrlBCBImXG4mfPradJGCk67XKSoYJVTL0mCKCk8dqMLUQ=w984-h258-no" alt="approx improvement" /></p>

<p>It has a definition column as well which shows what to implement to improve speed of the database like for example:</p>

<p><img src="https://lh3.googleusercontent.com/egFovLthU4dsBfNb2ns0WAVCbseUEXPWQcM2TCBOlx9V-4noxaZCNW33ViPRZW81-FEkzIGbpksdTNYsbV5i32g1u7u7EYYxqHeGRaAUSQqzdEBSMEryImwTiMjalfN3xBMoA6ClGQQJcnP41eJ5H19Km-RWgWXsel6YmW3bdtbiiYoSZM7OeDqKziTvg9fdh1_bcmRQelK-eOJQxYVkeiJPHI1t8LOq4m5S-TTOfs89DoBw7czUDxxMZiyxfH6wC5NaAM5GjPqo0MPqKyyQsK9iJpu2HI0zkjNapSYqkyy3YbVO_GkKAs0lf0u5lNctmaMAdbectoukqMxrkBduyjCCrUWWbGyEu0-8N2nemVuT_aYazp0vz0iHDXjUMqxTdmLkiDSZA7bP7Ke9I16HFZYUAkhHJbNMQo2e0nyQ3zYkX8MnICPqObOwYsLeSrQx_irca8XvriQMgQqCxBvcR0MscnSlFfdfmwU5uwJBtvgncY3m1pkscZHcLYv56pC1ToMM-xqUGu26uFfvoGQhsktQVTkERrjR2m7ce7NVc3dnFu8B1rQ9bbzE0dGvwAl2SZZZPnNVAXuqmCGlnXkl5VNqQF_3oNLCi-udKQpjt34YlpjuHQF9xkl2jqhzH9IsG_oK5x-p2yioLemUdCkynsX0ZvHLSFp9rJ3jxluWPQ=w497-h257-no" alt="index improvement suggestion" /></p>

<p><strong>The SQL Profiler best practices:</strong></p>

<ul>
  <li>Never run SQL Profiler on the database server</li>
  <li>Trace directly to a file, instead of tracing to a table</li>
  <li>Filter the results, such as “Duration &gt; 1000”</li>
  <li>Include only the events that you are interested in, such as <code>SP:Completed</code> and <code>SQL:BatchCompleted</code></li>
  <li>Use filters like user name, server name &amp; application name, etc</li>
  <li>Run SQL Profiler on a remote system</li>
  <li>Save trace events to a rollover file of a predefined size</li>
  <li>Don’t capture showplan event for long periods of time to avoid very large files</li>
  <li>Create templates for quick access</li>
  <li>For tuning purposes, use the recommended tuning template</li>
</ul>

<p><strong>How to capture deadlocks using SQL Server Profiler:</strong></p>

<p>To capture a deadlock, first connect to a SQL Server database. To open the SQL Profiler in SQL Server Management Studio:</p>

<ul>
  <li>Click on Tools</li>
  <li>Click on SQL Server Profiler</li>
  <li>Connect to the server on which we need to perform profiling</li>
  <li>On the Trace Properties window, under General tab, select the blank template</li>
  <li>On the Events Selection tab, select Deadlock graph under Locks leaf</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/XVylgxByDBIM1xqtqEn3cmn062wG1fHAQE2LUKGuBgiJxM7qnYMZD4UqmOqGb9ZXt2wi8FwIPVj_GddI2o2av5qPq0GEZJjxOc7-8kOsGW2U2wXgfuO_TEWTBXkq1BzVBY782dyUMM_6tZEBViWX38t71kh3kzCjZ57SXIG4cbTW2hWqDkb_2Cssg5-PgOwhuoa9pI7M5kxpBzAt6myGGTZvisr5QxBQvWT9LQEP4qCzoXfeZBsDDORCMxVn-PS12GJX0TtcBju9cOd0sCAn_ErqnZNWkaI94IDnPqbDPZKX-iu1MAdh8NimZToj9PtQLRIrPn0N4qXJjXef3gvqceMgRQDUJTkbcLLx5XphY579kH5lT0OGJZActs6lMp-SQL2e2A4CWcnif9NqkxPH6xd7AWulYQ8UGAV2N5A1WwEWMnr1h6oPn8-6IojrBxBWCj5aRhkzhgE2RIrPfrEJ_sPS3T3djrpRV_TFQyoZU79JmM7hzEB4Ds4ul32OcpY8gWY6_Gl7BbmPOdE2LQSi6pfzJbff-tqHYF_x8l7eYaU_CUghMh6iWnCjCeD3GAm1esMaUG3pjLN-IBE7B9_wOwXtcGLiZhMIj0fz2dKo2k760gG27Qncfj7JZm7mItEUh5_yOrDZOJvtX_PtmAYMbGQBiGx8TX3TjtnxUA49Vg=w310-h309-no" alt="Deadlock graph option" /></p>

<p>Let’s execute the below queries:</p>

<p><img src="https://lh3.googleusercontent.com/OgsZ4JAWxLCNx7qKoOeBLmkC2m696Kh633YQSqUqWdT7eZ6XeSLqs6wX6R92qHuNAdRQpzXifeBsfGDiLvXACKBHrVzSpdSqmT0pTsz92hiU7I97V9fxzRPExiKeu-Y-x4u0EhBvPBiss38KwinKVCTm3nXCGkAAPY5fo6N3__AxGyiYGJftJqMtKzjLB9RXuxGLq44lQe16_rtDl_49KwosOYTvQXTaFWg1vIzm1iMv7P6ugYDH24fecP5CFT90Ou-oYFPMZoyKtNzV__kN7ZiFbYX2IWGIE3-WY66E1hjiYrLJtFc_af0lIE5B1ZRAYJR9cmKy_019e-7XL3sjWzXGdqYahKgJ4o7FnjHOd7bNqYkb-1ieNAiwihoNLvDkfdKMXC4WvR3OMVRnnK34_xFcmX445HwOOWXc6TXn4zvvI5N1Qz---X5pMo3goNgXmoSnz1VhnOSmrFLt1-ytJ4eb6exfrLmfQztl_lfw8nVfmc3W-Q6maeCGOYT1V4ILs2fcwbkgMkwh-2I-UFhMHrpbTi4_Dy2usYb2Ob14MHK04NGKtNLdijCn_48M2AGobHyUUugekKaIV73ReKlbZKnp8xiwdTzhxgrlAf_eCwVY3UaWaZj1Ffk1RlUOV_y9-j9TKXLT3XwQHIHMw9GfAIGv9sukQm03gNNS4r7gPA=w1304-h376-no" alt="Deadlock generation" /></p>

<p>In the following order:</p>

<ol>
  <li>Execute the query in the blue rectangle</li>
  <li>Execute the query in green rectangle</li>
  <li>Execute the query highlighted in grey</li>
  <li>Execute the query highlighted in blue</li>
</ol>

<p>Notice that the process ids are shown on the information bar in SQL Server:</p>

<p><img src="https://lh3.googleusercontent.com/zRGbwxFbFjGrzUR4iGCVmfUnLMgTZE9BcF-cMFmDQv5I5XIJ5CI2EbKezd895Tx0JOvV1b0_LPskXqLyJBvv1VZumlO2QaiX-Js71r0SwzEvKeP7I44hSIm5-cwq5ORQPb6AtoxXKqIOx495KNpeDmOGPFtXEHzX8tONVeFtowcv9mvVddgSTa63DA3-GUVsfHY6PPHS_shYqhvTnIu-ar4LixVwDaPH9YGoiSirreGwZZfGMz921Ke0ltbkOepNlZdhCF9Yv4GW3WUW0Sok4A01x6tCerHuVDKuPVzaQIjHfyPWBZClx4iaBktRPxKVx9gVXuICAgDMj1ISEmFMQFLtC3S6pihSi_Hqv_nMgv6XDGYANfMhg6N5H9F6gIDBWCYjh5M5HrcyqnPBVVf0HmIr0yCC5PofwDOBz1xLa-m2_s05iMKZb2Wuh0x5jrCIsMgoYbRx7imOkYgPJvtjpH-hWNkX9BHdIc2-orZReGosOFmbS16tU0y6nn_DrnUPXheNkfnoo4-aOrqVmmVOHYSbeNUcWHMp9KdR-x_gY7Dne0bAewk3a6YA9rjKeH1Mnps7yNG_YYs-SkxAeWPsZAbp52WnQi3vmQzd9citt5rvkCZMWUIlFoLp6FtAoVMjxLnAh5evA7tuCqulzw5Enn_IbzaVOln98v-KTgumSg=w507-h49-no" alt="Process Id in SQL Server" /></p>

<p>The dead lock will be generated on execution of the 4th step:</p>

<p><img src="https://lh3.googleusercontent.com/xr30cO_GeWOw6zde5GCaFweh73EDDBOkoUb8_PTR1YGcue42gB5e0oraq4jy8gyIUzQ0zh9c7TKPYdZpkTdawRGyLl7AJRacmxhUicfxTkHLOfZ3HjPnT26QJZ22vl83n3BWJivUjTz80BRSe2--jdFjIjDgrdUVglsfG7z66GLEi8OTm_X3k60CofFNP_RV-CW7ZieA9B8Ar0nbYqA-g312tcsB5MZdxmACULMj2HtfkQK4gitJawJUpYz2UAbjjJLd5vXalLowopR9LcrFkHAQovlfUeYXbuTwwNOy5iNsU_zREQcN72fp8xn6CPsVp4mMp3qQTm5oFAOczVuJjsWtIJ84Ru9nkIopkz9cR5BaL6M8_RHGRiy5wG6LmrUhqt76lRJ5K2owi0Vr84yqAj2Whdwvh68F-wAy7ZTgzdrnkuSB24qu002Dl2KwmCUKs0PJzcRtR9VgaRQutJ0cFOnGuyauUYjsOJUG8YARNLyY2RgxMe7Ts-TFJZB0m4KvUC8pUOdnqwByskm7Drvs-Cj0gIBNkhHjDQTzzjIp9F_Mm3JNIbWqRJAP6t8A1fdfLS7Da8saXso5zRkpj_qg1ezSCvN7kKedqWIhjYCF0wJ1aLI8rr6qPTaB_ahPj9eGy1UPaSjW5HEkppon96GuQodcfOt9qP9LeGB0PwMm1g=w1278-h196-no" alt="Deadlock graph" /></p>

<p>For later analysis, this can be saved from File -&gt; Export -&gt; Extract SQL Server Events -&gt; Extract Deadlock Events…</p>

<p>Analyzing the deadlock graph:</p>

<ol>
  <li>Oval with a blue cross represents the transaction/process that was chosen as the deadlock victim by SQL Server</li>
  <li>The ovals represents the processes, the one without cross represents the transaction/process which completed successfully</li>
  <li>The deadlock priority is set to default i.e. 0</li>
  <li>We also have log used, this represents the transactional log used. If the transaction has done a lot of updates, the log size will be larger. Hence to roll the a transaction which has done a large number of updates would take a lot of cost. In our case, the deadlock victim is the one with less transaction log, because that would take less cost. The rectangles represents the resource nodes.</li>
  <li>The rectangles represents the resource nodes.</li>
  <li>The HoBtID (heap or binary tree id) associated with the resource node is used to find the database object involved in the deadlock from <code>sys.partitions</code> view by using the following query:</li>
</ol>

<pre> <code>
SELECT object_name([object_id]) from sys.partitions
WHERE hobt_id = xxxxxx 
</code> </pre>

<ol>
  <li>The arrows represent the types of locks we have on each resource node</li>
  <li>The notations X and S on the arrows represents the exclusive and shared locks</li>
</ol>

<p>Sources:</p>

<ul>
  <li><a href="https://www.mssqltips.com/sqlservertutorial/3501/sql-server-profiler-best-practices/">SQL Server Profiler Best Practices</a></li>
  <li><a href="https://www.youtube.com/watch?v=AaPaIVI-yyI">Improve SQL Server performance using profiler and tuning advisor</a></li>
  <li><a href="https://goo.gl/photos/VFrQy5CEX1emE39E9">Photos</a></li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/SQL-Server-Profiler-Best-Practices-and-Tuning-Advisor</wp:post_id>
        <wp:post_date>2016-01-13T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-13T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Install Visual studio code on Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/install-vs-code-ubuntu-linux/</link>
        <pubDate>2016-01-12T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.omnisharp.net/images/vscode.png" alt="Visual studio code" /></p>

<p><a href="http://www.omnisharp.net/">courtesy</a></p>

<p>If you’re <a href="http://xameeramir.github.io/install-asp-net-vnext-ubuntu-linux/">trying to work on .NET outside of Windows</a>, you probably be missing <a href="https://www.visualstudio.com/">Visual studio</a>. A <strike>complete</strike>sub-alternative is <a href="https://code.visualstudio.com/">VS code</a>.</p>

<p>Now, we’re going to <a href="https://code.visualstudio.com/docs/editor/setup">setup</a> it on <a href="http://www.ubuntu.com/">Ubuntu linux</a></p>

<ul>
  <li>Download the <a href="https://code.visualstudio.com/">executable from here</a></li>
  <li>Move and extract it in a folder as per your preference</li>
</ul>

<p>The contents of the extracted folder will look something like:</p>

<p><img src="https://lh3.googleusercontent.com/hj7w01EKuNwe56sDu-h8tIWNo_uUhfOF9cl0kL1VHTx1p1zl31R_elTqwzhjRfdn7dh0EjKVC2tVk-OMGW77bCNILG6hPo88OBu7fWCSDdCOuYdidZiQfRjTSF_AE0s0vfdIhkYThC5vrfuznbT9HJC-BusHkH4ioqujUBsnO1ABtqy9ODHeWJ8gim8f6TZc5Ena16uab4plfGt0wVANRIwAvpwFYAKduBZnXbxFbfm0C3jPvMsRe8JQQFRL9V0jLiTkVERQux_NBebbokW4rC8E0S49T46e3efMW854L8oiLDi0yZ3sqULf20ylWha9166q5iv6j_EreVZDPdRVUeayVGaV8A-kC__nfQNiRrHgl_8c5kVq-eYa6nxQjmGbhob7vzv_fifP7E6JiIsvpoW-SxCJOLGmaZpWtt2M1Y_d9jwgHDWCjKvGW-H4HOhuL3yh6MLijkOjuM2tqDV4Mn7iTaaHinPWHM1SmoX-WEI4J1N6IaazY0SijkaaUJAWnoLix_N040xC4LtND-jqtf0BfqGwbHv6hQTejGPunxs0F3BfExny3lqiuuwoiggI7goY=w1234-h353-no" alt="visual studio code extracted folder" /></p>

<p><code class="highlighter-rouge">code</code> is the executable file we’re interested in:</p>

<p><img src="https://lh3.googleusercontent.com/lno1v_aedIcyTdhEa1Yk62SxcjdN_P6cWaS8dG1O--fViQ-bL-maxxtetiIvnqpJo66RR6CU1kucTQImuIRWqX0r_h8v8WmMnxYeJJHrlG224exL7CBX2ZGwGcrSUyBN766YKjsjDOmU0wFKPHBqB07jiuHd_yCj8cuQbkXYKqGts3IXszf0l0iNGtzwmdkGf_zuD67Dwm6YzcdjlUPa5HTNuhyi4LNXa5E_bvtYgxpowYCuzoFvM_Zd4jFOjEgK3IYSRgKlcc3QyPc-0HruFMDROBH4Mh_YjpaIgUNNrIKWSI0wMRMFgTBwCasvzmD02xhpecWl_T5cAyMQRDDfhD8GSDd-knYYMHyH1LrXBeUAJcQLuJDil36R6LrtrwYsStST8a9i8XX6aPXEQFTP99oQE0ISrM-uysh-whN88H7PINu_ByTUqq2ZZHIA66bEL6KsgiXAR8FiIe4u2r2hUWmj8VK7KUnchWmDBxMGRD1iaI3xCwsYD3GIDaaovzKeuDA2Rz_Zs0OdcFPi0Nx0G22rlBo-Knl4JljQOrKfMGgUEg9X2oVQWrcesNNHmNGQwSoc=w545-h526-no" alt="visual studio code is an executable file" /></p>

<ul>
  <li>Double click <code class="highlighter-rouge">code</code></li>
</ul>

<p>For the sake of organisation, I have all the downloaded setups in a separate directory called <code class="highlighter-rouge">Programs</code>. Yes, inspired by <a href="https://www.microsoft.com/en-in/windows">Windows</a></p>

<p>Running <code class="highlighter-rouge">code</code> <strong>everytime</strong> from it’s folder is too much work. To minimize it, we can <a href="http://askubuntu.com/a/616082/219603">create a symbolic link</a> using the command <code class="highlighter-rouge">sudo ln -s /path/to/vscode/Code /usr/local/bin/code</code></p>

<p>In my case, I replaced <code class="highlighter-rouge">/path/to/vscode/Code</code> with <code class="highlighter-rouge">~/Programs/VSCode-linux-x64/Code</code> so the final syntax is</p>

<p><code class="highlighter-rouge">sudo ln -s ~/Programs/VSCode-linux-x64/Code /usr/local/bin/code</code></p>

<p>In case of already created symbolic link, an error will be shown:</p>

<p><img src="https://lh3.googleusercontent.com/scbRBa5nLd_IoQnXnnbFZicvMfrDEsu-h282A_zpjAzLDLdOdrLuZkhgYExxOczP0c96tlYbW2nPksmELy0rnxhRzRZtzsff-zucSg4qYa7R7EeLGpjS97OU0wfpY3s0ZLol5lWydGdPqbndUaeGS72w6NzKvxrJRQn2VWx2Cf0x62_XJPzlMSROXzNHasqMGPC19tJfw5r4ztrHDDU9kIH1_LzA8Y_gEo-9UXCr8EsdtojTO0tJxrTUSdYy0Zek00ewVwtSOIQCB1_1WzNI2JgUuWR3iqbT3_UmyIzuCveE9QE89c5hFDvyNu2YhIBxlR-_zFJ6LNfM-NOLbsnvD1TQc89VoEGRmo1agL-f1iXecqQgr3cAM_alDd4XHrwQ0tfOQfS_tX8nRTeov1Y4e7uRshkljGxiV9fME5WABdFQ7yHRmKdA4txx9rN4Xh6uiFiC0YQfWdMTH3jZJPvHt9_BZVUAPh91-DnYprDuiN7k1jl6rotbUHnRbTUfM2hyvahOvglBatKaAfk4X0GPKT07xKt_-wSiCy98lhh5lhutF-x44Kr6kP9yOY6zkdpJwmFf=w722-h197-no" alt="linux error when symbolic link is already created" /></p>

<p>From next time, we can just open a terminal with <kbd> Ctrl </kbd> <kbd> Alt </kbd> <kbd> T </kbd> and type code</p>

<p><img src="https://lh3.googleusercontent.com/-gGXfrVgvd2QWSGg6ZK2VqsDkJnoSI2Sx5reaCgGBrWSuXM79e63Mj9PKRuVksDKZpuPuP7V2o0QQi_xc0a-CtIJk4q3UObOVxPNISLD2MnPagwwtng8Ew7ZKgiu7UDHg_v5opKgqPerdHnFUtgjydPm_eo0CyluiwW6uP3h4jaaXbLtP5mynOMwly9VPt3iEzeQqeYJnU1XGY9ivAEOuj5Q2-h7lM4bNPZRmANgtnDfZMRO6sMh3nlZz1Wuu_Pdnp2qldHJlksk1hWrOkt_sU3uBseMq0TrCAFX5LP2TbQYfifjEJpfAi3lHvDn6M8SX20_9GmHwjmuA1w__GQASr4KWqvF4vahquBwuDPeMORF_cRpDyhVZ_pyX1Qk4lVwlXXrXALnI4fEYpvZtekRLzKf0cyYqbS69UKJpLWodUtk8a9SSMFTbwcg_Q3bIwBkkKNd7NkDcqqDH9ODA0YztSE5364oHnlIV0XHEqm7tH1otALMZ84FmcZLbAIbbz8JaLw7L0ZoGzjU3Nti86ry65YtK2_5ba9l2KsldC7H_3uGfqJxLIYLSAskYAg5GM1OTfUz=w722-h199-no" alt="open visual studio code on terminal" /></p>

<p>After installation, <a href="http://stackoverflow.com/a/35031584/2404470">make sure to always run the <code class="highlighter-rouge">dnvm</code> and <code class="highlighter-rouge">dnu</code> commands by adding to <code class="highlighter-rouge">.bash_profile</code></a> using the below commands:</p>

<div class="highlighter-rouge"><pre class="highlight"><code>echo 'source dnvm.sh' &gt;&gt; ~/.bash_profile
echo 'export MONO_MANAGED_WATCHER=disabled' &gt;&gt; ~/.bash_profile
</code></pre>
</div>

<p>Verify that commands are actually added:</p>

<ul>
  <li>Go to <strong>Home</strong> in Files explorer</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/qNKdbe5SLANvFBO35_1kqJA4R424zia1zgSYAsMYZsig9fWVVuP39ih18XAkWrnsUeRNndMH-nHlWEFrRF15kc1zBEHSdPjX6xCN8hy1zbUzlgIpjZPVXfk6X1ymCE53CBrVfoZD5agsXdl5Nmf8a21lfl1CwZWgW1l7QA2RNBFipI3yf24WPvzipXM-p0i2YnBm1MvbTQK71jxsSJB9oYow8iFujo-rF6lX0Gnefn7vfamJwFjm3MOyXcOn4RMK7IK4SNZ-jhUE_VwNWKhBTCqE7l9Xw-ulG_zcJyWzlAYVRFq-P0luL6mvSo9nhfN9HWlUUWSw0k8pxl0bg1bZO-I7tZJt5klVr6yfp8RNp_F5GoEOWkxCdL35-wXu7Wcs8rtzRSPkMylccEvrjLFl8fdMtV9dO2LTk_32cr8IEmCLk64sP-97sqrTEP_OI17zgTAxp2xBPa1st2ldAc2eHXHymzpO1bHInpx1yppzovI9Cv4V1AwaGOAS2OZ81wwlVcXDyfw8_LI02va4AaEZH8bSfSL_fs4fAQzbYeLEVshInrQc8_4xl06QbgtZP8a-x2sT=w88-h241-no" alt="Home in file explorer" /></p>

<ul>
  <li>Unhide hidden files using <kbd>Ctrl</kbd>+<kbd>H</kbd></li>
  <li>Locate the <code class="highlighter-rouge">.bash_profile</code> file</li>
  <li>Open it with <code class="highlighter-rouge">gedit</code> or your favourite editor</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/up-4rd2-wzt7vC9ossJ0RZADJFhQ0NwOqMkQOrtRdaMky6HIOyPnKGhhUbmm80bEVoJPK45yHn0tyCRDJyvwbls8ASHsUXNJKgs3CQYeVE17StRPtTNjd_UbE8W0zZ3eKn9KxIzzgiu0rlXtjEUvwlItlcs1Zi_PvQHUyBkQbRUdGS62GZHdoDGr9AAUff55wsi9eaoAuHGJYlyuKStqH0loYS2Xv8MjroDqkZTJuAVem0e3VXJYYngH_7vVHPJqutoYKA3_7ClEoo454MiCjvbuBAXJdyf1Ou09fZ9tJAXmDQIgxcUrSk4HfqZs62GeTNaPIv2LBlcN2f9E6ZOQaTVG61ubBIdTt2TTc-SuwP6XEIv5eD3T9-ADKOBK5q2iQDpDcpLzYhT-ve0KC2Gg2MOpHSootqN_gpjEVtWMqWcg_YfBQlfX8hSpbQ2k8iF8ZsTg3-VwEnZAbwRtZ_BgKP92crNKT3qtfIKw-ongOgErlVODHnulaqw4ZysAk1QmqFNtJuTnEOh_WMRKQhzNM-erZiJgZIR6CAPDPOE2ankj37d-owAxnbz-XPmB0dgmjUUU=w665-h277-no" alt=".bash_profile in gedit" /></p>

<ul>
  <li>Locate the below lines:</li>
</ul>

<pre>
<code>
    source dnvm.sh
    export MONO_MANAGED_WATCHER=disabled
</code>
</pre>

<p>Alternatively, <a href="http://askubuntu.com/a/261902/219603">use <code class="highlighter-rouge">cat</code> or <code class="highlighter-rouge">less</code> commands</a>:</p>

<p><img src="https://lh3.googleusercontent.com/uTHD-VFvkelKxKwrETcCHGlW5CzqhtWlLXmuiotBAplc_xKOrqsPKb9l2yKat5uILtQJMCd2twI9CXQ_fltWzZv-9xnObT_QpTvjD1WFzdoirsrh-IYu1NHhV0jnXvxMAdZ03li97GFmnyRPWnvK1WAiXt4Zi3FPaQDrkUv6c-ld2sprOivOz--wViw9jxYxL89X-J3PDyNzfHAdUrcxiDces01vG4k7VvWyjymQUcUVxMhJXQZRH7EW55Kgv3f-8HzCeqW7TZdcSActhBal8KPv-IFOA5qTBU32qxLkatf0sAmELW5PLZTPr603oeHkwCnPDZQqtWlf2kk1ScPlON8UkPq1KfcyuYu88Hs5lEXd2My2ZdS_SE-aj3xLCJc--NYxOhsIYOu-zPi_O8vjcMHRNU2MG-mZx_9AbKtTjG1o_dgPtt_VzXX6foILuYsqpwTKTi_SvPWWdM59jP3EMMudpfLFFb-TX10eQM2DK48hrScwfMB7p87HdR6Mm81RIqwnNHLjMpWoE6guT4PwBgVz-q7wAP1PSzImmYMOiRJ_ix49XyKKLQEcjuEvRBY494c8=w507-h203-no" alt="using cat command for .bash_profile file" /></p>

<p>And VS code is ready to use:</p>

<p><img src="https://lh3.googleusercontent.com/RTMTkA9XdbBo-mzjSGfYSaX0vox9NwlgVgrb7nFV7mGN3jl-tH1kAeXTJ2_CCvonp2xi4xUrE3FC7N1JPozx3NYYXakLno4BPrr0oRfVoHSze7bGyHkeSqd8Pfr_jomLLoLB-GNPHf2cWBrdwoghBoM63YUQtIcpA8ssO98wNY9aEiz7HxIUB0nsrrDXaJ0jUYk3Rtu4fS_FQ7_ETuAv0lRQ72twH6FDBVeTPOSvZlb1xdQpdkyd-Ise3EuszMy7hzQgPI4_cU_Ah8NCeD4sLb3Qq9d6M7TSe8FgGMo8EOW3s3j-a-noagUysJhF6i6-UgUUfIz1L_f2fKA28eN2oO_-QeBuKJ-Qfh9tGZzEx4cFMiTDhWJALPcJKHP8g6USLQ3gzBAUC2Pw_zBL68RMMoeeuQDv5VaJWMWPzNQmsLLgQipaiL-a1Q35yiJtNLMZDQPOHup4aFxWm3bvyhkFQi9V9xvdtZLeUingqKCgSvqgKZkDqhpgqTuDzQYz1rs-7dg9vYieBkZh1ru2QHq8Jj0oJYW_2B7Q3HI7S9moGESX8CzF6ymfXpuKcmhqouxMajQL=w1114-h637-no" alt="visual studio code welcome page" /></p>

<p><a href="https://goo.gl/photos/Mg4vCPgbdUGFsCrm6">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-vs-code-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-12T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-12T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Installing Mysql on Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/install-mysql-ubuntu-linux/</link>
        <pubDate>2016-01-12T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://kaylesblog.com/wp-content/uploads/2015/08/mysql-logo.png" alt="Mono" /></p>

<p><a href="https://kaylesblog.com/tag/mysql/">courtesy</a></p>

<p><a href="http://www.microsoft.com/sqlserver/">SQL server</a> is considered the best database for <a href="https://www.microsoft.com/net">.NET</a> on <a href="https://www.microsoft.com/en-in/windows">Windows</a>. In my <em>personal</em> opinion, the analogy with <a href="http://www.mono-project.com/">Mono</a> is <a href="https://www.mysql.com/">MySql</a>.</p>

<p>In this post, we’ll see how to setup it and it’s <a href="https://www.mysql.com/products/connector/">connector</a> on Ubuntu.</p>

<p>I was trying to do some <a href="https://www.mysql.com/">Mysql</a>, to support a project which need it and can run on <a href="http://xameeramir.github.io/install-mysql-mono-connector-ubuntu-linux/">.NET on Ubuntu linux</a>. In an effort to get everything out of <a href="https://www.microsoft.com/en-in/windows">Windows</a>.</p>

<p>During the process, the <a href="https://apps.ubuntu.com/cat/applications/software-center/">software center</a> had some fever:</p>

<p><img src="https://lh3.googleusercontent.com/BvpG8vJouknr4XJKWvu-PGsYkJalHlFzz4bK-msxjmjvPmsmXrUnF6n2Cj9cSj1v4cGMM-MeQZVlFjPbpifHkBFMuyzGmyd095mwWbJxa50m-sPbwqERYu1JBAtjp6IWywnpz-2hziNC6mhPC9w9GgNAqFA7Yw5ZPhvev0tkEHbSHKPh61dKQTNMUlnTF_pWZWVwEVGgXw-N5gWt1ChUVCK8nR5XFfM4WUgkwLnJRxOoIb8-o1RT-TLj0138utco2EbPyW_uZ5IQV9Z23U0LXnk7Ws1jPHTNxpybqFuPa-8rG9S2UotWoU0FTkAEq-DmY7jBBUg3pidc52feU294M12b0KdwFVvHBKtSZd0zGCVkPVJsQ-tAFDVAG_UcV6D6FJ5ltfeY0Sli_e1twoOePDbnSNXg-MqbRJvgwnlWBav9mawXLdjMTvjMRhV9MylHm6WuSzSu1aaX1lrsr8pBHdvE5vFdQN4r9ObIBKI3TGz5dVmjh1sTgDv19ZC1fWUJthHCBNBq4km83y8svw4L5Yw9WA417J2SKdy9bpI1sS5J3LImXe8CmlsXrikSxRvZ953h=w1166-h682-no" alt="Ubuntu software center greyed out" /></p>

<p>Initially, I tried individual installations of <a href="https://www.mysql.com/products/workbench/">Workbench</a> and <a href="https://dev.mysql.com/downloads/repo/apt/">Mysql from APT</a>. However, since I was not 100% sure (and the above eclipse), I just <a href="http://askubuntu.com/q/151941/219603">purged</a> everything and followed the <a href="http://askubuntu.com/a/323715/219603">sure</a> way.</p>

<h1 id="setup-mysql-on-ubuntu">Setup Mysql on Ubuntu</h1>

<p>Installed mysql server using command <code class="highlighter-rouge">sudo apt-get install mysql-server</code></p>

<p>Gave password (<em>and <a href="http://stackoverflow.com/a/5683179/2404470">forgot</a></em>):</p>

<p><img src="https://lh3.googleusercontent.com/5psh3R9Fji2_bSKk4nPiA7u2kqN37rMV5l4Be-Ra_WamRh01SNvu-CapGsN9UZgfyNbw1-DpkNHAZreDL-1e_3Z_bSxfjGmiMoc5VihcbrwS7_rB-MVKGUEZUkg5qlYJBbOrvWh1GYwBDaGRylvcxeg-txyTlPx8n4oO3nE_-lrLR0GmNyxkK5vLdmIBaJemWlvXS_7tdcA8G0Dx2xAx1qyWdi3-S7MI-GEZU1DDQe2Pry1vt-3FjqDIJgtUeeX3LpwETk9v9Fx0tqvAbRqwjbvb13FAMKPHqLcrFlgu_VgJ_iBVAGfzubczs9bibmZw2VC4dX2msRLYSxZfbpvbrpW7TTs6vh--21SAjmREDHT90vu_FKdVj0N69yMiQQpXLQStUaOFmliMAVBCTNxhmS34lJ3wJLS9K5PGoISiPB-JweQxGgqgFgIR-wMBusS9f0P7T-I4zktk_5FyT3hyA2Q7-HA6VwXrOXrtxwyeMPZOCAwWhkyiFDW5GWqxtFRHTu8BeFdrOBGvfzxEa13hiOEKH4THU_yoBXqa-0UfeUxYp6ByFwd3ylHXTEtshgshXuXq=w722-h462-no" alt="Enter mysql root password" /></p>

<p><img src="https://lh3.googleusercontent.com/5psh3R9Fji2_bSKk4nPiA7u2kqN37rMV5l4Be-Ra_WamRh01SNvu-CapGsN9UZgfyNbw1-DpkNHAZreDL-1e_3Z_bSxfjGmiMoc5VihcbrwS7_rB-MVKGUEZUkg5qlYJBbOrvWh1GYwBDaGRylvcxeg-txyTlPx8n4oO3nE_-lrLR0GmNyxkK5vLdmIBaJemWlvXS_7tdcA8G0Dx2xAx1qyWdi3-S7MI-GEZU1DDQe2Pry1vt-3FjqDIJgtUeeX3LpwETk9v9Fx0tqvAbRqwjbvb13FAMKPHqLcrFlgu_VgJ_iBVAGfzubczs9bibmZw2VC4dX2msRLYSxZfbpvbrpW7TTs6vh--21SAjmREDHT90vu_FKdVj0N69yMiQQpXLQStUaOFmliMAVBCTNxhmS34lJ3wJLS9K5PGoISiPB-JweQxGgqgFgIR-wMBusS9f0P7T-I4zktk_5FyT3hyA2Q7-HA6VwXrOXrtxwyeMPZOCAwWhkyiFDW5GWqxtFRHTu8BeFdrOBGvfzxEa13hiOEKH4THU_yoBXqa-0UfeUxYp6ByFwd3ylHXTEtshgshXuXq=w722-h462-no" alt="Re-enter mysql root password" /></p>

<p>Set up <a href="http://askubuntu.com/a/183777/219603">terminal</a> client using <code class="highlighter-rouge">sudo apt-get install mysql-client</code>, which can be accesed as <a href="http://askubuntu.com/a/548703/219603">root</a> by using command <code class="highlighter-rouge">mysql -u root -p</code></p>

<p><img src="https://lh3.googleusercontent.com/Hp9pT23KFMfpiAHHL2Lrlr-1IomrG5PPro1IcLrTd8lBgt_WVAxGYFRMicUP8cbTmk14J2y5gxRIZkdXqCEaJ5w0INd2QlCrF0tcknlbbQ4n1_9t51M8-H5KW5jiKuUuSbz-1rR5HWPW7BQImUO5LQSheLSt09gjMoR7q6xm1RL0jGqB_gIDoHriuhOiVv1MJO2Sa1WAOjQKuMpbCzaU6KdRcm-tddlh9Y9Xw1FCjcGq3CW13SQ5Sd_Pccu6J1u6Td2pcPIyK8IX9jzI7oL30--EZ6thAS3Wf65bHFw9Hlfy1Lt8xsBwAS2U5CE5nR9CWJEZPushJwyE7DlCksCWkrgC08yZkxGDCyegv6Uop2EtBNi32i15ayj25HtmVko8LVxqE3RELXAbCg1bwHOCTZZSFKJejRT7LydijQjLXlUcRMHxRlv_nXOQDhvfXd3zAC2whtilXfivvwkJyF2ec2kyFsaTUwCyPxkK3tjurnsMubALXk48-_2_lMvJwX8vAvTf03V_rNTBUo-3iAPc6-mkEiAbdbBiJiwxMQ_qnazjXfpmNVWWcMHTnGWoo-w9HbAI=w852-h339-no" alt="run Mysql from terminal" /></p>

<p>And/Or from <a href="https://www.mysql.com/products/workbench/">UI</a> using <code class="highlighter-rouge">sudo apt-get install mysql-workbench</code></p>

<p><img src="https://lh3.googleusercontent.com/2Tb-zqVp5nBgt04cTTjT1hUNnAqG8qxyf2wo8PSUYUdsTR4HC6GzIKW6S-Ld8wDWTJIG74es8XR5NcXAs8qTVEgV5gFFW5Dz_oB33A6gSnJXSxcL3u6olxqe0t_z9XzgcdHCg1Zl9w0UY9IVj-MVbGpSnPjwamoYtyOU6zQzKHym_3rwXeu4iUr1alY3D_mk9DvaxKc7TGPEhYf44EXR-Porb0QsmQ6Z0qWr7aCtw8y995VsAq9QbH4XCCqLfORmLfBpR8lqC0N_eqzgFwIwl7pdkC-vAZvaKhGOzt2OtYu2x8tAOE3PpuizYMy0LNTx1qcvizthrQMFsczM7ObibZJfUrAgl2R9duZo7XXG1y0Xq8VvvuipvuXnlWIzLG_xjpRGrs7Um9E4guBKeveZi4hH_v0LVSOEnKEUc-CJi1iU-6_Y6bzpmhU3WNokvDE1dx1DixIBVBN5dpjh-D2fqnWzYqSCEuzQz7RVYlBybDU1alWo1zqUii0S6GZFIlTTXLPbxYUG0lr-vP-P952O7lvRVx7z6Vookb30L56mH6IC6oja57x6ewRAif9UOxncUDbB=w512-h293-no" alt="Accessing Mysql from workbench" /></p>

<h1 id="setting-up-mysql-connector">Setting up Mysql connector</h1>

<p>Go <a href="http://dev.mysql.com/downloads/connector/net/">here</a> to download the connector. Select <code class="highlighter-rouge">.NET &amp; Mono</code> platform and initiate download process.</p>

<p>Extract the downloaded file and move it to your directory of preference.</p>

<p>An inside view of the directory will look like this:</p>

<p><img src="https://lh3.googleusercontent.com/nN4pQvDTU2ywT4RKpV6XVdYgZ7Pw_8CS8v2LoRkDZ0vW8LpLUU_FKUkdLWbzeMO5iUZQ8_BDedjAn8aBF1gQUdnV9sp48p-LpaNJ6QwMv2LOtpn_ydwMK9EUPJwkrFo407xvGgOPGwxADctXYpvCsbcos7sl2PkO_lAdtYus-v3YwBr_C6jG1clLS_y2hJ_ZrYDdxihiCyK4WrVGhSww8tQnGKIBEmC_7EgCc6zZS8dH_PjNXIPZOMHJcOgKsUFqAr-ZXjJoBFtCY_acAVfnUelIL5lZxSbaBSFnexLwGn6CMqPmHef6W1qnlLqm0w_NE03jgftWLm5Zb-f4sRNUbTQFjEkCRFjrCEdC5xnm7J27eXuB0fKwER4OuZO6hXjpJoEEZSkHcRumubCTsmeWi7DAqUf_4WtvSvqDr_gPgdz4YpmyoaoptX3BeONJUrJIWZOoSqJq3DnUH_gJM2gHvyN8T8z97p5-vkJOXkeD-4zi2j2tMHqeTiuzSX-f4rAwNynX6oI8buzFwqK6m6tQgnIAcO0863MnGZB6oqr798le1AnxN_D6a-Stjs7uPkbJbncQ=w1104-h262-no" alt="0" /></p>

<p><code class="highlighter-rouge">cd</code> to the directory and ensure that <code class="highlighter-rouge">MySql.Data.dll</code> indeed exists by using <code class="highlighter-rouge">ls</code> command. I went to <code class="highlighter-rouge">v4.5</code> to make sure that I have all the new patches.</p>

<p>Use command <code class="highlighter-rouge">sudo gacutil /i MySql.Data.dll</code> to register it to Global Assembly Cache (GAC)</p>

<p><img src="https://lh3.googleusercontent.com/vjIRGDgAHD9RzRpZObBQhE9er3XsbNFNlTfFENzNakWBS-DQB3zU6yWiDpQenX8rxZbF7Z3jlSUrwHsFBpc5ZtKATbQcA2WLNpD7WMg6Aw8XXPLxOyBYbVzLvEtee6-ocrgzrsjyzXR-zAuqvMRVDWuYC0KsxKouP0uWBpwoZL51P0kR-mkzlu09sIQ_AvEC2vOrT1ZNFwa9EMewbWChOrZdkSFtuDRA6-vTl3yY8L9vYAHQDwGtmmDmAr3t-rGK5-UO0GT7COUcjQyWP4uvNUEpkZ2EASZnxZONQSCb8J04wkDk2y9TlGPfOAomEmiQVzynE4CeFzkIxjKhz-L9PZTceOUtvGqQmXasauhhV9WUV6WcLwTwi__eSJDWrcq5953-sb3RnpWvumaQRIQQx79o4-UnX7rzCraET1eRZYMlIw6kFGlBpWVjBd-niCSQXc03yBMfDOFr4b10Rmc5580JCnDMj17llBgcPbY5jDbKMfc3u3RSrLXZ4izTG0-98A7qeMwPv3Rl0ZC_E93MjGdGiMRpuTxt84YBIqpOB0KPaVCSgfx7t5l2_k4DsE-Z2Yg3=w722-h180-no" alt="1" /></p>

<p>To confirm registration:</p>
<ul>
  <li>Go to directory <code class="highlighter-rouge">/usr/lib/mono/gac</code> by using command <code class="highlighter-rouge">cd /usr/lib/mono/gac</code></li>
  <li>List it’s contents by using command <code class="highlighter-rouge">ls</code></li>
</ul>

<p>You will find <code class="highlighter-rouge">MySql.Data</code> if the registration has been successful.</p>

<p><img src="https://lh3.googleusercontent.com/ImIP4NdoCwBJPVb7SxIfjS0jJr2CcW34JayIXGDzYY9rmhkEOM8iF-h3JBfy1cTmJ7YLIZbw0CE_3oZnov7m0Vhh6l5Gk8BzH4eASb-yXBeHNBolMVBDPpxK9MFN3ILzIsPkSrSJShrKsRLZKoxw7FMiXW7l_4l9bbDz2phmJC7u-rsJ3_9TWUo22cgx2tog2kcKEkrKM5bUA-GJsfW9kFmlmZ_SBtvUbeMyuc9TT3Pr5eKanW3EvIPXylIaIdKYF4b51qlExbVcQmI6OOAzVLwUs20zmqaBI9WQOwPaHwtHerbqh068p7fzfH2dz1hCj2vs7kVMpYcQst2YD2999vouJXqzV1DN0IkU1qRMoVSKtHtD69a5c75KCBWALctOSaMUo-XDnNHmm4qX2TfZewD_4PpE9FGdv8XhAFcBcLrirK49th35UCEYUgs-LUIHY_PN0SRqx4SM_31E1pvuYcyBtHYdzsyvvLMnms3eLmCtU_kxp2pKLkIJLF81WLtQ3ZegzoX7zC5U2kQOIGPoQb6p-HPyEUlGCMt1ruKCRGfI1DAzVcrb4jp-Wb_hAJf23RvO=w722-h138-no" alt="MySql Mono connector registered in GAC" /></p>

<p>I tried following <a href="https://dev.mysql.com/doc/connector-net/en/connector-net-installation-unix.html">official installation instruction</a> but <a href="http://stackoverflow.com/questions/34357752/how-to-identify-javascript-undeletable-properties#comment56457971_34357842">didn’t found it perfect</a>, the above steps were tried on 64bit Ubuntu 14.6.</p>

<p><a href="https://goo.gl/photos/A3gzYoWUq2LDBq2Q9">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-mysql-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-12T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-12T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Getting started with .NET on Ubuntu Linux]]></title>
        <link>http://xameeramir.github.io/configure-net-ubuntu-linux/</link>
        <pubDate>2016-01-11T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://pbs.twimg.com/media/CPdDZ2XVEAAgIA6.png" alt="MS with linux" /></p>

<p><a href="https://twitter.com/sjvn/status/646381868133273600">courtesy</a></p>

<p>Since, <a href="http://www.asp.net/vnext">ASP.NET vNext’s</a> <a href="https://dotnet.github.io/">open source</a> <a href="https://dotnet.github.io/">.NET core</a>’s <a href="https://github.com/aspnet/Home/wiki/Roadmap"><code class="highlighter-rouge">1.0.0</code> release is nearby</a>, I was trying to get my hands dirty with <a href="https://www.microsoft.com/net">.NET</a> <em>outside <a href="https://www.microsoft.com/en-in/windows">Windows</a></em>.</p>

<h1 id="install-the-net-version-manager-dnvm"><a href="https://docs.asp.net/en/latest/getting-started/installing-on-linux.html#install-the-net-version-manager-dnvm">Install</a> the .NET Version Manager (DNVM)</h1>

<p>First install <code class="highlighter-rouge">unzip</code> and <code class="highlighter-rouge">curl</code> if you don’t already have them</p>

<p><code class="highlighter-rouge">sudo apt-get install unzip curl</code></p>

<p>Download and install <a href="https://github.com/aspnet/dnvm">DNVM</a></p>

<p><code class="highlighter-rouge">curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/dnvminstall.sh | DNX_BRANCH=dev sh &amp;&amp; source ~/.dnx/dnvm/dnvm.sh</code></p>

<p>Use <code class="highlighter-rouge">dnvm</code> to verify installation</p>

<p><img src="https://lh3.googleusercontent.com/qQFjNyFUZHwM4wj-5hr4XLrUEzK97CijVOC47dYXqBizF1xk2tUEoI8p6SfG3EAoCfwjJWYpsiRN4PWCTtiy8hI2Sf5M40zGVraTt-RAQ7oUrAVwse0rX5ZupCRnQSuDWhQCKKoxMQhCqFOJKZfJsez1jSyNgJU_jyZYOQvWsOWya8D-YelZ0cSfsa2ieYYc1rGWaarfuSpRfN_zRZfcUrf0YEivfXU-qM8XZMGjrYIrUWO4AiopnD6ZrEVtqO7-r1jj4iJvN7sBUEUyQSOorevyEPXDXOe3lqOlgmsxGY5FFPmYc51NZnc0Uw96YCGT1VmHgdsnWf1Opo5GUSBpjme1tKXU3wrAY1KSSwFE7QBjs4JKGRpUx5SmuVPKZaSynti1jM8rxyA_1TBOfrowIh5zdm5tqSyz_p6bfP5613XQLTCKFftw2a2R5Zh6SQkCXjhV8NjAuMb_8ukQw7qRWsv1APSJs_5ap8rKarND7Jr7L8geX9bCk34EWQzKsGdP9kBvX166cwpP9cZmnxbddxsEOfrq5YQ1uabmktDGPySJbG_cDMgab5-xk4BoSimN3Mt_=w1086-h395-no" alt="verify dnvm installation" /></p>

<h1 id="installing-the-mononet-execution-environment-dnx">Installing the Mono.NET Execution Environment (DNX)</h1>

<p><a href="https://docs.asp.net/en/latest/getting-started/choosing-the-right-dotnet.html">.NET core is still immature</a>, so for the time being it’s better to at least get started with <a href="http://www.mono-project.com/">Mono</a>.</p>

<p>The below <a href="http://askubuntu.com/a/607055/219603">commands were tested on a 64bit laptop to install Mono</a> on <a href="http://www.ubuntu.com/">Ubuntu</a>:</p>

<ul>
  <li>Add Signing Key using <code class="highlighter-rouge">wget "http://keyserver.ubuntu.com/pks/lookup?op=get&amp;search=0x3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF" -O out &amp;&amp; sudo apt-key add out &amp;&amp; rm out</code></li>
  <li>Add Repository using <code class="highlighter-rouge">echo "deb http://download.mono-project.com/repo/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mono-xamarin.list</code></li>
  <li>Update repolist using <code class="highlighter-rouge">sudo apt-get update</code></li>
  <li>Install mono-devel using <code class="highlighter-rouge">sudo apt-get install mono-devel</code></li>
  <li>Install mono-complete using <code class="highlighter-rouge">sudo apt-get install mono-complete</code></li>
  <li>Install referenceassemblies-pcl using <code class="highlighter-rouge">sudo apt-get install referenceassemblies-pcl</code></li>
</ul>

<p><a href="http://askubuntu.com/a/423556/219603">Verify installation</a> using <code class="highlighter-rouge">dpkg</code></p>

<p><img src="https://lh3.googleusercontent.com/rdfvoQiVOeNtzC1cCaYe3SpkGZgzaSKZXNpyidq_kEwRWUPJ467gjZrDnekSn3_MxWY_zaRHoNOg4-rI5olRSICZWlb8RfleqAVEHnW1UO8Dof9X6r3aCSQl0XHCgv_ov0rVigTfU_uJprLcRFk1-d3AGCx3TXuMAPCGWB8_d6leH_WxGaCbYRm-JF8h_q0kTMnL9LTcelxgIADYtOXJ_7Q4uQ_t96JU2zH7K15N5NPXjtbDo5NzOgMD0DY22DRICWxIk7Tr1OYrdQgJL_hzBWnzoH60fVacEidqTKHZ73xy5vkdBgRyXhC9mnLBL9oA91An1FKi1AqTt7B04anVVYSfTa5WhHKJZOwYdlly8teswo9JNFrRUB70ZdbJd-3TcFh6J-1aOmMHsAJ7pJbE8DOD26BsyQnDmhgAdYt-nHd3ciOyEjCCbWjTa8vRv1VfXeyV3e9Pic2gBPXWfqxPCWl864mpQHSrFXV4Tsf8xfKGXC0FV7SmuzbWCSy63U_7z9jjQPDhCxbiTMkmJ4TL9djCp0XWbU99GYh0BenRAFA1_EJ2vOeeMpk0UgQRvIaqCvMQ=w1301-h480-no" alt="Verify mono-devel, mono-complete and referenceassemblies-pcl installation" /></p>

<p><code class="highlighter-rouge">apt-cache policy &lt;package-name&gt;</code> can also be used to verify installation</p>

<p><img src="https://lh3.googleusercontent.com/AmMeUpHLkGAgDVSWKN_dNiNZR8_leieM4OfDwqyXVtjWZ_W-HO9xu6KQ6h3z98jgCEsBWjSf-rffV8FMoUoaKi43RmPniYBtig8xeAr-NSNP9m2GYsnAgmUDz_zVDiqv-pzOsw6PJgXxR44YSoxMD9Eb3rYQ12fspmeDbLV3gTeW4Jxssp2wv8JWDyF3ArzjOGTHWhaOvee6MtfmnPnFbz27nlqjZ87vio6eClPpYw29FKmNm7Brla2Y2b8vtqpyahRpSP_r3LLegqepR_GYzmHoY5OH0IrBEO4kdhHc5z21y-wExtWVsWlBOtwuTr16_062t4fslB57VX-zXifb7Dxt90VnAcIGMUMwDhzhUe8Xb9WXEhAv5yKtMetySq4j2w1Ng9rr05HEHGpBZhkE4XHE7Wn3jpitS8Z4WcHpWX63nJYaHpY9ALumz-podZODkdnlVZuJx3PMUxve28WZ5_lrHksmL0Bk6BbTd4REbv_SnxRE-B7XmI0aW8WdSp3ptyKxwZHDiDFRUtZpIPbZu2gFe3UaNWzJXREb3JGvmdnrEk74q94RUo-BHj7WkwmQEfns=w722-h325-no" alt="verifying mono-complete install using apt-cache policy" /></p>

<p>I was having troubles setting up Mono on my <a href="http://releases.ubuntu.com/14.04/">Ubuntu 14.4</a> machine, I was not able to get <a href="http://www.mono-project.com/docs/getting-started/install/linux/#notes">required <code class="highlighter-rouge">ca-certificates-mono</code> package</a>.</p>

<p>So, I had uninstalled Mono with <code class="highlighter-rouge">sudo apt-get purge mono-complete</code> and followed the above commands.</p>

<h1 id="installing-libuv">Installing libuv</h1>

<p>To <a href="http://stackoverflow.com/q/34649424/2404470">host ASP.NET MVC 5 apps outside IIS</a>, it’s necessary to <a href="https://docs.asp.net/en/latest/getting-started/installing-on-linux.html#install-libuv">install</a> <a href="https://github.com/libuv/libuv">libuv</a>, follow the below commands:</p>

<pre>
<code>
    sudo apt-get install make automake libtool curl
    curl -sSL https://github.com/libuv/libuv/archive/v1.4.2.tar.gz | sudo tar zxfv - -C /usr/local/src
    cd /usr/local/src/libuv-1.4.2
    sudo sh autogen.sh
    sudo ./configure
    sudo make
    sudo make install
    sudo rm -rf /usr/local/src/libuv-1.4.2 &amp;&amp; cd ~/
    sudo ldconfig
</code>
</pre>

<h1 id="install-monodevelop-ide">Install Monodevelop IDE</h1>

<p>From <a href="https://code.visualstudio.com/Docs/languages/csharp">VS code docs</a></p>
<blockquote>
  <p>An example of a non-supported project type is an ASP.NET MVC Application.</p>
</blockquote>

<p>In this case, <a href="http://www.monodevelop.com/download/linux/">MonoDevelop</a> can be used</p>

<p><code class="highlighter-rouge">sudo apt-get install monodevelop</code></p>

<p>which supports ASP.NET MVC projects.</p>

<p><img src="https://lh3.googleusercontent.com/lvkPVzBw0KNyohIJK2aWPjGurWsspstj-7v9ofUq-qt9JY-pszXOpccLsMj7_S69HTxjsM6rd-tt3eWbSKaRif0DAzwQUDKOg5o6iWEZCKkjbVQDITGao-J_clWkcXn8uj2oysrQI1Ixh17jr8mvlmsRjHpIgx9897U-wEqT3rfkI1Cfb9pfNjjK905kv2JWgmr9aZni5YhET87kkbNAjvkw7hBISGw330RViDydD-ev_Z_CBc5IeibYHefs2MBBev6cdAYwC2JPp25KgaxOLXiPyLGbQG90Cf8d3VgYtvDp1gA9itFnry_mvaPHakYQuy39mkuB5mZUuOi_0aovJwY6pUigFxxe66B4OQeJgO93_87YS-XGrd7d2evWzy7KY28OOsefafzaFN6IPQP31451p6KaQDmwwlC2H4sWNFL3aULsEYmmjqS2X6AyJGjvgmubAz8C9_94med7gFwLgzyIBiK2ORQ6o5cPEHzo9mODIqdmu-rCT1afazvsFSbrjMUOMot0nr77ABoLdwrVsnLhEAUiPZ3eC-_k3A9wgkW2mPg0AaZ7oGmoGn3HrkT7b3l_=w901-h660-no" alt="Monodevelop works with ASP.NET MVC projects" /></p>

<p>Phew, it looks like everything is ready to see .NET in action outside Windows.</p>

<p><a href="https://goo.gl/photos/q8uMU5v4DuyS2WVx8">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/configure-net-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-11T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-11T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[How does the SQL Server Query Optimizer Works]]></title>
        <link>http://xameeramir.github.io/How-SQL-Server-Query-Optimizer-Works/</link>
        <pubDate>2016-01-10T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://emotimo.com/wp-content/uploads/2015/12/SPEED.jpg" alt="Optimization" /></p>

<p><a href="https://www.keyword-suggestions.com/c3BlZWQ/">Courtesy</a></p>

<p>At the core of the SQL Server Database Engine are two major components: the <strong>Storage Engine</strong> and the <strong>Query Processor</strong>, also called the Relational Engine.</p>

<ul>
  <li>Storage Engine: takes care of reading data between the disk and memory in a manner that optimizes concurrency while maintaining data integrity</li>
  <li>Query Processor: 1. takes care of devising a query plan (what algorithms/operators to implement) by <strong>Query Optimizer</strong> 2. execute the query according to that plan by <strong>Execution Engine</strong></li>
</ul>

<p>The query processor does the following things:</p>

<ol>
  <li>Query parsing</li>
  <li>Binding query to objects</li>
  <li>Generate possible execution plans</li>
  <li>Cost-assessment of each plan</li>
</ol>

<p>The Execution Engine does the following things:</p>
<ol>
  <li>Query execution</li>
  <li>Plan caching</li>
</ol>

<p>Parsing translates the SQL query into an initial tree representation. Binding is mostly concerned with name resolution.</p>

<h1 id="search-space">Search Space</h1>

<p>We define the search space for a given query as the set of all the possible execution plans for that query, and any possible plan in this search space returns the same results.</p>

<h1 id="generating-candidate-execution-plans">Generating Candidate Execution Plans</h1>

<p>As discussed, the basic purpose of the Query Optimizer is to find an efficient execution plan for your query. Even for relatively simple queries, there may be a large number of different ways to access the data to produce the same end result. As such, the Query Optimizer has to select the best possible plan from what may be a very large number of candidate execution plans, and it’s important that it makes a wise choice, as the time it takes to return the results to the user can vary wildly, depending on which plan is selected.</p>

<p>The Query Optimizer must strike a balance between optimization time and plan quality. SQL Server does not do an exhaustive search, but instead tries to find a suitably efficient plan as quickly as possible.</p>

<h1 id="assessing-the-cost-of-each-plan">Assessing the Cost of each Plan</h1>

<p>The Query Optimizer needs to estimate the cost of these plans and select the least expensive one. To estimate the cost of a plan, it estimates the cost of each physical operator in that plan using costing formulas that consider the use of resources such as I/O, CPU, and memory.</p>

<p><strong>Cardinality estimation</strong> : a query plan’s cost estimation depends mostly on the algorithm used by the physical operator, as well as the estimated number of records that will need to be processed; this estimate of the number of records is known as the cardinality estimation.</p>

<h1 id="query-execution-and-plan-caching">Query Execution and Plan Caching</h1>

<p>Once the query is optimized, the resulting plan is used by the Execution Engine to retrieve the desired data. The generated execution plan may be stored in memory, in the plan cache (known as the procedure cache in previous versions of SQL Server) in order that it might be reused if the same query is executed again.</p>

<p>However, reuse of an existing plan may not always be the best solution for a given query. Depending on the distribution of data within a table, the optimal execution plan for a given query may differ greatly depending on the parameters provided in said query, and a behavior known as <a href="https://www.brentozar.com/archive/2013/06/the-elephant-and-the-mouse-or-parameter-sniffing-in-sql-server/">parameter sniffing</a> may result in a suboptimal plan being chosen.</p>

<p>Even when an execution plan is available in the plan cache, some metadata changes, such as removing an index or a constraint, or significant enough changes made to the contents of the database, may render an existing plan invalid or suboptimal, and thus cause it to be discarded from the plan cache and a new optimization to be generated.</p>

<h1 id="recompiling">Recompiling</h1>

<p>You can force SQL Server to recompile the stored procedure each time it is run. The benefit here is that the best query plan will be created each time it is run. However, recompiling is a CPU-intensive operation. This may not be an ideal solution for stored procedures that are run frequently, or on a server that is constrained by CPU resources already. Another thing to remember is that the plans won’t be stored in the cache, which makes them harder to find if they are problematic.</p>

<pre> <code>
ALTER PROCEDURE Get_OrderID_OrderQty
@ProductID INT
WITH RECOMPILE
AS
SELECT SalesOrderDetailID, OrderQty
FROM Sales.SalesOrderDetail
WHERE ProductID = @ProductID;
</code> </pre>

<h1 id="hinting">Hinting</h1>

<p>Another option is to use the OPTIMIZE FOR query hint. This tells SQL Server to use a specified value when compiling the plan. If, through testing, you can find a value that produces a “good enough” plan each time, and the performance is acceptable for both mice and elephants, this is a good option for you.</p>

<p>However, understand that you are bossing the query optimizer around. You are telling it what you think is best. The biggest drawback with OPTIMIZE FOR is on tables where the distribution of data changes. The faster it changes, the more out of date this hint could become. What if the value you provide is not optimal in a month, or a year? You need to have a method in place to regularly review and revise this.</p>

<pre> <code>
ALTER PROCEDURE Get_OrderID_OrderQty
@ProductID INT
AS
SELECT SalesOrderDetailID, OrderQty
FROM Sales.SalesOrderDetail
WHERE ProductID = @ProductID
OPTION (OPTIMIZE FOR (@ProductID=945));
</code> </pre>

<blockquote>
  <p>The reality is that, even after more than 30 years of research, query optimizers are highly complex pieces of software which still face some technical challenges. As a result, there may be cases when, even after you’ve provided the Query Optimizer with all the information it needs and there doesn’t seem to be any apparent problem, you are still not getting an efficient plan.</p>
</blockquote>

<p>Sources:</p>

<ul>
  <li><a href="https://www.brentozar.com/archive/2013/06/the-elephant-and-the-mouse-or-parameter-sniffing-in-sql-server/">The Elephant and the Mouse, or, Parameter Sniffing in SQL Server</a></li>
  <li><a href="https://www.simple-talk.com/sql/sql-training/the-sql-server-query-optimizer/">The SQL Server Query Optimizer</a></li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/How-SQL-Server-Query-Optimizer-Works</wp:post_id>
        <wp:post_date>2016-01-10T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-10T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[SQL Server Index Tuning]]></title>
        <link>http://xameeramir.github.io/SQL-Server-Index-Tuning/</link>
        <pubDate>2016-01-09T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.clipartsfree.net/vector/large/19673-divider-cards-vector.png" alt="Index" /></p>

<p><a href="http://www.clipartsfree.net/search.php?load=divider%20cards">courtesy</a></p>

<p>A few reasons why people don’t tune their indexes:</p>

<blockquote>
  <p>“We can’t make this change until we know exactly how much it will improve, and how it will scale.”</p>
</blockquote>

<hr />

<blockquote>
  <p>“There’s no good time to change indexes.”</p>
</blockquote>

<hr />

<blockquote>
  <p>“It’s too risky.”</p>
</blockquote>

<hr />

<blockquote>
  <p>“Our indexes are in perfect order.”</p>
</blockquote>

<h1 id="how-to-master-sql-server-index-tuning-in-one-step">How to Master SQL Server Index Tuning in One Step</h1>

<p><strong>Here’s that one step:</strong> stop thinking index tuning is a problem for Future You, because it may always be a problem…</p>

<h1 id="indexing-dos-and-donts">Indexing Dos and Dont’s</h1>

<p>Indexing is such a large subject that getting a handle on what to do and what not to do when you’re developing your indexing strategies can be difficult. You create indexes to improve query response time. But indexing is a balancing act.</p>

<p>We try to enhance query response by creating indexes—but doing so decreases performance of inserts, updates, and deletes.</p>

<ul>
  <li>Do Index the Primary and Unique Key Columns</li>
  <li>Do Index the 1:1 and 1 side of 1:m Foreign Key Columns</li>
  <li>Do Consider Using a Covering Index for Queries That Return Few Columns</li>
  <li>Do Consider Using a Clustered Index for Large Tables and Range-of-Values Queries</li>
  <li>Do Index Sorting, Grouping, and Aggregating Columns</li>
  <li>Do Consider a DSS (decision support system to balance speed of query results plus speed of inserts, updates and deletes)</li>
  <li>Don’t Over-Index Transactional Tables with Heavy I/O Activity</li>
  <li>Don’t Index Wide Columns (to avoid a large number of data pages)</li>
</ul>

<p>Index tuning isn’t something we do once a year. It’s something that we need to do iteratively– that means every month. Over time, data sizes change, user activity changes, and the SQL Server optimizer changes. Each of these things mean that indexes that are best for an application will also change. As we tune indexes, the query plans will change and it’s very likely to see more opportunities to add, drop, and combine indexes emerge. Because of this, we want to do a few changes every month.</p>

<p>Sources:</p>
<ul>
  <li><a href="https://www.brentozar.com/archive/2013/08/how-to-master-sql-server-index-tuning/">How to Master SQL Server Index Tuning in One Step</a></li>
  <li><a href="http://sqlmag.com/database-performance-tuning/indexing-dos-and-don-ts">Indexing Dos and Dont’s</a></li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/SQL-Server-Index-Tuning</wp:post_id>
        <wp:post_date>2016-01-09T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-09T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Setting up Java on Ubuntu linux and Windows]]></title>
        <link>http://xameeramir.github.io/install-java-windows-ubuntu-linux/</link>
        <pubDate>2016-01-06T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://wallpaperology.com/zombie/93295-Java-Logo-1920x1080-Wallpaper.jpg" alt="Java logo" /></p>

<p><a href="http://wallpaperology.com/14-Technology-wallpapers/58-Technology-wallpapers/5679-Java-Logo-HD-Wallpaper.htm">courtesy</a></p>

<p>After setting up <a href="http://xameeramir.github.io/install-git-windows-ubuntu-linux/">Git</a>, <a href="http://xameeramir.github.io/install-node/">node</a> and <a href="http://xameeramir.github.io/installing-cordova/">Cordova</a> one need to get the <a href="https://www.oracle.com/java/index.html">Java</a> setup done for moving towards getting <a href="http://ionicframework.com/docs/guide/installation.html">Ionic ready</a> on <a href="http://www.ubuntu.com/">Ubuntu linux</a>.</p>

<h1 id="setting-up-java-on-ubuntu-linux">Setting up Java on Ubuntu Linux</h1>

<p>Enter the command <code class="highlighter-rouge">sudo apt-get install openjdk-7-jdk</code>. Enter the root password and let the system do it’s tasks.</p>

<p>Enter <code class="highlighter-rouge">apt-cache search jdk</code></p>

<p>Set “JAVA_HOME” and “PATH” environment Variables:</p>

<p><img src="https://lh3.googleusercontent.com/p_95I5vlJR5-bDhOqtFTVBBvBDgTNxO5-JS-fIF-9CX5-KGNbtJVIwLMYwwomgECtDUwUF6JKU105VoNL8YClTZ-BB3g3ksjkSA5eBuQrue6qHwkZpZRhfb7_DntvEAU8gbR1ZBqobDI1fk2fXSEd2bzWPxckz0KHJw-CalVrj171SgEV-lToOczwXSVOnMRhnXRGRk3TyMcoVEAtqR77vQNSjRFE5z6Pd5hMwxFAZDZRP15djmJzheAHJlBtg33fNelVXFUs0SGD5d0DX2a9kOaubxkuojSu9Pqe4LwKAD3PeSZ-eUeFbzw52wrlBn7dca32cf6TYwpGOXSc5q5tlLTmRwP9EG1syRHd263VOxQYqJtTOcOe-i2UObul2QofkUuk8v6K5dn2PFxP3uWKT3VJsw3tRwm7TbKCXQt1Xu-QPxEGBmGTUdjkKjmHZhcUQwri-Up6F3gdeNVYpD1EKxisT-3oyW-hq4qGC3ZSifvI1IL4YA5yKVMVf8ZOjQbirAZQru5Q81k2K1fKmYlJLGTJORlhkl8WPw81-ulcN0AX-bClTOXebV9ejGC2pOfLXVy=w695-h139-no" alt="Setting up JAVA environment variables on Ubuntu linux" /></p>

<p><code class="highlighter-rouge">export JAVA_HOME=/usr/lib/jvm/java-7-openjdk</code>
<code class="highlighter-rouge">export PATH=$PATH:/usr/lib/jvm/java-7-openjdk/bin</code></p>

<p>Finished, now just verify the installation by checking the installed version:</p>

<p><code class="highlighter-rouge">javac -version</code></p>

<p><img src="https://lh3.googleusercontent.com/Sax04bsurKTc1u5wpYvoiv7Th111iIfwUIYpZcTHoE3Oj6m1fiaUH23ZyYFKXI0Lvj0FTqspd7tOA4SpK_k3FC5e3uVASd4qjF152FHfAkgpi9iH2kcvGu_ln3nQ5wQrIhUvkHdbLuVrAvtU5fYu8FjQJHYG4nhZQoGt0laABkC8pL9uEqtmCFUpNI2i8NOdei_je23iibWl2EKjqaAa5uTGhG3loNLXn_XfBCmG_WGBrVYaUoYpvjpMDCklkEAzOAuNo2Ca4G9X90DJsimjokCVCr8DBQTLU0I4C6LipVFCtxu2axWkYkbbNh8He7MThUe623k8e6B9Z8UnJLsGZMowJtOQ7QJYXdw2lV-olJARTMFxwiNG8I989t73O5YMkHVj51h9kqFzCmITFozQBY9yc0Bk45QttQYxs5mX0LOtU1YjtlIllhrTLdr4TWovMKE9UUtfxuzCjPLdtLHG13p8scSqgrD9yvq3DfVDxg2mMr9uQ475_W_Ds-gq9YwugRDae8knsOmXj1PmMFtwTNvmKohEw0T6ygylmh6rtCRmotVZ62R0ii9L7tjpyrRwhcJB=w670-h172-no" alt="Checking Java version on Ubuntu linux" /></p>

<h1 id="installing-java-on-windows">Installing Java on Windows</h1>

<p>Open the setup file downloaded from <a href="https://www.java.com/en/download/manual.jsp">here</a></p>

<p>Follow the instructions as shown:</p>

<p><img src="https://lh3.googleusercontent.com/onAddfX7uX0gBa5WAe0nGtBxXj_laItMy03W_0-qVGXykdB2i2jlaRiZbUuEuq9O5xMqrQU83EefkpVRTitm-34iWdxk0gKwdzvxH4xGgKJ8KkgPUIpqKuSzOn3mGTbe7KeXw126g2sw66JRSLCvte9UxWnZk472wa2Yv7QZPu1r0SIOx1Mn-0vMW5fm6F2baUk0B7QKG2UL5PsGgmQQYEIOK5xu6v-Svi2Ub2_oPWYqN6NUayVpfmWZlw2Sfj6Vnd2wh9TYK_mJbceXtNFTHIcHVCr5j2cflie4TLM9quRAi83qOqsUZQ5fgAF3mvIYfAMLxvplgaCOCMFCeOwq25dG3XKVf18Q6l4QDZ4-qZD62mewBcrr5K61NlrYc-AWUamF33-lvfg3PscPGMqh3bNU2BLzfWexUcQciNLTHOB7FeyorZTSKfrG2DD1tSKwMxPBU_Gt-u1psRq37GMGe-_kXRNDMDyUPRuby-W7BTUj-8uurbx6AiftDfbt6zFb3sYc4AwOMehn3Hz1oN6RbdBQGKiuhJb_1SChxTmYw_Kofyzq9f0YCAc3-yCF5H9imx6f=w500-h381-no" alt="Welcome Java installation wizard" /></p>

<p>Select installation components - this may be required for servers where specific configurations are needed</p>

<p><img src="https://lh3.googleusercontent.com/0rD46v_RxxBCaO4I1qxG0zSO_ezE5xopaxgIhaN1C3uzypoyt6abj0rSzunOQ-qr5gS6RgriRSFM3G7IkcPQLWHI9d-JhdaVdgTa_NXlE0Obk39uT-XKFXF6Cgb9DYehkwKnS9AbQ_chabSm02W_N4dKR54QnV8p4rSFu9biGXsCddnCZqabw8aKnOLBUbRQc4YyopXYYh4FgQwF1HIiHJKTBt1XawpQegdrOYjV7IcUztYf15MZtBPCuaDeccuk6RUZOZMbIZIiCaX47FBva-TEj88mJP2YGmKm9mjz2WSo-q9fkbiJxfAQLrrqa6hl-5_Fyql-p8s3VxROKxcL_DCxDCLgPOMT2c37_AUnArgWMqLMJyasIG3Ixs8fEiW0ml8dtuql15s5bnQq1-kFWcI9nd97znGi7TOB-VUi1YjpA816dlFrUd-QsV298zNq-lZyKymok2AA4kkwX_nk_j5Jq4IGQheq5yAOP9bxkpCFok7BUYtXAMvc27ylFlC2h-xeYVjD34bEEQC8v-dCLy2Vm8drZkHPVOPrc781dNMVRqBqiT6HP5oYa6-FzyA305RU=w500-h381-no" alt="Select Java installation components" /></p>

<p>Select installation path</p>

<p><img src="https://lh3.googleusercontent.com/JG1nyC-gEzMFxxG4LiU2_e7pZZGMD0Kx0qmsocUi2iyqE9lEHsd1Gpb01Gzuf9_wqgIqAo2IBcKeSXIu-4IEESAUxb4qUg_6fRiY19PschExFjpEw9EOkEjZMkbBd3l56n6DyZv0MNOFn8CDknFGljqFn_pEJZUe1HqHCD5gfxhKj3JpOpJvurbvrYOWHqIo8eXo90WaQ0xNIIWQYs8qFpvdmTYPP84kpVi67sgYnZdbveWBmYPVfj_fCm2y9sXm0hQ9Ee7lwRvfKubvLVOHAJZ0nDkwLuhrE4z5OWVnZCJU_6qxu-0FdSkzp5wnowPLeHSd_sBbVjrxjTMkG8xHu3u2wdEvsNTUWEqxYjswQ9iXhglgdpl44VHbq2UA7rCDotCBkf0ksV1PKS3632Xrp5MB9seC-I0h2YQJGwc8oWUyJ3-WHe85i-kX9cOneQgIhhLm7CMCcWE8Fwwfd9vBGlArzTpBIuCxY1KgV_ZBXRNAk54tQKLARgjgch3FG_p3d3UKBtshjSplm6NzpJoXWLmwyJIab8WQUYpvLPIMmRuBC6DVMAigo3C29L-sEvsY8-XT=w500-h381-no" alt="Select Java installation path" /></p>

<p>Incase you already have Java installed, a warning will be shown</p>

<p><img src="https://lh3.googleusercontent.com/6xhWhze0ce57UIjxQkV6aFBm_N8hpe4_Ym5HcMlrLwioBy5BJK7s9LyoCpgxH9o6gQ8NocQ3vt8oa9Qxq3KYCzKKxqdbHF6hKvVNmW-m0BMFQeb2fNrdY_oTNWhxJI_iD5hSann6psEepOGMnnQZotvF5SdJpwko4qY7xF0qqqTmaMGRnDINXVx3wFv55pyo84FZd2RJFiA5kZNgfCd9ygEQhbq9qctwXtd7CL331yqAV7I3mj6ZRFsCFEvHyFm6ULJN3Wejd6wjSfeDsZ04M3VjdKzZifmsnnVvWqP1FVNEtJUv-yv4hDsn5fTj3LGvUyGzdvaWNsS_oamyaZCSjghc2HAUaB7efJ7s0hJEmSBJxR07PGihaLvNVIzlj8QdsPyoXZBrLEopQifoc-3IW5dA7SjcRIH9c7UPgEkbMNV1GlOn_EgVBm8BaCju_oZj-e0EvIYCpbLjcApyzodfR5Ozz-DVVQtViTwy5w2u8hHet7k7Jb-HffCSG1cE4WRfMEH-t3C_zEfpIkd9RRsD1aHbbywA_51gAwowA0PpZZy4DMNOx5U6VtT9nI2_VFPeIDQq=w348-h140-no" alt="Already installed Java warning" /></p>

<p><img src="https://lh3.googleusercontent.com/Uu1zkojeVCKv9k8c5nwJ85m7bBDIYYgoJznu12RcAyopW3tDO-V_UWOGf0x3u1i930orm_kAu-JpoCFQpv4IryxSrTYGc53gfcFMO_slshd8nIlht_t9WKzNn2Z4sXH2_2VkXLJu6TUEhoJ7Q9Ozxj9_xmlTks0EweGR-wke5kr_uivRsSRhNIdwKX17UnuBd94PY0719glqtecRq3U8DtzMWqQTLDkY9PBGFDO8RCx--P_A1eO8sKEYmC3AeQgG2JppxZ4cqXwes2QIBKRkKwkcPn0VxORGrhUcwKQeCaOSVuYDJDLzdzylY45ZMyZiObfFdcM6YPLnGXpv7P5P7yoQ6fXYDyW2c52E9_U54OSZ3c3vsAYDd5jJnZkAHPqq6EMw3AwBhtUIxkBJ8FTkW8BEbblD1TK0WLdWoyocTWvoCMyZqAvQjVzHW7KQR93XSbHj3BwBiq422kgLPw_7p-nF3EdROZvR76SAy9r__ra5Eq6dnw-Aul2dYW1S61e0VF7xgMzdJxfk_cX9unKD1Zf1cTHgqKgBhbqZ-yBm8ULLGhx_ljJZMxKsuhvIiShGvNP1=w394-h149-no" alt="Wait for Java installation" /></p>

<p><img src="https://lh3.googleusercontent.com/SabJ0d7zFT4jRJ0Sm_jCS80K8qBqT8JI6u1o3aRVWoSxpLAg-oPUBIctEE784AUDtSvhDwrcv5ms34M6gDhDn1S-gkIvN6-VgyAGE_GSWXjofL5vbNCowiV4Rh5vZZuyM269Bg8f3frY2rn4AqG3rRKZqPjgJJvWqKjuURjNl7VFz14_qOZETJ4j_4bIQg_z0KAKjrStbnwFBzU5QpA1zMxur5w1ONpG8e4_VJzjF2h6dtdVFIAheZCYuuzavZ4z6IkuXyTz7xhYIqoRLKthn1Pdk6cN1_K8Dz0C5TqBdgjy2I_2v4ijwRBXqkVxWPxalB6BWBk_gF_KKNxedeBad6NDIjHpgKpP3SQWty3u7MRKzBCAqNjpA583QOLWUG_bPenkwaRTtr676SafpeveOWFhcK20wlw20wbIrFOhF0aBWRcEPcL9m4Bcg9LXoyHP6OpWteEPqWcFUg6x_h8cHtBv9w4LdBTkycWHrvMtEIMrCM8KTW35fcxMHLK5W0PbugjLToxHv9U1LKiLLQJHzlk89cIJQtRw6x4QHA7sszMM1o7a_LG8pda8QCs0mo7Pk3oU=w500-h381-no" alt="Wait for Java installation" /></p>

<p><img src="https://lh3.googleusercontent.com/r2FdQDI8tHDsFaJMkcTwMN9jrHMkR9jx6OwUnqm3OkQdDVToOCcuAzUkP79ynIpTS5KyISfnDk_l2f_pgMUUYq49R4_SBPhh_khfwOLogIEzOE-1klY-yVHuTWzUX57ZndqxWOBDC0SfLzqSzPNQB9TRS3iOxogszAAl6l4y5imWKpR6GxrvpT7Hke0ph1gWS8FO-C7e5vkoxwse64wv1TabNueIwszAzPQbmivlRfelENDnzTi785BA512uBjYy3K2hduB89DChBYstTapqzJFO249ZZKlX492in9STcMLz7Ug12AmHHM0K0TBBIjptg3PYTtMdQ9R5pxkN5lqoR67Rv1LDG-6djsyT-FmE3hYHOWteGkXFxZaa60zq3eHUuCCDrHapkDyllg7p4OkRH1jMTO30X3MQmq-3DYVBDfnw1BVRTiB_aL6RkIGq8-CTz_MFNCW44VMJq9tqHAgXhyemqPteAMu1vkzOYcuDBfWIZDvFi9U07MNwaSbffQZtMm4YlRfMo-1SaCZKgwR7W0HuhRSsVppB5Fcim8u_wWKIKntthQHDfXf9O5m4smLzFUGC=w500-h381-no" alt="Wait for Java installation" /></p>

<p><img src="https://lh3.googleusercontent.com/eNquPMrsiH30992DhWrUYbolTjB5SVUNsVAl03jvXjgCTzeXjk74_dQDbWvZCYgP4dMvUUfjerOvRa-tZU03KsxziSIYWT1_hxw-S_KiBMz8xvV7yQqBB5JO_IIjfQf4LU3gUJzXBbT_7g1eTWepZL5g5oat8_A-dEmbhd3HQJEMwMyvHW6ZSxXcOVt5A7zRmIjkNQymYyUeqRRtcguiGbe1G4iWNDKieWWczcr_BtWM-rOtVCJQp4IstQR7XJdhc2UxqfWJy1XbOKCN6TXmm9qTpBpnPcyFShWeFyGJN8Bwy_331IBAmkFOURegNur0MIROyN-QR-uUuADH-TJ0jAkwlNAIMNhd8VhsgZLt4keZVtnnLwyTX-Jmk1xlU2F-llUFUVZv9okypCaclDtNhzytYAz7J8wQ-vnEXD5goi8H0Oa-nknFCW6nj_9AOLNz_ZwfOfVhwpylvawSsgUTCvgy118U2B4NBox1VDN_RAxQMi5-QzXKecCHKnPCywRhK995P4OAWrGRdVs7KJ78LyeOsZIyt99ZduVjqF06f6u6qsMWNbHeyGZzXsEnqiOBp_4f=w500-h381-no" alt="Successfully installed Java" /></p>

<p>Now, <a href="http://www.computerhope.com/issues/ch000549.htm">we just need to setup environment variables</a>.</p>

<p><a href="https://goo.gl/photos/caGGuZ1UnVGxhBaq6">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-java-windows-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-06T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-06T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Installing ionic on Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/install-ionic-ubuntu-linux/</link>
        <pubDate>2016-01-06T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://www.codetutorial.io/wordpress/wp-content/uploads/2015/03/headerIonic1.jpg" alt="Ionic framework" /></p>

<p><a href="https://www.codetutorial.io/use-html-canvas-on-ionic-app-for-image-overlay/">courtesy</a></p>

<p>For <a href="http://ionicframework.com/docs/guide/installation.html">installing Ionic</a> specifically on <a href="http://www.ubuntu.com/">Ubunu</a></p>

<ul>
  <li>Install <a href="http://xameeramir.github.io/install-git-windows-ubuntu-linux/">Git</a></li>
  <li>Install <a href="http://xameeramir.github.io/install-node/">node</a></li>
  <li>Install <a href="http://xameeramir.github.io/installing-cordova/">Cordova</a></li>
  <li>Install <a href="http://xameeramir.github.io/install-java-windows-ubuntu-linux/">Java</a></li>
  <li>Install <a href="http://xameeramir.github.io/install-android-studio-ubuntu-linux/">Android</a></li>
</ul>

<h1 id="installing-ionic">Installing ionic</h1>

<p>If you are running a 64-bit version of Ubuntu, you’ll need to install the 32-bit libraries since Android is only 32-bit at the moment. Use the below command:</p>

<p><code class="highlighter-rouge">sudo apt-get install ia32-libs</code></p>

<p>If you are on Ubuntu 13.04 or greater, <code class="highlighter-rouge">ia32-libs</code> has been removed. You can use the following packages instead:</p>

<p><code class="highlighter-rouge">sudo apt-get install lib32z1 lib32ncurses5 lib32bz2-1.0</code></p>

<p>Use command <code class="highlighter-rouge">sudo npm install -g ionic</code></p>

<p><img src="https://lh3.googleusercontent.com/28bTTaWn1JuJf7nxsq3TSEW4pSSmF2hNcNEOUejrhG4ywKJC2YecWqDsiEXU27-L22FPQmYKi-u6_gx5Ua_j5G_Hcvr6mY61UCOAxwbsYtTMbA1KkOq2rfL9eytSfGfSmpvs8TqIKfp0B5V6Ma9Wk3XAh1sAiRiurqDVNO4Ancav05XJmh05BNqLyEpkDv4MglVIoaLRBacRPfpLAsC23QkJJQy8fB5WbV3VFTpSS06P2AocTHpprCi4s4KLdrant7s92n_mKSIYtqiAkO4VQbFZ-xPfXjCZ9am6xXnWleSBnj_tX1cEBaqh5PXRggIBXMriOWsBT05ef6qK_LQJoMhwy6OVDTYgskqVa4KHtFaQiFnvHoy9wA8GuzabRTyiGkwzC_VM6d2NszP9Urti__TR6GOyKqqq7hFoJMZCKUxBU8VQPXRykPt1Quyj4X_6AH-4VDOC3wY_r-paGKz0ooJW_13LeKhJcBBmRR-UCyxK3t0P0z84Ghr-GgB0U6W4Op81y2TV0HXWrCxWkct3moy-nI2limUk3lmkKrQleEoAUwEVfM5XdGnSBefwZYznKxXg=w722-h417-no" alt="sudo npm install -g ionic" /></p>

<p>Verify the installation of Ionic using command <a href="http://stackoverflow.com/a/31540411/2404470"><code class="highlighter-rouge">ionic info</code></a></p>

<p><img src="https://lh3.googleusercontent.com/AU5-ZE9fnPTzDlhhUwhA3hR0VDb8qrkP2jriNML4cR3qvq5brysM8i5rpG2k-F84W0b6D0UmFefEf39wT0Mab0xZPKRubITCL0YBAe4kJgJI_0F-gy3cAVARnp-dyRnoBym65c4awMHgkiOh2IrvDgmGuVI2-6ZYHGb8v8fVfE99cxuHlcPYuIPtXj6KCNpZt7AtgGAXkqJEee6fF7YToaVGqA3GCXPeoZS_XrU7UJ4NK5Yys0AdSIhNZIq4iZeFt4rpicbtQp5eHDtclTXo13JCoQgbLBmEfXLMkcMzn4yhY6mQRNpFy1gdt1JD03ZPeZuNM_0v57m04vh37vMUhMC7iR6Qr7qp_W0azPpjk3ax_vmTB6zFeM-gpv4MUugfKCNPqMYMky4ApAzANfI2HIIarodtzx_FSy7YXE_02mh7NjCeH-94YJjnYGEOUv55ccMB6nHtwXkF-gCFakYincfUF_YXn0n6riuUOWdfVH8WAJfksnOWSnH0VAVRP1Kw4Q1c3ERHMIGn23q4EL7BUCWJ5L2DHrwZSLqiAoeNmBcpwVaNBQfnZXp57Swy4zWoXCqd=w664-h165-no" alt="Verify the Ionic installation" /></p>

<p>In case, the Cordova CLI is undetectable, use <code class="highlighter-rouge">sudo npm install -g cordova</code> command</p>

<p>And verify if it’s ready by using <code class="highlighter-rouge">npm -v cordova</code></p>

<p><img src="https://lh3.googleusercontent.com/LQbtTVGZ-MQXyIK7-hZwg0Qax5xPZ-amYzyM9e_hVWUlMHhdbnNAaPCsFBCV4nEyoWNQn7B4cSMt1fJudbOyEf78idD9AR4KhzUteUc7U2H-qeczaMH_UQWd0efQu0T3tQUXtaTErnmh0AxESFKWSBx-Ai6sjo-7sMP2i8f7_Shk36hWvhiVoabBICh_TVId7wWlC_ddABbyCiOic6G1FUiuaBs366kxDwyG4T5pmWNk1G-iJoeXuW5hmqEGaXZNZ_-wIfk_bUv8anDXtZBQFadFU8Kyl0i_StQnzw_8PLZkaKuxml21PdC7I_ik7jft8fTPg-ukkodbuj6Tu5imf8AnpDj2om_kpVUmylPLkYH1PBCgH1FIUVaM2MsBWrxm2_5rz6vlFuOHSRGvwjrXANsvcbj-AcYATxHLO8HQE3C9Yxq5ixoQgm62OtQNMsf9hZM01JBKqV2y76UP5tB1LRYD9Efb6IXfvA6USCGxsS-R_Jfmbb-3RhKq667djuafWGanfuTw7dD1CMRFmCSsrJGLW-6724UJtmJPeDkOAsqtJSAAvtPsYmsc3FqhAkQdUNdv=w507-h140-no" alt="Checking Cordova version" /></p>

<p><a href="https://goo.gl/photos/2MFkc2ZFshm3ZEPYA">Photos</a></p>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-ionic-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-06T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-06T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Installing Android studio on Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/install-android-studio-ubuntu-linux/</link>
        <pubDate>2016-01-06T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://www.punchkick.com/wp-content/uploads/2014/12/android_studio_setup_wizard.jpg" alt="Android studio" /></p>

<p><a href="https://www.punchkick.com/blog/2014/12/08/what-android-studio-means-for-your-brands-android-app">courtesy</a></p>

<ul>
  <li>
    <p>Download the <a href="http://developer.android.com/sdk/index.html#Other">Android Studio</a>.</p>
  </li>
  <li>
    <p>Extract downloaded <a href="https://dl.google.com/dl/android/studio/ide-zips/1.5.1.0/android-studio-ide-141.2456560-linux.zip"><code class="highlighter-rouge">.zip</code></a> file.</p>
  </li>
</ul>

<p>The extracted folder name will read somewhat like <strong>android-studio</strong></p>

<p>To keep navigation easy, move this folder to <strong>Home</strong> directory.</p>

<ul>
  <li>
    <p><em>After moving</em>, copy the moved folder by right clicking it. This action will place folder’s location to clipboard.</p>
  </li>
  <li>
    <p>Use <kbd> Ctrl </kbd>  <kbd> Alt </kbd> <kbd> T </kbd> to open a terminal</p>
  </li>
  <li>
    <p>Go to this folder’s directory using <code class="highlighter-rouge">cd /home/(USER NAME)/android-studio/bin/</code></p>
  </li>
  <li>
    <p>Type command <code class="highlighter-rouge">sudo chmod 777 -R studio.sh</code></p>
  </li>
  <li>
    <p>Type <code class="highlighter-rouge">./studio.sh</code></p>
  </li>
</ul>

<p>A pop up will be shown asking for installation settings. In my particular case, it is a fresh install so I’ll go with selecting <em>I do not have a previous version of Stuio or I do not want to import my settings</em></p>

<p><img src="https://lh3.googleusercontent.com/YcoXtYpxfhuFyz7smqIdvz38b_ae3RYZDt34opvUJp-0rRnagL31Or6RB_ci2BJuTkrmclaNzW6LnxyilZYGXPBsB27o9RZRlsDPufcaq3-fNXzPXM7gvGD1O6L12hOSv5YeChAImazypVym_JDBFiDrdw5IcmNfaHyTl1Ca9uK_nTF2ZlJT-cAx5XNK-i_bAjRIrffvyzYhmD0VVAyMjl-dbXBM2dZ9jousuyFmp8dHMZ9l8Z6X6Y3J5IsNOlA3wWHZnR820Uv9TvtmJiq0Ov6xEDajqP6obW5oFw0zYMe7llskfGqLZXHRXycjj5Npplt7jSBZWVhjoErAa5OrKXMyDmQMIQ5o3GfsJY-rIzcgHXCqnqwpDRnBNaoBYuan7hyny48tExdJnA0hhaUgQJIyRKU6MHIIrh35vaKGFrG8j_oN1P5OrVTYJh5qpEMQgXLCWWzP-Q5uc1HISrX6bn4lZxmJSgBqOYhqK6H3XoJJ1XVT0xjyFoPIMTLUSk56fHdgiwbGB326onY450UoIRf0z3WlhyapIBxdaqTtm4oApVxurcmxtSS_8Td7QSM7acS1=w584-h215-no" alt="./studio.sh popup" /></p>

<p>From now onwards, setup wizard will guide you.</p>

<p><img src="https://lh3.googleusercontent.com/RiAYd96BlVPbWRwvFmyecMM_iiCR26T7H5V2TCBypWQU2CBriSx3ZHx4hAWjuiRRPbQ4c0Fta2lG4uxtR5lteSRkyXItCTuVuxMUpnRRsqTQ1cjhou1zfWJFhJCE_f9PDx5WGz6B-ZiLCaMxvK96j1LTwYsJXV6jL9MOMUlGW3cgfEJkGgYcSJ0J9KVrfqOe9uGlgzPnnr-26a-l027FjOjDMSdTDqe1nCohx5SoXr_DQjTcp16_X4bXqjbgVgAgHJUrboBjf_YyO9tKooMU7Y8kU4fpsNBtt9zL-ifgLUFYVMkqVuCklJECRN7V7HMYHjpSyXSBedcDsf6OdcBdVESNVAOCb8ROWXjbNr1Og2I9OWWlJy7okyJrdMr1-t-svCAsp_j-Hzk2B-y0dYWt-ozmtgNFGGWhW4vQTuiiigP5PitqcRjWuzyv2GB1-031IJKk0jFrgHmIwA8-4z5u6ShmJKQNneH5JgkUoAjnAxlob9mo2E88xrtE827WmZ_rSp7pSzmXwDVN5GdHJxxyzBWpzeL20U6BoMtuS-8CFZ86mkQtqOD_eObXBxmt5ofzxwKb=w1120-h640-no" alt="Android studio setup wizard" /></p>

<p>Android Studio can work with both <a href="http://openjdk.java.net/">Open JDK</a> and <a href="https://www.oracle.com/java/index.html">Oracle’s JDK</a> (recommended). Incase, Open JDK is installed the wizard will recommend installing Oracle Java JDK because some UI and performance issues are reported while using OpenJDK.</p>

<p>The downside with Oracle’s JDK is that it <a href="http://stackoverflow.com/a/14788889/2404470">won’t update</a> with the rest of your system like OpenJDK will.</p>

<p>The wizard may also prompt about the <a href="https://youtrack.jetbrains.com/issue/IDEA-78860">input problems with IDEA </a>.</p>

<p>Select install type</p>

<p><img src="https://lh3.googleusercontent.com/ponDe1VfYzuq-1B5fMIRoI-hbIabKjqpNFBXzEguF2lP9gYbMyxQ_ZIoR67gMP-KMG9TcK0YWqwitXaTg-olXxSXSoayed5F3sMQnPFQdBPKvxv9MGACp_4U41T2nDURLPybVQ1Ur0n6hlvXpTFA_jdREft1tNgUL_HsVBlk2OvqhTfJhaYHwm4Mfd1kI2otaVe3riypBJQ3sUmeDGjv3Nnu25VROw5-_XFGdrjMuua_6MjBD7wPUA9g7ZO2dwI26nB8EFKJASxA4HIR42rqcrngNa0aE6gvOR8kHMvVooejAosIwcnQHPpA7g1Mu4IQL7EgCrY9cFFZMRTRE5F0kDWWENzgMjoIIlkA6Z3VUD5bd3P8rnNou57b8VDqqWO0-zuXScJXBDHqSHVjLOXRdTnrA6XZKrMnlnu28x86Wjt4MKuPEPspMEaiC_UapKokOIWOQ1m3e6Yqxv2FRI3Qdq9blPIxcOdfPTheIKY1ood5d1CuRu-pdfWcAO6BwDggu-ByAFKtH1VNC2oOVMfzNMhq-yrV7zATFkTW2qCHYMTabuQI7w57bgQy9LsCApK_N3rm=w1120-h640-no" alt="Select Android studio install type" /></p>

<p>Verify installation settings</p>

<p><img src="https://lh3.googleusercontent.com/WhowThzbS3cUe2uHKuxAsda9-cLZSUWTGxQWPRb5XvBBsNVSb9lA3qGyfO1EjlSns_4Rv-2kV2CdDBG6LXaFwCMmJd5bOyvg0YydSQI8k6IWi8tjPx3Tqpr2QtKAo0y6h2prUGPgee3VdZBABwuSYfKJGPJJsHVqKSK9Yfm7lr0GzD8ils19FuLeBm8xJSrEB3giehtn61rgO-epRnJbJ-T7X3WK7Zaga-svLfiqkDVuI8s1ftGIL9XhCWZegiFL4qxn90WDV7kAVYxBtR8ynCvWgCZITX4HI8w-A5y2oCzv7dd0eteKeAhIZXM7hJdfn0MLic2QZUjBQ2KkVgmPnfIMO6Tl1QEgCV36fMJx5DQtekUJW_n5-EUAsyJqP5OTW-6Gns5RFWZ4WxVlv7kC7bBneYOXkDRvVuvMf2PIgbbpyzgkL-7s7hoPMIFrJbxzaEAx9bZbOE97yMDKbGpMRxgxRxZKZvHcutx-_-P2DFzBp0IblZKfi-fiXbODPo0Q_X5wYVlyjwj8iNjTNmzah-p--cepJ61_SsR7dm3Q-IqAh8rddDBsi3s8TXkG6RcS8lZn=w1120-h640-no" alt="Verify Android studio installation settings" /></p>

<p>An emulator can <a href="http://developer.android.com/tools/devices/emulator.html#vm-linux">also be configured</a> as needed.</p>

<p><img src="https://lh3.googleusercontent.com/69Or3dy7xpQWKfz34_Rn81nZ7muqqs7AMPyMvtk0kkgPPlRHD5snQ0VtO5q0DbRPY_N2Ulscb3ppkET8T_KLvXYXt0u6-90pud2_oxqIUtoj3GZcBNCjIMJdhVurSIVpX5aIzH9wEidHA0JoCrC_-4ObyooA8LYdgDUcZZ2sr32XmNfSOc2iXxlcxW6wuCvMtcVm2NskXdT-jnnvobi-hjiG6YVQ8ia7v5-CULTJ9521rA8Dmf3tT-oV1OF-uN1h8R9tJ1vy3_5xEle9n-7elHg14ToPigR9_RJSBRenrITAxsIW8f58BBnt5vfh7HlJJztLODDNGgJsp4djeVd79B1cMzUTbXqLgunqK5OdF6K-UMbvf0lhBu0lqhpElDY0hXQL4ZWxRN-XM3o9TDJDNBRESDKxG5sx78hCqBWiu5VcjOsUQX_JEXz9BbjFIiplFs-M1TMNpxllZ6Qs64T8-fIkbS9-tcjT12Bk-JiMlEhlNjvRTfgKG_ftR-kbzjkUcmBn2-VCdZ-FOeEvJyvHef96_CHxUbR0T8lvc6DBNZP2cOkhNTlCcNNqoF_9qyw1Fc11=w1120-h640-no" alt="Android studio emulator configuration prompt" /></p>

<p>The wizard will start downloading the necessary SDK tools</p>

<p>The wizard may also show an error about <a href="http://tools.android.com/tech-docs/linux-32-bit-libraries">Linux 32 Bit Libraries</a>, which can be solved by using the below command:</p>

<p><code class="highlighter-rouge">sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1</code></p>

<p>After this, all the required components will be downloaded and installed automatically.</p>

<p>After everything is upto the mark, just click finish</p>

<p><img src="https://lh3.googleusercontent.com/rGeADkMAFrGJBHKjTLqxhwO_nH5QiRa3Z9vKOKmBPAcqkT_xveXcm5nTmlFgMY9-4pfKGODm2e_gkCcWgFnqS42kEC52pTbB_EVC2l8QhoZcUeQQ_xhJuqd7O_tB6NT4XFm-ERSOmAhCuiPBr7GHhQmh4JZF3OCyRIUDivF3CTNzyIH0GjM7NFs6Kr5c7Ahpra9S4Yc__BQCsUkyyZhSselUaTwNyFwwzvRrk2ZbLEg2wFHnSM6e_VG4SAWlf4b6gIkQCmK9g1gLqVIZM5vGAy34GO-kYaANdYBssezBOVHTQPdPxYSxLDZTjbfPcJJZMuy7EbE2RgRFBDoHwZy3fTtC3pu_77g2btpzdFLFGSqqp7dAKnML1rw_zUOEnbQn7DrwH67jGbW_uCHstPT6HzDnVjBk_LPxxOxZmIcgqceAcZYB7EWGdBfBu0ELFMyQZ_Sr35gQEf5qd1QnEAy64ZVucnox6gYQAW0qFF-ylfy_IpYeAuksyOGrHAQcT_iZBJ_OIu8KLO4Wa_c-HUV9f4TLY_6YL9l3S29dD2orzuT-xrkNyJ1XulYXgG484M3fWSO0=w1120-h640-no" alt="Completed installation of Android studio" /></p>

<p>To make a Desktop icon, go to ‘Configure’ and then click ‘Create Desktop Entry’</p>

<p><img src="https://lh3.googleusercontent.com/vrcyI9RY4RB6eGoyFp6W5TRYmB76wNBOXLuz11SzpSPe8NCggMBePTtRmeSd9NpoOA54CAgT4nnXjgaZ7W2ct-bHS0iziUi69ON09bi2T5gl21Eb86epp-7Sdwb9LSVMDqeIUswVfvQi32hjglVEcQ4DZqoHKvXvq7FMSud7AaK2nHEOnzUIIcYCopKGgRiU8KnNtJVovpOCpNwRH21Rg17zMF4-gDFUvkyv_2g0LSrBS9ObL6VEeNXf3Mf47i51W2vXehVXAZzSEUbt3xiMgLZNrNshSwBE6FRYhxgcNWcCGABw_ldO-faAovINFI9iiw6zld5tfLzV7ScEsnjLHmbaKcqTFI2zpbM8UZH5edXkKfyK1nPQ_TEO9Nybr95r7saiypWoIWP2dCKVK5DYd33e3ZcmtXvG4xTniZwOVJBBQ4h8IzRtWn-s4EgJUlHX_nTP8OBxPqk7pNuGxXURTDPFKRJO6ROH5zLl6FpHwDs39xDeoWZ6TWI55e9YPlr5UfGwLK03UJm8VKA8klc19wJ7Lzr_LJ8WVTBNmjDouaOhsexFWiovN_kqpAxr4odtoY39=w707-h639-no" alt="Creating Android studio desktop icon" /></p>

<p><img src="https://lh3.googleusercontent.com/I7Wc9WFHt2P2qFvoTgGW3HVwChwKrFy3soi-AL2ls6mTzWKkSz9jiqRieg0BVUlsMGZVEUZPqTpOAzdg3j1JPdDXnOuvCmuASe0VCCXkmboBZQ6WKl_M-KN-imMsU96jj1AZjFGhIW8wXlnJr0NBg4cX5MFyeMKjQxd7zPPrI3h2llcv0b8WBClFoIhzAUvGWhk7Cpj_N3gG2Woyn6CFg6l-Pqt4WB3fSPDaY7Opifh10TFYQuPxAM71KEBpFbOeKiuNyfh0ebU2sd75qs17Cf3yBNxeUNpakFJqUeRe4JiANkFsEQZdFg-969TbOfme8tvStapykTg2Faq6zXkVkS-X6eLh0LZqZ59wVFEsitjj9zO5RrHJEppew2yx0jCQKUB_0SUpuFLxzoRruYip2Exj_lOTjztm230dnsH7jEGo1US4ixqPsTj_zX8tOD_z0Wvfk638c5_ZZY5CbIK1eE9VXHCp1FLgW4707FAFMTFEMZ_41bcCRLg7RHHQwOeJKqO5d42mARtzmROlMRkOHOAUa5Ft7wnh4FEfrbzob1CiB0UYSN3nAusKN9kaBIcHtm14=w585-h209-no" alt="Creating Android studio desktop icon for one or multiple users" /></p>

<p><a href="https://goo.gl/photos/4dsusmShYjwgQYws8">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-android-studio-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-06T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-06T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Execution plan in SQL Server]]></title>
        <link>http://xameeramir.github.io/SQL-Server-Execution-plan/</link>
        <pubDate>2016-01-05T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://blog.teamtreehouse.com/wp-content/uploads/2013/10/idea-execution.png" alt="Execution plan" /></p>

<p><a href="http://blog.teamtreehouse.com/working-in-a-flat-company">Courtesy</a></p>

<p>The first step in optimizing a query is looking at it’s execution plan. An execution plan is a visual representation of the operations performed by the database engine in order to return the data required by your query.</p>

<p>The execution plan for a query is your view into the SQL Server query optimizer and query engine. It will reveal which <strong>objects a query uses</strong>, object like:</p>

<ul>
  <li>tables</li>
  <li>indexes</li>
  <li>etc.</li>
</ul>

<p>type of uses:</p>

<ul>
  <li>in which order</li>
  <li>how they were accessed (seek or scan)</li>
  <li>types of joins</li>
  <li>data size</li>
  <li>filtering</li>
  <li>sorting</li>
  <li>aggregations</li>
  <li>calculated columns derivation</li>
  <li>foreign keys access</li>
  <li>etc.</li>
</ul>

<p>within the database, and how it uses them.</p>

<p>There are 3 types of execution plans:</p>
<ul>
  <li>Estimated</li>
  <li>Actual</li>
  <li>Cached</li>
</ul>

<h1 id="estimated-execution-plan">Estimated execution plan:</h1>
<p>To get a query’s estimated execution plan:</p>
<ul>
  <li>Switch to the database in concern</li>
  <li>highlight the query in concern</li>
  <li>click <strong>Query</strong></li>
  <li>click <strong>Display Estimated Execution Plan</strong></li>
</ul>

<p><img src="https://lh3.googleusercontent.com/SbQqqs2NaKllY9Ez9-3RbqXilnUFzYaeF1UcILDWhfhBrDW8ABohAklCTlP3M6kt3NTIz9fnPu_030uulgjq_ire8DySlL_V1FGoEMLyAMOVbWbHswCOHE3o9WP98YwV8-6iWGzHpCEauzjkZpmFJoW49NLeXC1Eg5lfpVP6iVYVTrwS5zTIBnGX4mI17ZA4xcqTo-ae_HxpNhWovqxMkLpFRXpbHkCgwPdWTpVfgaavcLPxuZsVTZwfwgQXaGEAloH6fCQrEMQ3Dy0WegA7tBbjcYmxBAoQ5vrpV5yWamfhkOZjDxj9hDIUsO7feMNm6v0bi_ogmFSuzAn3_T6lG_jbSyH1Xd405ui1j-_Q5444jMyG33OnHnmqOOiS9AoY4k4IRN8rygWYqbxXP8bnTk7q9YxO9b9F6310f2p16nEIVo1IM8BmHeoA_pYXWG3Bv8sHi5vc8kgI-WGVGJryjvPGilvHG7XQPhozsx7-b0QIdsJ-G-JceFZHgrSFa0phIj9DRawJyfZEmOIaJwEpGZUxQfRF6TY2Mloa65R5wsMTnKbTBwtBTpxnPSDujHnJOwLICpJdp0eAj-mJCxY0VqWYKFBAWmoq5Q6QYlZH__ugDKdC4rFE=w286-h132-no" alt="Estimated execution plan" /></p>

<p>The shortcut for this is <kbd>Ctrl</kbd>+ <kbd>L</kbd>. When you get this plan, some sections of the query might show a very high percentage as cost.</p>

<p><img src="https://lh3.googleusercontent.com/D2YV45Mwz09QBApfL1J4_WmrivdI6LKGcH3Ox6stm0_I83MknL29ylMDGneesmIG4LjJdsCj6LW0XoE3TTlu-o8D5JLAscq5hZCBxbvGcS-U-6pqmkA-BcrmQ1puhUwvcKj3sdCidNClf5cU-DdhTUPZdF7i46Js0pVbNLa0c9BulwcAEIT3LuiDtpa3J377zAJhjezPAw7C_CXfs1Usp6_hU-gVsnNq-msIPGM-yDnCryyv-ioDOJzrKfo6LTqGNV2MSrppeOCjELeqR0QQgRlx00x0yztzSMLmu6i9e1aRCfubYup-H5jIpn8IXNesaEAfmqfoM5BslLyNoW61w6Hpj_M_9_uPXrz6qPmWKRzr20sHkzi1iIeUcd_IV6oNtHdihtSAXkDAOWshPRPGNQMMbyyCEREAwekHTRIjA-zMBbmtnZIefs07wvTfZIEsoAKQOP5uP9X3TUZqU0-n-IqeADulRPp6TowbprHMZL4casC6aYvZSpYxXt5V6HJZTbPv6aTuhZ_eaQFtlpopzy0zcxj0UjFOyYM6dzxqVJ1zzZgREtOnW4OCxTfGfSSn46amFfV0PSrYHInPQW5D6gNHW4dPfoj83fogEruO7nKPRlNfekDz=w673-h263-no" alt="Estimated execution plan" /></p>

<p>Remember that this is just an estimate, and many a times what we see as the most expensive section comes up as the most cheapest or cheap.</p>

<p>Btw, each symbol in the execution plan is an operator, and each operator has additional information within its properties that define the work performed by that operator.</p>

<h1 id="actual-execution-plan">Actual execution plan:</h1>
<p>To get a query’s actual execution plan:</p>
<ul>
  <li>Switch to the database in concern</li>
  <li>highlight the query in concern</li>
  <li>click <strong>Query</strong></li>
  <li>click <strong>Include Actual Execution Plan</strong></li>
</ul>

<p><img src="https://lh3.googleusercontent.com/QWUMsAa0SfH_VXLGdmF7WBU-pg25yAd2zQi6a7EO_JRuuS8QzlhNsxbOmx4QTz1JwkzU46JUcV6y6x4YUGaJpJIzGAywauz73gYsbm0EoqOpYjWHt3_UWsgVpiX4yOIAieayU4caNO-6_5zx1euGWGDPn2j8sGnBd_Ul4ErIS_iqTGGZS12jShwjV0JlyWYzHvqs4KybTy6GBkSEUEaphevuQ29n-E_qZOcKJXdMEEzfAPrwvRzF4tbub2ugC6pNWIxIJpgTP4p8Bx9Sa7ojfIfIjbPj6n0d6xXNvZF4G1ITWbYKqu9dBe-DPkwF_WM2s0VSKoZgCooA5bsXBPR1hrhtgx-e9Uwnwvo0fWKUmpHN6gmaS3c_sDnm4ntSQLD0Gbr0sX2SuZtUuynI_2uvbPSvngPSr7NvAsJE6Sfa4V-OCb5K9D700LKSv94vVr4nKgzHqouElhxzAEg_PEI1ORiD0Zp2ga8AHKKNAisFwyrnfC6VP2epRJZngJ9_RLPkVmedkTuwJswsN4QKRevgsoZ0F49dzITBoBCfixD-cURa4Cq9m7yFfvgz58ZV6urJtxYNIQFdpTOByGptMMPBHLC6dfprW7F9YbqF-jqKAj9RQQaAfPwy=w285-h207-no" alt="Actual execution plan" /></p>

<p>The shortcut for this is <kbd>Ctrl</kbd>+ <kbd>M</kbd>. One of the queries gave this actual execution plan.</p>

<p><img src="https://lh3.googleusercontent.com/ro-K9foM9sygQWYFmSVblyPCEyVx1BpXT6t1n3bgGw-Z7fWgl7kDye4Le4rBQsaATXmlXZ0gp7cGWiJYNU_MgAMua01WMEKgPDFjc7M6ntJgtf8yVcTMTOAb1fSPR3B9Nq3csGY_dt8sFuPa_jzzKMSLR8iTGj5bP50kai6cTFVbilzuJHJH-GM4c-5O-NY7eXcvzWU5XtZOAE7triwJcm91_0NbTwiary1J9r1bdXhZSKky-hbo8jvDPVVMhmqQkusHF-NJG6pnnqe7t63kXos9-wxYWNRJ-ir9hcriSM74W4_Dm6qOvC-1W82AFB6njBEwBe03AqK8Na0T3Ae-gs1x1c7kikc11yHEHFzPKucXAa6NR4I8G-6Ptd_trVwl8e854DKGsA5OVg-tlb5ZRzhOvOGWfPM0VVH52rJ4U_7vWIxLcrYKASpCcZB9ne8OOqXzJqbEV0Gcg-dfgKbu9W0bWsqH-vDVZyCp2xF2VTk5lRf5Utaw7v-ym2pNWbwjNKTUlT7qmBK1lqwjxS7K9_1S4Knr5sChOp6BOJbXvnGnm10cxlfUTds33LxHrir42PXq5D-o1pHmfSBZMt0Zt2QUVb21lyS7rqogLDfjJPsWagN3p_hH=w447-h509-no" alt="Actual execution plan" /></p>

<p>Look at the actual vs estimated numbers, looks like the estimate is good enough. One of other queries gave this execution plan:</p>

<p><img src="https://lh3.googleusercontent.com/Co9T6YKSW-e0C4jv_LvIcKFlShabw-z-J2NtZyG7HEAF4trM29OtAY9pbM2ljcIAOAs0wsTqF9kcQRDop2KKmM86KDgh9LQKFTStVt7VylgYcx1rxIMSdCFH3xy4TpOdEcwKA3xoEFL58e-Oa113GbfMQXGHd6Xx4t0NvQA0JmIeWu1rikpNz9dcRxZ4QctArPK28EHuMBL7-AcT1yCBg7yVCM7_K6_Kma4NcPxJ57S5K3Ibmibh0sExGrsFfiB4h1DoXOiu-PffD1HWC3rN3ZWgh3BwUojrTdaJUiB_YR8xut1I87Kjyhhf1KSXSLVHppVPSNUu2eSeRbYaPFS1geubE6AZzSkoFkZdRZtX8mAaaOPdq-IvC86w2e21cY3DWmCljNgJ_oINISPm0Q3gqjObt2XxvXhdxOq2e1jeA5rMFzXPMnlLLVc4JC4FT0E8bQxQA1GDlHhNraf5D_uY54YxAcKH2xFz0mJ6wMKlhGT_Dy_NRZE7wIQtSbJVym4wtEVMdfu3NhY0gv9g3Nf7z4frYYLLOJFaMgxlc-NwZmP5GvKQPY0xkTdPXcDTa77FLfrsLtjh9E5xyUGTwhtccnA3QgKqQdgsBA7fZ6EZumo1spC3KyUI=w414-h495-no" alt="Actual execution plan" /></p>

<p>Looks like the estimates and actuals are far different.</p>

<p>This proves that <strong>actual execution plan are always good to tune compared to estimates</strong>. Btw, we read execution plans from left to right and top to bottom.</p>

<p>The estimated percentage costs at the front level are <strong>still estimates</strong>. So to tune the queries, it looks like we need to go through each of the blocks one-by-one. This looks like a lot of pain. This is where the 3<sup>rd</sup> type of execution plans comes into the picture - the <strong>cached execution plan</strong>.</p>

<h1 id="cached-execution-plan">Cached execution plan:</h1>

<p>There is a <a href="http://xameeramir.github.io/BlitzKrieg-SQL-Server-diagnosis/">free cool utility</a> to find out which queries we actually need to tune. Just hit <a href="http://www.brentozar.com/blitzcache">http://www.brentozar.com/blitzcache</a> and grab <code>sp_BlitzCache</code>.</p>

<p>Just execute this <code>EXEC sp_BlitzCache @top=10, @sort_order='duration'</code>. This query will give the top 10 queries with the most execution time. In a column it also shows the possible problems like missing indexes, downlevel cardinality estimates and implicit conversions in the <strong>Warnings</strong> column. In the <strong>Query Plan</strong> column, it gives the actual execution plan map link which can be clicked upon.</p>

<h1 id="query-tuning">Query Tuning:</h1>

<p>The single largest use for execution plans is query tuning. It’s the most common tool for understanding what you want to tune. It’s invaluable for identifying and fixing poorly performing code. I can’t run through every potential cause of poor query performance here, or even close, but we can look briefly at a few of the common culprits and the warning signs you’ll find in the execution plan.</p>

<p><strong>Poorly Designed Queries</strong></p>

<p>Like with any language, there are common code smells within T-SQL. I’ll list out a few of them as well as what you might see in the execution plan.</p>

<p><strong>Search Conditions with Functions</strong></p>

<p>Placing a function on a column in the <code>ON</code>, <code>HAVING</code> or <code>WHERE</code> clause (e.g. <code>WHERE  SomeFunction(Column) = @Value )</code> can lead to very poor performance because it renders the predicate non-SARGable, which means that SQL Server cannot use it in an index seek operation. Instead, it will be forced to read the entire table or index. In the execution plan, look out for a Scan operator against a table or index where you expected a Seek operation, i.e. a single or small set of lookups within an index.</p>

<p><strong>Nesting Views</strong></p>

<p>Having a view that calls to other views or has <code>JOIN</code> operations to other views can lead to very poor performance. The query optimizer goes through a process called simplification, where it attempts to eliminate tables that are not needed to fulfil the query, helping to make it faster. For simple queries involving views or functions, the optimizer will simply access the underlying base tables, and perform table elimination in the usual fashion. However, use of nested views and functions will lead quickly to a very complex query within SQL Server, even if the query looks simple in the T-SQL code. The problem is that beyond a certain point, SQL Server can’t perform the usual simplification process, and you’ll end up with large complex plans with lots of operators referencing the tables more than once, and so causing unnecessary work.</p>

<p><strong>Incorrect Data Type Use</strong></p>

<p>Of course, to do this it must apply the conversion function to the column, in the <code>ON</code>, <code>HAVING</code> or <code>WHERE</code> clause and we are back in the situation of having a non-SARGable predicate, leading to scans where you should see seeks. You may also see a warning indicating an implicit conversion is occurring.</p>

<p><strong>Row-by-row Processing</strong></p>

<p>Row-by-row approach is expressed via cursors and sometimes as <code>WHILE</code> loops that often lead to extremely poor performance. In such cases, rather than a single execution plan, you’ll see one plan for each pass through of the loop, and SQL Server essentially generates the same plan over and over, to process each row.</p>

<h1 id="common-warning-signs-in-the-execution-plan">Common Warning Signs in the Execution Plan</h1>

<p><strong>Warnings</strong></p>

<p>These are red crosses or yellow exclamation marks superimposed on an operator. There are sometimes false positives, but most of the time, these indicate an issue to investigate.
Costly Operations – the operation costs are estimated values, not actual measures, but they are the one number provided to us so we’re going to use them. The most costly operation is frequently an indication of where to start troubleshooting</p>

<p><strong>Fat Pipes</strong></p>

<p>Within an execution plan, the arrows connecting one operator to the next are called pipes, and represent data flow. Fat pipes indicate lots of data being processed. Of course, this is inevitable if the query simply has to process a large amount of data, but it can often be an indication of a problem. Look out for transitions from very fat pipes to very thin ones, indicating late filtering and that possibly a different index is needed. Transitions from very thin pipes to fat ones indicates multiplication of data, i.e. some operation within the T-SQL is causing more and more data to be generated.</p>

<p><strong>Extra Operators</strong></p>

<p>Over time you’ll start to recognize operators and understand quickly both what each one is doing and why. Any time that you see an operator and you don’t understand what it is, or, you don’t understand why it’s there, then that’s an indicator of a potential problem.</p>

<p><strong>Scans</strong></p>

<p>We say this all the time, scans are not necessarily a bad thing. They’re just an indication of the scan of an index or table. If your query is <code>SELECT * FROM TableName</code>, with no <code>WHERE</code> clause then a scan is the best way to retrieve that data. In other circumstances, a scan can be an indication of a problem such as implicit data conversions, or functions on a column in the <code>WHERE</code> clause.</p>

<p>Let’s take a look at a few of the warning signs that can appear, and what we can do in response.</p>

<pre> <code>
DECLARE @LocationName AS NVARCHAR(50);
 
SET @LocationName = 'Paint';
 
SELECT  p.Name AS ProductName ,
        pi.Shelf ,
        l.Name AS LocationName
FROM    Production.Product AS p
        JOIN Production.ProductInventory AS pi ON pi.ProductID = p.ProductID
        JOIN Production.Location AS l ON l.LocationID = pi.LocationID
WHERE   LTRIM(RTRIM(l.Name)) = @LocationName;
GO
</code> </pre>

<p><img src="https://www.simple-talk.com/wp-content/uploads/imported/2123-1-1bdb2f5d-54d0-423b-ad5f-788271507ef2.png" alt="Execution plan with problems" /></p>

<p>And the problems are as follows:</p>

<ol>
  <li>The INDEX SCAN on the <code>Location.Name</code> column – there’s an index on that column a SEEK is expected - culrit: <code>LTRIM(RTRIM(l.Name))</code>, in the <code>WHERE</code> clause</li>
  <li>The FAT PIPE coming out of the Clustered Index Scan on the ProductInventory table – in this example, it’s processing over 1000 rows at this stage, and eventually only returning 9 rows. - culprit: missing index on the column.</li>
  <li>The HASH MATCH join – for the number of rows returned I’m expecting a NESTED LOOPS join - culprit: bad or missing indexes.</li>
</ol>

<p><strong>Poor Indexing</strong></p>

<p>At the top of some execution plans, you may even see an explicit <strong>Missing Index</strong> suggestion, indicating that the optimizer recognized that if it had a certain index, it might be able to come up with a better plan. Note these, but do not assume they’re accurate. Test them before applying them.</p>

<p><strong>Nesting Views</strong></p>

<p>A view is just a query that the optimizer resolves just like any other query. However, if you decide to JOIN a view to a view, or nest views inside of each other, it causes problems for SQL Server. Firstly, as the number of referenced objects increases, due to deep nesting, the optimizer, which only has so much time to try to optimize the query, will give up on simplification and just build a query for the objects defined. For each object, the optimizer must estimate the number of rows returned and, based on that, the most efficient operation to use to return those rows. However, once we go beyond <strong>three</strong> levels deep on obfuscation, the optimizer stops assigning costs and just assumes one row returned. All of this can result in very poor choices of plan and a lot of avoidable work.</p>

<p>To illustrate how nesting views can hurt the server, consider this:</p>

<pre> <code>
SELECT  pa.PersonName,
        pa.City,
        cea.EmailAddress,
        cs.DueDate
FROM    dbo.PersonAddress AS pa
JOIN    dbo.CustomerSales AS cs
        ON cs.CustomerPersonID = pa.PersonID
LEFT JOIN dbo.ContactEmailAddress AS cea
        ON cea.ContactPersonID = pa.PersonID
WHERE   pa.City = 'Redmond';
</code> </pre>

<p>All the 3 referenced objects are views. And the execution plan will be so complex like this:</p>

<p><img src="https://www.simple-talk.com/iwritefor/articlefiles/2123-executionplans%20image10.png" alt="Nested views execution plan" /></p>

<p>The simplication of the above query can be done by actually accessing the underlying tables like this:</p>

<pre> <code>
SELECT  p.LastName + ', ' + p.FirstName AS PersonName ,
        a.City ,
        ea.EmailAddress ,
        soh.DueDate
FROM    Person.Person AS p
        JOIN Person.EmailAddress AS ea
              ON ea.BusinessEntityID = p.BusinessEntityID
        JOIN Person.BusinessEntityAddress AS bea
              ON bea.BusinessEntityID = p.BusinessEntityID
        JOIN Person.Address AS a
              ON a.AddressID = bea.AddressID
        LEFT JOIN Person.BusinessEntityContact AS bec
              ON bec.PersonID = p.BusinessEntityID
        JOIN Sales.Customer AS c
              ON c.PersonID = p.BusinessEntityID
        JOIN Sales.SalesOrderHeader AS soh
              ON soh.CustomerID = c.CustomerID
WHERE   a.City = 'Redmond';
</code> </pre>

<p>The execution plan is much simplified now:</p>

<p><img src="https://www.simple-talk.com/iwritefor/articlefiles/2123-executionplans%20image11.png" alt="Avoiding views to simplify execution plan" /></p>

<p><strong>Lack of Database Constraints</strong></p>

<p>Consider this query:</p>

<pre> <code>
SELECT  soh.OrderDate ,
        soh.ShipDate ,
        sod.OrderQty ,
        sod.UnitPrice ,
        p.Name AS ProductName
FROM    Sales.SalesOrderHeader AS soh
        JOIN Sales.SalesOrderDetail AS sod
              ON sod.SalesOrderID = soh.SalesOrderID
        JOIN Production.Product AS p 
              ON p.ProductID = sod.ProductID
WHERE   p.Name = 'Water Bottle - 30 oz.'
        AND sod.UnitPrice &lt; $0.0;
</code> </pre>

<p>With no constraints in place, the execution plan for this query will look as shown:</p>

<p><img src="https://www.simple-talk.com/iwritefor/articlefiles/2123-executionplans%20image12.png" alt="Simplify execution plan by using constraints" /></p>

<p>This query returns zero rows, since there are no products with a price less than $0, and yet SQL Server still performs an index scan, two index seeks and a couple of nested loop joins. The reason is that it has no way to know they query will return zero rows.</p>

<p>However, what if we have a constraint in place on the SalesOrderDetail table that requires that the UnitPrice for any row be greater than zero (this constraint already exists in the AdventureWorks database).</p>

<pre> <code>
ALTER TABLE Sales.SalesOrderDetail  WITH CHECK
  ADD  CONSTRAINT CK_SalesOrderDetail_UnitPrice CHECK  ((UnitPrice&gt;=(0.00)));
</code> </pre>

<p>If we rerun the above code with this constraint in place, then the execution plan is interesting:</p>

<p><img src="https://www.simple-talk.com/wp-content/uploads/imported/2123-1-6205d3e8-1153-41d4-926a-9132a38e807b.png" alt="Simplify execution plan by using constraints" /></p>

<p><strong>Missing or out-of-date Database Statistics</strong></p>

<p>The statistics can be turned off or on by the following command:</p>

<pre> <code>
SET AUTO_UPDATE_STATISTICS OFF | ON;
</code> </pre>

<p>It is recommended to not set them off to avoid stale statistics.</p>

<p><strong>Maybe it’s not the Database?</strong></p>

<p>It’s also possible that the database is not the culprit, the application can cause performance problems. So, profile the application code as well.</p>

<p><strong>Sources:</strong></p>

<ul>
  <li><a href="https://www.simple-talk.com/sql/performance/why-developers-need-to-understand-execution-plans">Execution plan benefits</a></li>
  <li><a href="https://www.youtube.com/watch?v=XKghrpVSbc0">Types of execution plans</a></li>
  <li><a href="https://goo.gl/photos/jJ1Da5nMAUMmCZr87">Photos</a></li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/SQL-Server-Execution-plan</wp:post_id>
        <wp:post_date>2016-01-05T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-05T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Installing Cordova on Windows and Linux]]></title>
        <link>http://xameeramir.github.io/installing-cordova/</link>
        <pubDate>2016-01-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://cordova.apache.org/static/img/cordova_bot.png" alt="Cordova logo" /></p>

<p><a href="https://cordova.apache.org/">courtesy</a></p>

<p>Once the <a href="http://xameeramir.github.io/install-git-windows10/">git</a> client and <a href="http://xameeramir.github.io/install-node/">node</a> are ready, <a href="http://cordova.apache.org/">cordova</a> can be installed.</p>

<h1 id="to-install-cordova">To <a href="https://cordova.apache.org/docs/en/4.0.0/guide/cli/#link-2">install Cordova</a></h1>

<ul>
  <li>After getting an Internet connection on <strong>Windows</strong>, use <code class="highlighter-rouge">npm install -g cordova</code> command</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/jlQGRO9VLhfEWovoD7tFGLClgh8go80c2Al2Iu_rzkmbcx_2RcMBGd1ffm-MxujNnJth4FvVvVUsv1NNsQu58mB33A_WHFRZyTC6iOSbso7zSKN6RPPMzu42salIeRGP6NC17aju4pEmzACSRY4gOKsEXOMIN3JgCWVXEv9dW45OaaVvrTEie12IXHWJCFANDIiWZsnr7LeQgSj3R-SxPM8tkZcnoNzfvQj-mGLnBxtRzgFUBkvb9BXezHpU8aID1M_VZsH04A2xCiIyfCfT-ViTnxwX7SLeRyg5cc0Jm3MM4hSowKJKeUbQ9B-gLfiO9it493CoyoFTDi-0xD-v3-I74FD1ie-pcr1MRSClYOZb4qGmaxwmxOW8GOoSX1MX39zirFzObsbz4mtxymY0u6bL_srnrmu-cqFs0TQ3mex_j-l8DiL89hIH8VaovXRXaztMZXJGCB45Nz62OX5AirStuOwPqjTzz9RUNdq1yqcnk7ZxeBr2xXB2xVeIN5wHtUZ8cTTsLpIHFXbWqjcvRkUevy3-kRGn1GaZNNx142jfSxPp4GGRmvNGw9-8YgD93ce5=w668-h331-no" alt="installing cordova on windows" /></p>

<p>Notice that the title of the command prompt changes from <code class="highlighter-rouge">C:\WINDOWS\system32\cmd.exe</code> to <code class="highlighter-rouge">npm</code> which is done by node.js node package manager (npm) utility.</p>

<p>In case, you’re not Net-connected. The below error will show up.</p>

<p><img src="https://lh3.googleusercontent.com/U2AOy__KX9UcwtOhJXwNShGofE3APrV7VXOo3TNsEwOXZF65TbuRa_r9iKNnt-d8Gawv294SBF0pFfge-S0JMLVN0iGO6JVGRLwKacEXwBso9d0MpFQFmPuzzNGq8-mxD7T8EVUNZJ6kSMWyaB0k_xK7o2x40ZoHnEBz3KGe5zJ4M1w94Bg0QE5SHtPYlJzTUbSpE6j5pkA65C1oz28eLapZYJxbbmtFT_PmYOPoePyae44btj-U-mi-PkpxGpzTudynzTIAN1p8wcxON49YzLxkxvkzdQfjB6Gf_ZJ86St4OkYIODrdH34yxTHF0tnmBTmgLAavmKN6JuC0aGJnDKmGsSejSmr-0WnuIEsuvkyBr77fH-V-wBIiUDGbkZVdNpl8xpFPMdnJ82taeWZqyDJ8sex9_auBTRieyV01DmFN1Ns4beRXSy-XFpUsY8MBgjcF4A61oRaWJ4VcMimEJjBKFolDWhK2TWFF6phhgROJ96gNYnhdvYNtJKd-kSo-CTkGD5GgA1CyhcKzoKHFvtXoI9n_EOfxbOTuAhFL4pUYMYUndRGswzNfZKySu3Hr1FKK=w1185-h640-no" alt="installing cordova without internet connection" /></p>

<ul>
  <li>On <strong>Ubuntu</strong> use <code class="highlighter-rouge">sudo npm install -g cordova</code></li>
</ul>

<p>The <a href="http://askubuntu.com/q/183775/219603">terminal</a> will prompt for the <a href="http://www.linfo.org/root.html">root’s</a> password. The system takes care of the rest of the installation after <em>successfull</em> root authentication.</p>

<p>You can <a href="http://askubuntu.com/a/715639/219603">check the version of Cordova</a> after it is installed:</p>

<p><img src="https://lh3.googleusercontent.com/fPXmFD3vT4b46eb5R-w6343igxTkwCfjHHY_sIJ9PsTSnNAluFFm38-9HCN7NReR302AoDh769NIFIjDd7PEJdTQzcrk8miySHiCrL4fB1_3ys3wpetMpuflZsp0XJ5zK9CMtnrR4_ikt2Caa1i7c5Dod1voYs0gcvwi_Dlm_8Xl-HqDBLEEugH4G0mWz-O_wuijxFiR-UjxUZP5_wdyIZnA0eDQVM32eDKnE_THPPuKWLAvHIK2zluFS2Dg5DVgGO96RiKFJOeo7ZIm1BI_oDgrtdQJpoa4dN0tj4IVuErkkE2w5BEodyaSfYeJmp0Zj67KoEMGjyyYeuJ-5brmx_xsMI3RaQQrBVRLF5zDC8RvcP0-eSjD6v1SS3jbp5a-LWApOd86RqRXHIXWuyBdnfNVpMXrJVKQ4J3lYvBjJIaDRYY7rihDYITIlMQVP-zzKjojysALJZeTpuO-d4jNdehIkBVIrB52GRR6w92Fbf9WGji1cUIt6fpO9RWFtXybCH1g2IZM-jZ_3Z4W63k4Ee73jppec1RVe3YK2NMKgudjgv7ooFiUo7pO4x1sjlaaEHhE=w369-h142-no" alt="Cordova installed on Ubuntu" /></p>

<p>Done with Cordova setup.</p>

<p><a href="https://goo.gl/photos/dD32LQmkZn2dYE677">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/installing-cordova</wp:post_id>
        <wp:post_date>2016-01-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Installing node.js on Windows and Ubuntu]]></title>
        <link>http://xameeramir.github.io/install-node/</link>
        <pubDate>2016-01-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://nodejs.org/static/images/logos/nodejs-2560x1440.png" alt="node wallpaper" /></p>

<p><a href="https://nodejs.org/en/about/resources/">courtesy</a></p>

<p>To <a href="http://ionicframework.com/docs/guide/installation.html">get</a> the latest <a href="http://cordova.apache.org/">Apache conrdova</a>, one need to make sure that <a href="http://nodejs.org/">node.js</a> (and <a href="https://www.npmjs.com/">npm</a>) exists.</p>

<h1 id="installing-node-on-windows">Installing node on Windows</h1>

<p>Download the latest node.js from <a href="http://nodejs.org/">http://nodejs.org/</a></p>

<p>Follow the below steps after opening the downloaded setup file:</p>

<p>Let the installer compute required space.</p>

<p><img src="https://lh3.googleusercontent.com/D871Sl3LW38AiXBP95tJevQeHfWa8KrQ8OpSrlKI7riiv_SvQ2Nkp-ukaVn-eAHkYaYgMeRIrY5Hk2y-BzD2L41oLZT4_D7gPlMGDO7fttjQVNPFSgiTe12WDKgi4Tw3-FF24WMUaVhD0woSsec5Wop3_cbn9Qb1HI0Y8R1_lvabCuxDnAwlljWEpjmudVR0siOzuqJdcVNrg9J0RV1HzuE6Dfrqh_D7afhRyLERgAQtckK-37N_dpco5Isr3-47Q4V_Cx-ETSy2zC_ZwOqC9jnhNiI6hmqcrHtIDa4ZNotUPB7pJq1ZSfkYNtUjNtzQvYgz1XH0h4zmcUwwFu-Zsws-lHiniyfs52fz11fToKaC1_9S5cu3fe6QyuZ07E049vo3ZgDQl7e7U5gQ5tNba5jfOj0RBW4EzGGXsuivUz6AQlhdidoDEQJVaGLHt40nEpj3ZtBczQ1D-DJB91-JRrlKTrOLCLwU8Y84Dp46XA347LoFiuUYs3X-6o6XJ7uxo5Wj2dN_HSrHgUHk1_Phgu6_Ly219Pgv2umGCPZ_-pnR3JPgG_JG6KYDi49Xa0taGzJ3=w495-h387-no" alt="node installer compute required space" /></p>

<p>So, if we have required space:</p>

<p><img src="https://lh3.googleusercontent.com/Ah7Zxo_i9q-ppjTpl9ywkoq8ZTsvqUFLzPUHrXMjSdO0J6BHtCgBpjBS_mQP5nq42CbP0ZR7uMCW4FJbqAUrCvnxztp32MW5TOTiwGHm2d4QIyz4EwNSj7kWI4hEAOhZbbk_kSK6tH9xcYevd6Q7n0yCzlq5t9Seeu8au3DvOgnoR80dQjdNJagHWh_4_A3BVaAVTKnwkA9cL3OZlNYtjjxndoGoKBbLYqZXVIoS1sMABQTVXQcnapAFm2uxw2HTow3P65vQGCXa-DF1hqWgQUM3fEkjkwrquOyRY52ReRnVz-AMWemZc5y4_ZDMmrStXdS726uTC02DHiD_piEDwsTBpoMzgt8NqThkNqgonpo4RPq0CD1f6XtxCaW6zRH9aP9CN3BzEFiSxVeNOts7K08Ie06Ct1CBnp_k_pN7xreIhTCs0iCvzPM-W5yN6FcRU8k-TkYQfbJQyMAOLQjstFCm8sX0-dAQeWtLBin5uhy3mjBMs_OaIzTVtN9fUOQivSOBHiEx71vIDPodyTHzIZBhQMBXqk-ZWYH1ay6ZGq2rka0XIkFZAYcVNVHkkLO2FC1G=w495-h387-no" alt="Welcome screen node installation" /></p>

<p><img src="https://lh3.googleusercontent.com/tay-rBPOpSYM9nC5JiEX9UmviL3FkM5L2PF_mBh3vkwxCyepAsj3XqUHlL91yRVgTmc3h5b-Ds2fa7ft9tjYJWgdLjWmGlbgA84PVa2KtfXUVBdNAAEfyi4dbJll7JIXopLaeR6M-I3a4hDhNQBp5Q_HD1A3rEdyqkmJp4_l2rFwjUbHVeGLOqBWmApc0_BlAIM9z9jb6g-OyPzSXChEF110cJ-5nZvlWNC2zYHO0T99AdmRxjqOZCtQ5gBQzF17SgmAfSAIC8ezUUkbpPvppwwdgO-LzhjD9eyc9_VVOmMvFYx9ZgL2V9J4wZZ9F0PPvdRjQC_YxFWHe43Wpv5kGUPm4Xe6nXuER5xgmp9k0ohf1Lz0ytmeuQzmAuJs9P7TvPtPZ9vk2SaVhJLyCDrX0SvqxWFY_74mLBAge-V6r5ziv70PYZpkgp970UKCFOTQvU4yDiTIibcpFLjP9bFHq2bUHlGu07ISgZ1Q3uvWJcgZuo8lmXtU007NsZQvektI2JY6Gnibw3RAx_BCOJliGSqsOPfNZ7lojaa8xFsRbJHP0E3BRUnGEqFgxI5FC6XrFq3l=w495-h387-no" alt="node license" /></p>

<p>Select destination to install node</p>

<p><img src="https://lh3.googleusercontent.com/BGqX5RnVow315hY3iusYKlmJY_XsmQgE3NpbiRwjrikSkDNr_rV6I4Hpgg7zQCP4bUimY02V8DtLlONv02Ia9BFDVUSuqBLvr_hZViIa9F04MO_LZstf-AFk-I7qD83LeaWpzY-KGYskThnN7BAnasCY5dlxLeSG1xNuDGphVZbsKC3XxdaeuMrSbNa5L8PYP2ntEW2Gdzp_kNqSwdgpi2u7Hhk-icrakJtZkbxZvGeN237VC15bvMC0Gf1s5A4GPfXu_YiozMp6FCyGeXKpAkasyhx-iqo0UwNcBj9DKgr31ie-vKWmHD5C-F728FblHO3A7TpqLBPjpM_v6GBUt-mkJVz14s8N0CC-hrAjVRzB3mmDlODveI5GWZdVmRCHKeLcmxFwL68PgCWNtebdwH7QaNPAxo94FPUERaFaR_dPTkakEikjiMfuLuR59TESbI0-l6e1FqTr6J5KMwvJSaNV6c_gqd0foWFBD5IpOMelcLBL5kD7as65QvqBRrdfSANL7l85Wcj-UihBHtDOnCyzvD7PGCgDclGhJkZlwsT6hvg3V5xQFhydg9dE53bDVVyO=w495-h387-no" alt="Select destination to install node" /></p>

<p>Select which node components to install - this may be useful for server configuration</p>

<p><img src="https://lh3.googleusercontent.com/_c5qSIah0KkcFcOOR4fKgM6KgfRaJkrvEJGGFYtoqwC8XIUvr0EpmJ5UAQGU_L1OcBVEiwweXcAAQyju7a98hzKmDHJsnYi0s8KJStm1H8lVrMryUC6sqp0klpKCHUh3HXTjRLvamaX1WpQpbb8Tgxe2l6BfvR7E1pCvbJMC3IK5nrSIFnZCfcMAXtA1Cch1RkvMgzXUWepauQCvvJM4tutBuTvsSsbvb4D1dJlI7hMBJNRCNRwIMt1Hw7bXgeeP2IWYazWBdoLhmm0Nfc5O-ocMvtVCe3aJAs27-moP03P83udKFQnCztyvulHJWdnGRBIAlBlSdnBM6ICNlFHHOamO2i_dZnHlJLq8pPeiU6wswBPSmUeqkUFGQaZr95wtiuHmKrrOZ68bMb-T1Kz95LiT8ZZyKv3jeIOh3QYd8_KYNyaawharBn7T_wU9BM5FGiqcDUukyFTMvvWfdNMpuCq569siHdpVM3ypjdHqnx5g8DTu64wgazRi18_u6SbU28j--PlCZnKqdBUoWwSRGX3YrrinO4XY7cOuB2UUNS4CbFwFV3YpubQExYcvjw6-b3HF=w495-h387-no" alt="Select which node components to install" /></p>

<p><img src="https://lh3.googleusercontent.com/-XLacbhNmQJYBVuTU6vN1LdczMjraCLOWNegd92eT6hmakx7ZezdCl9-lqKWEJYA9FeiG6iWFUqqoIFlF3WN5LzdoiAzPtbSsk4JC6cckUtOKaenAhQMwsoNUPE1qpj0PEASRX3NXC5dgOkPIhuyCDPsBhKVk1xx9i2VnS41MXrUsDIZqBKyyoNP48O8Ak3h2dNHYhnXgR9-9DpmElgzPkWzajzmHlQM3xWSih_xgaarx9Hw-1ZbZWtmykz7v1YrZnVlRVxk93VPQsWYyzMAKQmBnhnVvtyQP88-CDzwkWQWhYuooj8lNz095Bhcj4IXiV0fZ1YXK8G0fx8Hk6fV3qoeNtJ9y6f6jwjEi6SN-b0AQ-6R9r051DjVcYuXMGn7wUzo81WMV8ti7RAy2tvc21PivTJa5fQke6EWNCShODYokcV_3oHyPm6hMAhWzUA_9gZxAjsxBngtAejKjkJs4M1HlMf0bomm0Z4ho49IxtTqM8jc3cHTnijw6sptxadkrs3VU4Cpb0Bui0cUZ08tyjBr85MU7ZFlCyA8RBqETrr4MR41Nug8PKelDvw_BnifdeRw=w495-h387-no" alt="Ready to install node" /></p>

<p><img src="https://lh3.googleusercontent.com/slI01xsjVCuSCkqV2P0XfV0BybwNMfxhcEQBvhWzq3b2MXswTrh5_bs6GUbrz7pyWy84pX2EqAztWsFJV4DZu7HRxIFUlItblVbaxaRDWaSfEyFJHSMOnHbkUNS7dinsWqQ1mVUkHxAzQgy9-mc9Sf1fiQLOuzJgu-nZjUjlCRw5XdXhQqdd_mtQemmsB-Yy_eVX7Q_OclSZMVqor0RTprCd6abd8XulbUQZ3WwCT-5bA5qHOS7miSZFfBHefTldQ-0KT6UdDF_RswJ337cN1JWq1b-XpWyHkOm0ZUQyO2RhF59Gz_3GUjcG_e7fldC_lHFTzenhNqwq_ZQMtrfDun5wo0WDjphWOTR2uzrlCC4lvkH6txWZRS5fHHDWTYW59Wnr7w0j0V3eq0z4b76WmXyLbcs7mAGEalREFZwhM4T4bKb5M3Mi_gZrn5uFimEFVD_RvoMlCAjRiTxt7UYGQeGC_eqx5Zhyb0JLOqCm_NS0au6NmmU2ab98WYQG6KEiHL4eyAUrXJRSao5VB2iPxAiHxunq51vtW6XFj2iPSFpWj0WahWI4ChwYlxI3f7ze522T=w495-h387-no" alt="installing node" /></p>

<p><img src="https://lh3.googleusercontent.com/hlb6-M3HwjCUNBIAWMJI1ZylqOiz9lNAUW1jXVLRCPysMw0_oYDLkDXaa64hqWS61dcPnoE7Z1X_-gilq0aywhwd7gZczBjZelGICTRS-cYrGs2oWTNW-1_b0IPFTsco7ErFmJHS6U1oFY9Go8_MsKqz7rlwPmJEsPBxMu58xikIeyoqVZ9SM7RRbM885mnBqngAESKzecc5wNPAV4hBMMF_DklrWXgV9ax-q0NcTSHWEKfgCcUGPj21e3JtdRpJ7YPJ-aSPxViEWK2Rsm2QbunUTgYCCyTuL_WRV7D65OkSnSDToU9JDX6ZoC9JmzxE6nVb-lEJ2ZDCMGDeCIBrJFiWyyTU1H-RsMtmM6KIBQV_AD0iYkqyvQasuPmSSaORZdvPLHPams6NdPJRilGPVCZHtn4XEgz7hnSRh_n_Rt-CnCw_kna8lv0WOwa6gfNsQ2Xg8YelppCXt6lgfF3HnCdRCUgrvlIOlOwOtXD3Aw4y9jK7AEOvTCtTHKjmpVXT_3INcgosNaS3b8piuTNJqbNkkFjei1BHf8j2qTaTBU9a7ACz_l30-1YKp4fxkU6T_SIX=w495-h387-no" alt="completed node installation" /></p>

<h1 id="installing-node-on-ubuntu">Installing node on Ubuntu</h1>

<p>There are various ways to install node on Ubuntu, one of them is <a href="https://thomashunter.name/blog/install-node-js-on-debian-6/">compiling and installing</a></p>

<p>Use the below commands one-line-after-the-other</p>

<pre>
<code>
$ sudo apt-get install build-essential
$ wget http://nodejs.org/dist/v0.8.16/node-v0.8.16.tar.gz
$ tar -xzf node-v0.8.16.tar.gz
$ cd node-v0.8.16/
$ ./configure
$ make
$ sudo make install
</code>
</pre>

<p>To verify the installation:</p>

<pre>
<code>
$ node -v
v0.8.16
$ npm -v
1.1.69
</code>
</pre>

<p><img src="https://lh3.googleusercontent.com/HdKLgoQCqNBSfYw2d4leCey5wDpy13hVNLaFl-lgSfzMspV6sqVDPDxIYlrziSooG-zr2_GNo9O4q1ODHriM_XBSXiAsxX2waA9lPmt191SOHXQP3zO--esmsXQXUR1mTCeMGQcQjL1bTlib8wdy-XmfV5Pn8nwmfPyNY3CkUY6QcXOZ6UBGX3gU9I93Ox0kXzIwXU9S94ZXkUu3M3agVxR2yek__I16-svrc6w9ysMzjpGw4qDp1qRQDCTChpfV3LfMJjtcSYnYt2lF3N_PGYrttmwt2AH6v2cFZRRQ0ti9EZNgkofk-8eMAKH3iPg5ISqFAarW24NyYPSYgDOwbpOfiG0YpL1FvJ5Hnx_9k5G-bDrPG1M4W7vZdsa_R4_1iDZdyx73COWDlfL6hf9IP6hnnQya8tp4IQ7L9sqXHH56UnnRmwUf1mup4ajcAzw1kejs5L3uQvSscwio-tT90zHeFFNYynWISiIRaHb4PU6-rToBdX_fxLcluWPzk_gCk7i4UosWxaiumXp1GeNW8D7qwNHgYyZcSplajLNIvb_f4dfhIcJyKVZhMKBBaVB_CMaF=w353-h162-no" alt="node install verification on Ubuntu" /></p>

<p>Yes, that’s it. Done with the task!</p>

<p><a href="https://goo.gl/photos/2tKMDYrptwJKJZFN8">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-node</wp:post_id>
        <wp:post_date>2016-01-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Setting up git on Windows and Ubuntu linux]]></title>
        <link>http://xameeramir.github.io/install-git-windows-ubuntu-linux/</link>
        <pubDate>2016-01-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://git-for-windows.github.io/img/git_logo.png" alt="git logo" /></p>

<p><a href="https://git-for-windows.github.io/">courtesy</a></p>

<p><a href="https://en.wikipedia.org/wiki/DevOps">DevOps</a> engineers who not only code but also take care of cofigurations know that <strong>system administration</strong> is <s>little</s> more <s>painful</s> than developing. I remember <a href="http://xameeramir.github.io/site-pre-requisites/">configuring an ASP.NET MVC 5 website</a> on a <a href="https://cloud.google.com/compute/">Google compute engine</a> instance running Windows server 2012 R2.</p>

<p>To avoid such pain, I prefer using <a href="http://atulgawande.com/book/the-checklist-manifesto/"><em>check-lists</em></a> and <a href="http://xameeramir.github.io/seo-cheat-sheet/"><em>cheatsheets</em></a>. One can refer back to them for later use.</p>

<p>This posts is a <a href="https://en.wikipedia.org/wiki/Wikipedia:Too_long;_didn't_read">very short</a> and intuitive guide for installing <a href="https://en.wikipedia.org/wiki/Git_(software)"><code class="highlighter-rouge">git</code></a> on <a href="https://en.wikipedia.org/wiki/Windows_10">Windows 10</a> and <a href="http://www.ubuntu.com/">Ubuntu</a> linux.</p>

<p>Yes, it’s in the direction of what I need to <a href="http://ionicframework.com/docs/guide/installation.html">do later</a>!</p>

<p><a href="www.google.com/?q=by the way">Btw</a>, <a href="http://ionicframework.com">Ionic</a> can be controlled from a <a href="https://en.wikipedia.org/wiki/Command-line_interface">CLI</a> on Windows. and there are 2 options to use from:</p>

<ul>
  <li><a href="http://sourceforge.net/projects/console/">Console2</a></li>
  <li><a href="http://git-scm.com/download/win">Git client</a></li>
</ul>

<h1 id="setting-up-git-and-ignoring-console2-on-windows">Setting up <code class="highlighter-rouge">git</code> (and ignoring Console2) on Windows</h1>

<p>Download the latest <code class="highlighter-rouge">git</code> client from http://git-scm.com/download/win</p>

<p>Open the downloaded setup file:</p>

<p><img src="https://lh3.googleusercontent.com/qLDgWzw1qHknFZbudjF2YOJNRbC7-EVTuBvjpQ_xqRhSKrvDS3jyVluEq6lED-_wDE5fy8Yu_kKDYXtStDINeispEZ7KOZ27_ndF_LHCeG4eySxSPjaAruRmBQDxuaIYwxtd1GROuNAuYWsiAnZpADykSFy0S1gAq8vCjothd4b3ebu-_k9IcjZUTutu3NV70BKzp1-YDHW9SZsEMu-SBZ4mzg4BIa93omH5VjQA8qJJP72a1_iumVGe0PhhEs5EtUo36sOxa455clPBcilDJR06nXfVQbmIstSkqeoWyKQG4WlU1KkWqNKO9o8brGjiaYSKE9xBKkcjZsEx8ifnrCW5pt09JwgBimN3ISJ8LS423rEgIug8mc9f0RcAT7KQIJo6E3N7qXFWNQK9Ea5CQAZn8uTv1icU3AZlRYjyuGzXFVziiDiawhsACIyCAA5ZYPRuNrxDm6bc6lWFuNqWes-V49cAUa2VfK3IKiDyTeJxhNMzEgZEohWbvg-SQCAiJd3x42TxUMARSLGMwK3Si0Io5QVmBkfAnz5jVV7W-BabutfdYanBQmvYboKZwCghEemH=w499-h387-no" alt="Open the downloaded git setup file" /></p>

<p><img src="https://lh3.googleusercontent.com/EZSNjRfWj4LgsS2CLQ4BWBUy_n6oc3gSteQt5KkEVsDFLNzO9rv1dMqJjet00Yaq-t-JiP4ngLAHC4hb7xETCuC9Z-DBekjYObLE5HcRZIfD4phHtVHScafmos2Tk0fZPRfYN1ndljYv45c8C8OVMpbTRcJD7a0ltl8126tiv-MdY_oGBL9_CC26ZiV2BkbQ0MHWhOApg_02B50LcKsica94JiGjbCfprynQkXo2Pm8IB3qWBdIiTXbYHqoAwaobgE3pbVvQNR3G9XZEUzeKeOopDzlQgV3tXpBvUikPaKwcq3zov0K4JerXPXH9v9ZiGAfQ7EAi-m88U9ZDD_PGRXdEjvubZKJahBnFaDhXSs15fGxB2pdti15I8fY4atftTbf4sFj68fKdYcA3rfAGRbbotHmuVih5eW8o9W0NP1FVMsKd2w_FXgQIgUtfIPvqA8xeSCztReqoZEg9sVz1iWthQl54MjJBR4NXjuKkMpheo9nIKRzbCiPCna2I02VbyyQ96cuvKkGnowGplRh5m6pSoY56Ki7MWULG0xxQX4EFB1Vu-Sm5-OFms2jnfsfMmwBc=w499-h387-no" alt="Read git license" /></p>

<p>On the <strong>3rd</strong> screen it asks whether the icons for launching points such as desktop shortcut and quick launch be provided or not.</p>

<p><img src="https://lh3.googleusercontent.com/Va4gwuf32K7QNUdGQbk8Nc8JtsqmwQlDgCYY4z0v85rLZDr9S0Y337_Jnv58nhY6tnWHkoTn8mNsntFYH4tW4B8w6ihrqHIu9_aP8Iq-vekP5nk8x7ZEt1zFE1nbTW5TUyCz4xpTHSzTesQVhjyftOi4qs2FSLsOgYF1xZmdB7WUFd4saWqUbttAVmlwqXyz0M8T_x_edxq1hNZASX2ZVX_HhqwzdWpJjE3xbk9wAk_aJqxBq2RjIxEw0Hu4r2W4iIb8Ldy2oupUN7cXYA_3M9ubEMk2nfZTJ7l_w9gnWtwcVl-prm55w7WZToL30DalieU1JNixKcsj8541jMdqQVsT7yIBBZnneohMtbQKp4vD-hAGp6WocKq0f0btoEdZ9xqtXUz23AmKd1Mus9zmGS3Pm7poCX5_D0K7z5awpBuFCMTsvS0ZHOrOganSFZBUAfNuo68K-i2RHyPk-c66WSoDLEq_6vKGedBTk1A_MfynC4bFL83GKy3BFG7M_NKdu4ZQ4HfUhEs7yTpj8_YUTNzpB6S358YwJR3N-I0_WQlRXmWNnO9egnwnDlklguTE5mjt=w499-h387-no" alt="Decide launching points for Git" /></p>

<p>In case of pre-configured contextualization, a warning will be shown:</p>

<p><img src="https://lh3.googleusercontent.com/s67uLCnvWm_F0Mvge44IgQmQ4hYRIBHWCdhd4BwZXaJxpq8NU-Jwdw1-waL6I9kIwqh5nCWlZaYMBQPPdR7qxUKma6dmcFaSqVbsmGpDyBri9GMeJvPDw7Usf9heGrzemTwRpMbPZWgY_6Lj--2fZhLL7FirGE3OrUZXHLyNqpARd0f63Rl6_t7OZ8w8hu6iT3y3Ks1HzXixJC489TwU2wLFk6Qkmm9L8MP-cL4AJLKPAz4vrQerYQiXAwJl8c57wRe1uHTBTnyhmDG4kOb_l7I3VTiRFhDEEzr_CLvx_JmXNsX25iP6Szuc8WNA2F5soR6UsrrgUP6QlhG9SdOwZ4r7X-cN68SfmIFelr043a07Dt1sQx957Ah-x_PYR6_rZtxt9pRhKVBrQwV9W7SkMAuGqIUSG6LLnR10rftrNco6Hz0X8_zqIDBDP96zirULLXM0UgDdHss5k2kaEi5ylAKnZ_K8jDCWSrEeAvxxcNdOLQpAXf9jPN85lciiarTN91axB6mShwo8sODXzFPam0wtmD8BNtZvMd5BH0M31QijtNc_W6aYBjrXQYz_xBVHE6kD=w482-h248-no" alt="Git pre-configured contextualization warning" /></p>

<p>As a windows user, it’s reasonable to use <code class="highlighter-rouge">git</code> from window’s command prompt.</p>

<p><img src="https://lh3.googleusercontent.com/HKia0z3dKQKdPWzLfwUWYQ2Ag42fLfufMH2Y4HFnZPbmbCmgyhd2u_dCIwYLzRcnX19LqeE7RSphveo-ASZNmMBKiZS7sAiUSVhTn44H8jkP4fjYE3haEjLjunIIZGdNIaeQQeP1eYipT_gADotzU8aAP2hAHmaNcrCBQQuUR4z4Aawott_W_4WB4qbITNl4AhhuagioXTX0-I7_UvKFXJzmkhV9BNEbDbTRTSzqoAhBdVKwbYbq_90qwlSox9uvwmtTcaurHYlYuKJVgAhCmlxL7HPeZKE2qaJ1i_eNyFw_f9C1tWUiiUCpFAUaZhgWRBS843uxx7XwkinbZcHVO0LXAzvyUsuGRHUG4bD6oXwOqauzXOj63fJorx8z68zCtditU4x-Q5DGvEAq7M1YyFLdOGS8zo7REtLMm83M6aWcJSr_YxauvZeaCagm3HP0RJxp44qR0FiLoqtjnuK16F-lQyCdeQhoe0rKh7zRVackURSgkb4gYtsngFz8DAWBIdBU00g2j7Es_bZyLlRYhbomsRqucOE-gC-7d8gKROWsQ12Tpu8FM7KCTv4TA6-WT9Rx=w499-h387-no" alt="git from window's command prompt" /></p>

<p>Decide <code class="highlighter-rouge">line endings</code> behaviour</p>

<p><img src="https://lh3.googleusercontent.com/4HHKogr9jm5DgWG753Rkbbf3xZZYCQSz70H3E8GtoziO-he9LBdYK5aaXU3i4nzILLXuZTr1g2PEDVJii9siLt0Xc4gH28-KdAMKm_9NnOCe17q8qfoaJayKrb4SbzgH63ol9gliKLKbP-5dhxnCbHQ6Fd4tkhuLPxJqQ4IO5HujXx3DAtGXo0yo4RcUa90NiDpW6ZC1xxPyCB92N0wdNlv2l-q2rtp3tWDtIaXwNePEKpd-ipRMaIFMpBpuaM1EmEbTHlUX6Z4qi0Xd3UVVVHjnunUJ5MxkmdyQUeRwD1d8pUGEzZkoYmsV34D_tj2c6INvWNLPgV7ON2WT4h3asWZimkue5hL5Ku_nBvXQM3dbv_w2mL7C3sQYw3BJgRcUcQWacDM23dFAZfvnKEtaKPdtCiPrH8RcraNY2Ub0kIdxxBbDtNzk5kFRPPIZZRvNOWYSWq3D7Vub9_W0WavO3DEQnWsvdQRjqU6JYiFti-ZNa8cXshsvImqayfXGUbM6oIIDEQwIaDQqqUshSSZCn1m8VONP-vy4nk2YdwFVNBL3PLFtTrjst7tjaxwwhFagFBUS=w499-h387-no" alt="Decide line endings behaviour" /></p>

<p><img src="https://lh3.googleusercontent.com/NHh5K01HYcXtuIokaotmhFOKjun28_9zwaWHUgjNsn7jC-68DbepzmvCVNH3VVbSbpRszyrh354OmHQCCwD2ZQNkDDVRj6-8F1Z0kec7DkbJeWgbOjwxlcY0gaNkdMkZZU9S4iUvVMZpWvQcbgwK5fXGjTIy0lk6delYGsAcDfxMeSP24LlCCw_HCvIRQCTF1p1ya8G15Je0h98_JnjMgcPviKD-5zII_zxYSs8FXyuudE0qr8oKa-5-wADHehUICHBR05kducR22BlMiJQj4xeRKjJhbfIs7WxIRx0pL_Xy3tm5i6EkvbW_ukuYUD0WPZHDdtyWBldI17MrETPfOFmK9NjBYMNQLz7qiDdG4RBF50uEYy9X6D04g2l_3bNa1V0sLvYBCSEfAQaD3edle9IaDWUI8qf7N6GxqIYzU80chOuLU2apc1-7eFKqRdbpOh2Sc8I8gWn5MbKadizR9MzxOdYgqUz6JIcdGiCDaj6_Znf90RZ038WrABpB074Ncnwt82dA2HfA8ozfoRr1S8Q40YWY3ikfQobMV8D-B-B8kB48ycEyMUWof4QtrlJpHuww=w499-h387-no" alt="Installing git" /></p>

<p><img src="https://lh3.googleusercontent.com/2lU1yAK2jZpLnDMbiBLjIAPT1e3Pzpilmbn5JZYyJd97Zj1Wz-spIIv06kW_fl0R2JHSDiYdeLXlb-Ly8quaPg36LWEEf_-TM7yG_JAtwEr5oruqVaYXA-gGXwPHRy9niPcpJ5_D_pX-U2pvgZImt6mtv8dWgn99QdpSZOEq25n83oJxcxmNtvbRlixd4Z-QFPT8iZPImxPLnwyVazYIMQpgWEdcEbTkJCpnKUXbDlN39euYlZyuQY5llhwKNAE3ItXde4yRLfi51DR6Z8RvANV6SNFmN6tycQACO9d-b81-vehRAIqqqJmbJqHzVpWpBHBVwD_nGkiZOtSauY8b23k2-877ZJq2WT_KiO4xkT7pj2fppYTUIS0689pPdBo1Q1g3H-XMEI8Z8d9gAssPOiCYjFP-dAhZe0STMwMAHc9fkE3ikwMhjiL_tgJwbDjkkmHb4YO8edGeHrMutYN-pr-5iuar70Y2snHHgTMMf9eMnvsbI1y0_2X8qh4i6AM40qKsmQowphR7oyxoW0UOzUCcriJdRQ8QmEeSnJIEVRdXa_dLT9YWOANZTNJ1CAgxUdHA=w499-h387-no" alt="Installing git completed" /></p>

<h1 id="setting-up-git-on-ubuntu-linux">Setting up <code class="highlighter-rouge">git</code> on Ubuntu linux</h1>

<p>Use <code class="highlighter-rouge">sudo apt-get install git</code> command and enter <strong>root</strong> password.</p>

<p>The system takes care of the installation after successfull authentication.</p>

<p>To check <code class="highlighter-rouge">git</code> version on Ubuntu</p>

<p><img src="https://lh3.googleusercontent.com/-KwT-1YDEYEo7QIAerj4XluxGiG1nTFnVSWf7CbavRr1GnP7wndcfdzAzWlepQQIDhfil_hR35cUYYNbQ8G7oRXHZ9Xtq_Rpz3q8-HerpXLtPKWtRLxshXpl57RDYE72Moao9nb9KJ58ChU4DFFhh1-ibIXmvDCy_LAoW_PyY_drmX5vC9spx1mrNBbBDsK2IpRkQM0R0gIw6vSQzHWe_mQFUW3T0Xwif-mqz6KQBeEKwGX4h81sIxTkykHgd2WvvLqp_fOwOOd4lmzXUoUFQw9PHY5k2R_rLvGpeImWrnB352Pzik_ggPeU90I2xE1tuIrjeaWtoZCr4GEFm1aoyCyu9vNBVH97W6fK9b-MoMCRX68luw12suXLibf4BmedBipdytqMTKVwT8VgQAr5LsV5oQ97alVDf2ClK4GccUV6mTiME4l9Hc1kEi7HG40W_HrEbzbsk_iwlmBKhcx_pdB_n7I35UgL8lqN59z9u1CEz5xPt6XraL-BiV_qRjzIICgiYFpqHxub70XyaNB8DXhMvukKF-XP8W6BtFFB5kQBhlPEW67KxdfzBLssABa34bOh=w478-h124-no" alt="Checking git version on Ubuntu" /></p>

<p>So, now things are ready for some <a href="https://try.github.io/"><code class="highlighter-rouge">git-init</code></a></p>

<p><a href="https://goo.gl/photos/9DymJoWNntaW85Ez7">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/install-git-windows-ubuntu-linux</wp:post_id>
        <wp:post_date>2016-01-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Setting Up Perfmon for SQL Server Tuning]]></title>
        <link>http://xameeramir.github.io/Setting-Up-Perfmon-for-SQL-Server-Tuning/</link>
        <pubDate>2016-01-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://cdn.geek.hr/znanost/wp-content/uploads/sites/14/2016/12/389983090.jpg" alt="Setting Up Perfmon for SQL Server Tuning" />
<a href="https://geek.hr/znanost/clanak/fibonaccijev-niz-u-prirodi/">courtesy</a></p>

<p>Performance Monitor, or Perfmon, measures performance statistics on a regular interval, and saves those stats in a file.</p>

<p>To set it up for SQL Server, do the below steps:</p>

<ul>
  <li>Open perfmon from the run</li>
  <li>Expand Data Collector Sets</li>
  <li>Right click <strong>User Defined</strong></li>
  <li>Click <strong>New</strong> -&gt; <strong>Data Collector Set</strong></li>
  <li>Give it a name</li>
  <li>Click Create manually</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/sbmD1ZIJ3FU3OfbH2JzdknCIHTT1UPFxSIfCsHy1ldZOf_QLpBe3ffmS-TAuf3kgwoJqop66r7MGBuBN0_-F63_RglNDkq8YRBE-feuX8N_RoOInYUFCbwjHkmzoMPOVpGNxv6xslF9ZD0jkzt51sKC9rcTyCM-acf0y0x3YSEOBo5OePkqkKFWCzRVRtF_TTsYWfAEPKXyjjKf1kIza43qBP4mvx7X3M9n0RHseJUyL9T10SL8U9FrwzOgeIClkzzI9pQgorBtY1gOTPId7xOcdIJbU7GsiMS14qIGxyHfidWHXeZ03u55wAlAVVxOCXmOkPgjY6RS6iEx_DeH4usNNXwEMtLFlxUABa0EIZM7oBfroGgI0Xparj8foCzAs4q9EBEZpctIFED-daWonE4z_HnCAXKIk-FvTEP3lz4IBR-yybBuvdoZ73pDdpGF-Q56MZLeQDow4v7f8PRTtwhEPcg3Khr54Ppc73t2iuWa3wGcefTEG4fyqMhXo0y8K7Yo6o-ZubICofVBgE6pFjLsD2J4x7eMqCJchA4HatDDZMme79RhK1oNp47-Q-7D3pWCrre7tI4f4JWdCt-HlyrAHPKpGHDM6bg5F_C51jrFEOlRSdwO-=w549-h424-no" alt="Manually create Data Collector Set" /></p>

<ul>
  <li>Click Next -&gt; Create data logs -&gt; Performance counter -&gt; Next</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/mJX1HdQqxAWIFixQJBnkkPZOvOWGzDQ6g4MnCiLVkMg9GuB2ZMVBdpOEiSZT6HkPzGor0bEC9Og1GrIoGteVdWOmXTPAL1YHP51PEWXYb4QN5TmlUUzaHECvvXBTFnDHGn46nFZ56MaG91nE7Wxipc9YwOda9oETXav26jQtSFS6WhJBeeer9zdt3jG_BqMl2hHApZSISrt5yMh6IOThnyrCEvnQyPZu_VCk4zXOy4NEQFeS53RTim1b5_IRMeTyi1V2_rN2gxqzqGMbR75Urf0DMYPAMWrt3nXsUG4K0UhfG1w0A6ImUW_9RP1hTiue7eC2zZpQPkUdAi83aejVKr7iJI7ojxMjroDcUm_jmOdEnkk6pb2KjERk_2-clC_GVciJZSqiUnfq37gBcTTTcMyGCQYG6p1utNA-PVNid7BGudj4zUUXx_05ifvfIMQtY34DKBl_Wr8Ru0WM_LWxttsI9UURlRTSYaDwVFgAkYk73xAU-MhwuoyD2tDpP1nkrAj2iaCEiUwnRSXoKscoZhuBrSys2faKWhI4hRJ5Oz1kG-lBdfEV4XlkUROPKbXJ0KrbjqAJ5YW9Xpm9tlGJdOyqxvTnwRz3q5tcfS3ywaCtD-u2cl4U=w549-h424-no" alt="Create performance counter" /></p>

<ul>
  <li>Click Add in the next screen</li>
</ul>

<p><img src="https://lh3.googleusercontent.com/JFLlop1dJZnneQeyMfT6Bqv4L24h5zO3owzYB7ye5PaozIRO5L-A7XQSO3q7o3HSxc8hasKXbft2rfWPQxvyaJvkcQUfaYbLw022PHbgM9i4TGzhhDrxB4aMv_Af9CKwwmX2ILsEWYOZv3OtdMSbXKbfgjogCMElxQk7CpQ2CwJdxj9VaE5MC7FoW98O-DhsXBmoFMwNIfcHGTciF__IjFs2VNa6lrMcRH95k5wtTtW5FDmHLsYqHxYZvqN-XKyGRJ0YPGKDwh7aXxlRohx3kvW-PoFvfCKfThxCKtCm52f3Kd-Gay5juvBsNqUiSelz_MA6CXdoyyJrJDcr6_9IUyoJrGNDOF0cBo-A_J0NOlNqPIV_g0zFrzaTQ075Ocz9c5mLLziUCOmjbBvM03dRAcG_FT2w4KB3MFFdHk28p7-_T41BaplCACr7Q3VMJy8PBor1xKj47OvoL62pOvRFRCa4A_R4dCYpFR6ijygHPFoGV21A2S2AzqovFUvUjPvot7nZND5yEVM2yjkVARJZ35icYxO70A8MjU37lJsJvHsGBYDyYoQlv8_ObgJfMGHm8j0RV1pZNWIs2em4lyp26i30YfbEFXGffPaMfYcx4IStXDtjE_jx=w549-h424-no" alt="Add performance counter" /></p>

<ul>
  <li>Add Available Bytes, Available MBytes, Page faults per second, Pages per second under Memory</li>
  <li>Add % disk time, Average disk second per read, Average disk second per write, Current disk queue length, disk bytes per second, disk transfer per second under Physical Disk</li>
  <li>% privileged Time, % processor time under Processor</li>
  <li>Add Freespace scans per second, Fullscan/sec  under SQL Server access methods</li>
  <li>Add buffer cache hit ratio, checkpoint pages/sec, free pages, lazy writes/sec, page life expectancy under SQL Server buffer manager</li>
  <li>Add user conections under SQL Server general statistics</li>
  <li>Add Total latch wait time under SQL Server latches</li>
  <li>Add Lock timeouts/sec, Lock wait time, number of deadlocks/sec under SQL Server locks</li>
  <li>Under SQL Server memory manager, add memory grants pending, targe server memory and total server memory</li>
  <li>Under SQL Server SQL statistics, add batch requests/sec, SQL compilations/sec, SQL re-compilations/sec</li>
  <li>Under System, add context switches/sec, processor queue length</li>
  <li>Click OK -&gt; Next -&gt; Next -&gt; Finish</li>
  <li>Right click this new collector set under User defined and choose start</li>
</ul>

<p>When one needs to see the report, stop this collector and open the collector file and view as report.</p>

<p><a href="https://www.youtube.com/watch?v=E7QIoHj1FeI">Source</a></p>

<p><a href="https://goo.gl/photos/Wt5gdCP11Y3AfyiX6">Photos</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/Setting-Up-Perfmon-for-SQL-Server-Tuning</wp:post_id>
        <wp:post_date>2016-01-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2016-01-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[SEO cheatsheet - using HTML5 document]]></title>
        <link>http://xameeramir.github.io/seo-cheat-sheet/</link>
        <pubDate>2015-12-28T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://eqvn.net/wp-content/uploads/2015/10/SEO.jpg" alt="SEO" /></p>

<p><a href="http://eqvn.net/nhung-loi-ich-co-ban-nhat-cho-doanh-nghiep-khi-lam-seo/">courtesy</a></p>

<p>Below is an example of <strong>good-enough</strong> <a href="http://www.w3.org/TR/html5/">HTML5</a> blog article template document.</p>

<iframe frameborder="0" style="top:0px; left:0px; bottom:0px; right:0px; width:100%; height:100vh; border:none; margin:0; padding:0; overflow:hidden;" src="//jsfiddle.net/nordible/0dthd7c4/embedded/result/" allowfullscreen="allowfullscreen"></iframe>

<p><a href="http://jsfiddle.net/nordible/0dthd7c4/">Source of this document</a></p>

<p><a href="http://www.tutorialspoint.com/seo/">Courtesy</a></p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/seo-cheat-sheet</wp:post_id>
        <wp:post_date>2015-12-28T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-12-28T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[C# code documentation]]></title>
        <link>http://xameeramir.github.io/vs-documentation/</link>
        <pubDate>2015-11-22T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.webpal.net/blog/wp-content/uploads/2011/11/clutter_cartoon_3.png" alt="Documentation please" /></p>

<p><a href="http://www.webpal.net/blog/tag/document-management-2/">courtesy</a></p>

<p>The golden rule of code documentation:</p>

<blockquote>
  <p>Try to document <a href="http://stackoverflow.com/a/4929769">why</a> (code design decisions) and avoid what (code design descriptions).</p>
</blockquote>

<p>To keep up with the increasing complexity of the project, it’s very important to document the coding decisions. It’s one of the best practices.</p>

<p><a href="https://www.visualstudio.com/">Visual studio</a> provides some elegant ways for code documentation to keep the code understandable. It can also understand the changes that one make on hard code.</p>

<h1 id="single-or-multi-line-comments">Single or multi line comments</h1>

<ul>
  <li>Short (or long) functional descriptions</li>
</ul>

<pre>
<code class="csharp">
	//single line comment
</code>
</pre>

<p>These are necessary to describe functionality in little.</p>

<pre>
  <code class="csharp">
	
	/*
	multiple
	line
	comments
	*/
	
</code>
</pre>

<p>Avoid them. It is advisable to avoid writing essays about code. The end product shall be code not their long descriptions.</p>

<h1 id="collapsible-regions">Collapsible regions</h1>

<ul>
  <li>Summary of the functional block</li>
</ul>

<pre>
  <code class="csharp">
	
	#region Some code block

	//some code here
    	//some foo bar
    	//Fizz Buzz
    	//some unicorns
    
	#endregion
    
</code>
</pre>

<p>Regions are collapsible. Just hover over the collapsed region and get a glance.</p>

<p><img src="http://i.imgur.com/wsEL9yo.png" alt="Glance in collapsed code" /></p>

<p><a href="http://imgur.com/">courtesy</a></p>

<h1 id="summary">Summary</h1>

<ul>
  <li>Summary of the function or property</li>
</ul>

<pre>
<code class="csharp">
	
	/// &lt;summary&gt;
        /// Summary description for the function or property goes here
        /// &lt;/summary&gt;
        
     </code>
</pre>

<p><img src="http://i.imgur.com/ksUWv5O.png" alt="summary method description" /></p>

<p><a href="http://imgur.com/">courtesy</a></p>

<ul>
  <li>Summary of the function parameter</li>
</ul>

<pre>
<code class="csharp">
        /// &lt;param name="TestParameter"&gt;Summary description for the parameter goes here&lt;/param&gt;
     </code>
</pre>

<p><img src="http://i.imgur.com/zwKtSLt.png" alt="parameter desc" /></p>

<p><a href="http://imgur.com/">courtesy</a></p>

<p>Visual studio changes this section after change of the parameter name.</p>

<p><img src="http://i.imgur.com/5RWuBMJ.png" alt="Change of parameters" /></p>

<p><a href="http://imgur.com/">courtesy</a></p>

<ul>
  <li>Summary of the returning stuff</li>
</ul>

<pre>
<code class="csharp">
	///&lt;returns&gt;Summary description for the function result goes here&lt;/returns&gt;
   </code>
</pre>

<p>A simple example:</p>

<pre>
<code class="csharp">

    /// &lt;summary&gt;
    /// Main class of the project
    /// &lt;/summary&gt;
    class Program
    {
        /// &lt;summary&gt;
        /// Main entry point of the program
        /// &lt;/summary&gt;
        /// &lt;param name="args"&gt;Command line args&lt;/param&gt;
        static void Main(string[] args)
        {
            //Do stuff
        }
    }
    
</code>
</pre>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/vs-documentation</wp:post_id>
        <wp:post_date>2015-11-22T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-11-22T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[break-even (point?)]]></title>
        <link>http://xameeramir.github.io/break-even/</link>
        <pubDate>2015-11-05T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://media02.hongkiat.com/calculate-breakeven-point/time-money-concept.jpg" alt="Break even" /></p>

<p><a href="http://www.hongkiat.com/blog/calculate-breakeven-point/">courtesy</a></p>

<p>Recently, I was just going through some documents. I saw something which caught my eyes. It was a word I never heard before (or maybe heard and forgot). Quickly a question came up.</p>

<blockquote>
  <p>What is this <a href="http://www.inc.com/guides/2010/12/how-to-perform-a-break-even-analysis.html">break-even</a> point?</p>
</blockquote>

<p>I spoke to one of <a href="http://www.nextservices.com/become-a-partner">our partner</a> <a href="https://www.linkedin.com/in/duttaarup">guy</a> about the same. From here onwards comes his words:</p>

<p>Let’s take a transaction example:</p>

<ul>
  <li>You bought goods for $90 - <strong>purchase</strong></li>
  <li>You sold goods for $100 - <strong>sale</strong></li>
  <li>You also paid $5 - <strong>miscellaneous cost such as tax, transport etc</strong></li>
</ul>

<p>Here, investment is $90 + $5 = $95
Profit per transaction is $5</p>

<p>Break even point is where you have recovered your investments and made zero profit.</p>

<p>After this point your actual revenue starts.</p>

<p>Now, how many iterations (let’s say <strong>X</strong>) one need to perform in order to recover that initial investment of $95 with $5 profit each time?</p>

<p>Here, it’s simple 19 iterations. ($5 multiply by  <strong>X</strong> = $95)</p>

<p>In this example, after 19 succesful iterations, one will reach to break-even point.</p>

<p class="casual">
It's important to understand these things along with knowing how to cook an omelette.
</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/break-even</wp:post_id>
        <wp:post_date>2015-11-05T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-11-05T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Digi marketing workshop]]></title>
        <link>http://xameeramir.github.io/digi-workshop/</link>
        <pubDate>2015-10-23T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.miragesearch.co.uk/wp-content/uploads/2015/07/Online-Marketing.png" alt="SEO" /></p>

<p><a href="http://www.miragesearch.co.uk/online-digital-marketing/">courtesy</a></p>

<p>Last sunday I attended a workshop for <a href="http://www.knowdigitalmarketing.com/">digital marketing and communication</a> strategies. The communication part was explained well, while I felt that digital marketing was a revision.</p>

<p>My take way was the few lines I heard:</p>

<ul>
  <li>Any app will not be installed and used if it is not of daily utility</li>
  <li>I will uninstall the shopping app (which offers discount) after I’m done.</li>
</ul>

<p>While I feel that 2nd line is a little difficult to judge upon. I have seen people just crazily surfing for shoes, apparels etc on shopping apps even after sale ended.</p>

<p>Nobody wants that crazy shiny app just to eat up (already short) memory.</p>

<p>In the communication part, we were given scenario of a meeting where a guy comes late for meetings and everyone has to wait.</p>

<p>The question was how do you deal with such an individual?</p>

<p>The answer:</p>

<ul>
  <li>Keep track of facts, facts cannot be denied (Since last 3 meetings, you’re late for 5,7,15 minutes one after the other)</li>
  <li>Take burden on yourself, you will not be called rude (since you’re late for 5 minutes, I have to wrap the introduction part in 5 minutes instead of 15 minutes)</li>
  <li>Ask for problems which the individual is facing (nobody is interested in hurting you by coming late for a meeting)</li>
  <li>Offer solutions (If this time is not fine, we can meet at everyone’s coolest time)</li>
</ul>

<p>Humans, they’re sense making species.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/digi-workshop</wp:post_id>
        <wp:post_date>2015-10-23T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-10-23T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Instamed API]]></title>
        <link>http://xameeramir.github.io/instamed-lollypop/</link>
        <pubDate>2015-10-16T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.seerinteractive.com/wp-content/uploads/2013/11/get-all-the-data-meme.jpg" alt="Get data" /></p>

<p><a href="http://www.seerinteractive.com/blog/how-to-avoid-google-analytics-data-sampling-using-excel/">courtesy</a></p>

<p>One of the worst thing one may really hate to do is mundane form filling. We have a few <a href="https://en.wikipedia.org/wiki/Legacy_system">old projects</a> who really do just that. For a healthcare provider or a medical billing company, your staff is probably doing some manual <a href="http://www.google.com/search?q=insurance+eligibility+verification">eligibility verification</a>. This is unfortunately too much business cost and effort.</p>

<p>Recently I found that <a href="http://www.instamed.com/">Instamed</a> - a healthcare payment solution provider can fill the void. Yeah, I’m looking at <a href="http://developers.instamed.com/">that API lollypop</a>.</p>

<p>Apart from <a href="http://developers.instamed.com/eligibility-solution/">eligibility</a>, they also do <a href="http://developers.instamed.com/collect-premiums/">payment collection</a>, <a href="http://developers.instamed.com/ecommerce-payments/">ecom</a>, <a href="http://developers.instamed.com/merchant-payments/">merchant</a> and <a href="http://developers.instamed.com/embed-member-payments/">member payments</a>.</p>

<p>As a dev, you can embed their solutions in your own app. The only problem which I saw was unavailability of a free tier.</p>

<p>If you’re already a healthcare company using their solutions and (obviously) paying for it. Having an API integrated will make you brag more in parties. You don’t need to be worried about that maintenance and regressions.</p>

<p><a href="http://www.nextservices.com/">Here</a>, this looks really relevant.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/instamed-lollypop</wp:post_id>
        <wp:post_date>2015-10-16T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-10-16T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Getting mobile first]]></title>
        <link>http://xameeramir.github.io/experimenting-ionic/</link>
        <pubDate>2015-10-13T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><a href="http://memegenerator.net/instance/55313941"><img src="http://cdn.meme.am/instances/55313941.jpg" alt="Mobile" /></a></p>

<p>Since a very long time I was thinking about the problem for users to adopt any software. I’m feeling that mobile is taking large part of the user base. <a href="http://www.forbes.com/sites/dougolenick/2015/05/27/apple-ios-and-google-android-smartphone-market-share-flattening-idc/">Android</a>’s future is looking promising.</p>

<p>In my current day job, I bulid projects on desktop and web. I’m finding mobile as more of a long running horse.</p>

<p>I’m thinking of <a href="http://ionicframework.com/">hybrid mobile apps</a> as my preferred choice. This will completely be a <a href="http://stackoverflow.com/questions/33152154/is-ionic-framework-free">new experience</a>.</p>

<p>Even <a href="https://news.microsoft.com/2014/03/27/satya-nadella-mobile-first-cloud-first-press-briefing/">Satya</a> agrees.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/experimenting-ionic</wp:post_id>
        <wp:post_date>2015-10-13T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-10-13T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[The departure from &beta;]]></title>
        <link>http://xameeramir.github.io/bye-bye-beta/</link>
        <pubDate>2015-10-07T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p>If a software seems to be stable, it’s still wise to keep that <em>careful</em> <strong><em>β</em></strong> <em>symbol</em>.</p>

<p>The only way to decide things is <strong>by doing</strong>.</p>

<p><img src="https://i.imgflip.com/892wd.jpg" alt="Stupidity astrology" /></p>

<p><a href="https://imgflip.com/tag/astrology">courtesy</a></p>

<p>I feel that if a software can address users’ problems it is worth. Give the software as a toy in user’s hands. If <strong>(and only if)</strong> they start playing with it, it’s really cool. Some kids like to break toys also.</p>

<blockquote>
  <p>Sometimes, it’s better to try and fail then to never try.</p>
</blockquote>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/bye-bye-beta</wp:post_id>
        <wp:post_date>2015-10-07T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-10-07T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Hello no-no plesk]]></title>
        <link>http://xameeramir.github.io/plesk-no-no/</link>
        <pubDate>2015-10-02T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p>It was recently that I went too much into <a href="/launch-pre-requisites/">server</a> and database administration for hosting <a href="https://cloud.google.com/launcher/solution/click-to-deploy-images/aspnet">ASP.NET on  cloud</a>.</p>

<p>I spent a lot of time maintaining than building. Now, I’m trying to get my hands dirty with <a href="http://www.odin.com/products/plesk/">plesk</a>.</p>

<p>Hosting providers provide plesk as a packaged tool with (usually shared) hosting plans. Plesk helps you manage hosting of your ASP.NET website - as far as what I have seen.</p>

<p>Shared hosting reduces site costs by <strong>10x</strong> - the actual benefit of choosing it.</p>

<p>At the same time, you lose that tight control offered by cloudy options. Easiness of scalability etcetra.</p>

<p>Overall, I didn’t found it so imprerssive.</p>

<p><img src="http://cdn.meme.am/instances/40967961.jpg" alt="Administration" /></p>

<p><a href="http://memegenerator.net/instance/40967961">courtesy</a></p>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/plesk-no-no</wp:post_id>
        <wp:post_date>2015-10-02T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-10-02T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[site launch pre-requisites]]></title>
        <link>http://xameeramir.github.io/site-pre-requisites/</link>
        <pubDate>2015-09-23T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://blogs.sch.gr/news/files/2015/07/collaboration.png" alt="To do" /></p>

<p><a href="http://blogs.sch.gr/news/archives/390">courtesy</a></p>

<p>I’m writing this post to jot down all the things I need to do during <a href="http://cloud.google.com/">cloudy</a> ASP.NET website deployments.</p>

<ul>
  <li>Get the <a href="http://dev.mysql.com/downloads/connector/net">database connector</a></li>
  <li><strong>Re-<em>Publish</em></strong> project</li>
  <li>Grab that awesome <a href="http://stackoverflow.com/a/25317499/2404470">URL rewrite module</a></li>
  <li>Set <a href="http://stackoverflow.com/a/18621550/2404470">IIS_IUSRS</a> and <a href="http://stackoverflow.com/a/7334485/2404470">app pool</a> free</li>
  <li>Check that your application pool refers to correct version of .NET</li>
  <li>Get <a href="https://in.godaddy.com/help/request-an-ssl-certificate-562">re-certified</a> - obviously it’s a new server, right?</li>
  <li><a href="http://windows.microsoft.com/en-us/windows/import-export-certificates-private-keys#1TC=windows-7">Import</a> and <a href="https://in.godaddy.com/help/installing-an-ssl-certificate-in-microsoft-iis-5-and-6-4875">install</a> certificate</li>
  <li>Import the same in <a href="https://www.godaddy.com/help/installing-an-ssl-certificate-in-microsoft-iis-8-4951">IIS</a></li>
</ul>

]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/site-pre-requisites</wp:post_id>
        <wp:post_date>2015-09-23T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-09-23T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Cloudy conference]]></title>
        <link>http://xameeramir.github.io/google-cloud-conf/</link>
        <pubDate>2015-07-23T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://pbs.twimg.com/media/CKWlYRmUMAACNtA.png" alt="conference" /></p>

<p><a href="https://twitter.com/GoogleforWork/status/623085960176103425">courtesy</a></p>

<p>I recently visited a cloud conference sponsored by <a href="https://twitter.com/GoogleforWork/status/623085960176103425">Google</a>. Disruptive startups like <a href="http://freshdesk.com">Freshdesk</a> were also featured. I initially thought that the company is a small call center kind of firm. I found myself wronged when I heard they <a href="http://blog.1click.io/1click-joins-freshdesk/">acquired</a> <a href="https://1click.io/">1click</a> while they’re still raising <a href="http://www.forbes.com/sites/alexkonrad/2015/04/20/freshdesk-raises-fresh-50-million/">funds</a>.</p>

<p>This attendance helped me take first steps in cloud technologies.</p>

<p>A lot of things came up and one line which I still remember is:</p>

<blockquote>
  <p>People do not buy technology, they buy what it does for them</p>
</blockquote>

<p>We were shown how cloud technologies can help reduce on premise cost and resources.</p>

<ul>
  <li>You can create and destroy instances in minutes</li>
  <li>Take entire control of your IT infrastructure in your own hands</li>
  <li>Pause instances to avoid unbearable bills</li>
  <li>Pay as you go</li>
  <li>Get backup and security of your data and apps</li>
  <li>And many more</li>
</ul>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/google-cloud-conf</wp:post_id>
        <wp:post_date>2015-07-23T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-07-23T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Here you come - choosing a blog platform]]></title>
        <link>http://xameeramir.github.io/starting-a-blog/</link>
        <pubDate>2015-07-07T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.girliemac.com/assets/images/articles/2013/12/jekyll.png" alt="Jekyll" /></p>

<p><a href="http://www.girliemac.com/blog/2013/12/27/wordpress-to-jekyll/">courtesy</a></p>

<p>Anyone there? So, here you are… Yes talking to you!</p>

<p>Since many days I was thinking to setup a platform to share our thoughts and ask for advice about what I do.</p>

<p>I thought about <a href="https://wordpress.com/">wordpress</a>, <a href="https://ghost.org/">ghost</a> and <a href="https://www.tumblr.com/">tumblr</a>. We loved tumblr for some <em>pew pew</em> reason.</p>

<p>This blog is written using <a href="http://jekyllrb.com/">jekyll</a>, which was never in my mind. It offers quite simple ways to get our blog <a href="http://www.smashingmagazine.com/2014/08/01/build-blog-jekyll-github-pages/">up and ready</a>. Yes, it doesn’t make us feel <em>pew pew</em> but it’s nice enough to get our job done.</p>

<p>It’s blog aware and tweakable for accomodating features such as pagination. Jekyll runs on <a href="https://pages.github.com/">Github servers</a> so it can easily take care of high volume of traffic.</p>

<p>Helps you take care of SEO by giving <a href="http://xameeramir.github.io/sitemap.xml">sitemaps</a>.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/starting-a-blog</wp:post_id>
        <wp:post_date>2015-07-07T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-07-07T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[proudly iNexter]]></title>
        <link>http://xameeramir.github.io/inext/</link>
        <pubDate>2015-04-08T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://media.licdn.com/mpr/mpr/jc/AAEAAQAAAAAAAAN-AAAAJGJlNjFhZjc4LWNkYmQtNDI5Yy1iZDMxLWRjYWVhYTgyMWI3Mg.jpg" alt="next" /></p>

<p><a href="https://www.linkedin.com/pulse/nextservices-great-place-work-zameer-ansari">courtesy</a></p>

<p>“A great place to work” - whenever I hear this phrase, one name comes to my mind. The place of fun, knowledge and the place to do what you love. Surely - <a href="http://www.nextservices.com/">NextServices</a>. In one of the non trivial meetings, I heard <a href="https://www.linkedin.com/in/suthrum">someone</a> saying -</p>

<blockquote>
  <p>What we are learning here - collectively as an org is going to be more and more relevant for what you can do in your life.</p>
</blockquote>

<p><strong>The place to have fun</strong></p>

<p>I don’t know how this harmony is maintained in our corporate house amidst <a href="https://www.google.co.in/maps/place/Mindspace,+Malad+West,+Mumbai,+Maharashtra/@19.183452,72.832431,16z/data=!3m1!4b1!4m2!3m1!1s0x3be7b6f20d58fb8d:0x96111c9adf8e84ca">Mind space</a>. The fun activities we perform add more bounce to what we do.</p>

<p>These fun activities are especially an opportunity for re-opening arms. An opportunity to do something unusual. To become a kid again :D</p>

<p><strong>The technology forced org</strong></p>

<p>The way we have leveraged the technology is amazing. Letting people do more work through automations. Having an in-house <a href="https://enkiworld.com/newenki/portal/index.php">certified EHR</a>, available across platforms does proves what we call ourselves - a technology forced org!</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/inext</wp:post_id>
        <wp:post_date>2015-04-08T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-04-08T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Reasons of stress]]></title>
        <link>http://xameeramir.github.io/reasons-of-stress/</link>
        <pubDate>2015-03-25T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://media.licdn.com/mpr/mpr/jc/AAEAAQAAAAAAAALzAAAAJGIxMzdlNDVhLTdjNGUtNDZjYS1iNzdlLWM5ZDBkYTMxYjU2ZQ.jpg" alt="stress" /></p>

<p><a href="https://www.linkedin.com/pulse/reasons-stress-zameer-ansari">courtesy</a></p>

<ul>
  <li>Ideas without action</li>
  <li>Procrastination</li>
  <li>Lack of communication</li>
  <li>Inferiority complex</li>
  <li>Lamenting on past</li>
  <li>Lack of inner confidence</li>
</ul>

<p>**Just another life study - a quick list of things to always avoid.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/reasons-of-stress</wp:post_id>
        <wp:post_date>2015-03-25T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-03-25T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Lessons learned as a class rep]]></title>
        <link>http://xameeramir.github.io/leadership-lessons/</link>
        <pubDate>2015-03-04T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="https://media.licdn.com/mpr/mpr/jc/AAEAAQAAAAAAAAOeAAAAJGVlZjk5NmMyLTM2NWEtNDliZi04N2Y5LTAwYjUxYjBkZDQ1Yg.jpg" alt="leadership" /></p>

<p><a href="https://www.linkedin.com/pulse/few-leadership-lessons-zameer-ansari">courtesy</a></p>

<h1 id="always-look-at-the-big-picture">Always look at the big picture</h1>
<p>I read somewhere - when you love it, set it free. If it is yours, it will come back else it was never yours. This isn’t true for your dreams. The dreams are kind of self responsibility which cannot be compromised. A responsibility to achieve. It requires courage and determination to go with your dreams. A dream is achieved after a long struggle - that one tear when you see the finish line. So be brave and never quit!</p>

<p>Do things which support the big vision. One of my fellow told me - big goals are difficult. Do one thing. Every day just do one very small task in the direction of your vision. The theory behind - we may not cut a mountain in one piece, cut it in pieces.</p>

<h1 id="maintain-the-balance">Maintain the balance</h1>
<p>Everything needs to be properly balanced. When you focus too much on one thing, you lose share in other areas. When you are holding several guns, shoot all of them at least one shot each - one by one.</p>

<p>A few text read during graduation:</p>

<p>The key to substantial improvement is a balanced attack across several interrelated dimensions.</p>

<blockquote>
  <p>The best administrators are those who strike the right balance between maximum productivity and maximum safety.</p>
</blockquote>

<p>In one of the sessions, the speaker asked - “Can we let it go for the sake of harmony?”. So we don’t hold on always, yes we don’t…</p>

<p>I see this as the rule of maintaining balance - when you lose something, you gain something else but when you sacrifice - you don’t lose anything. Here I’m trying to emphasize the importance of taking risks (in the form of committing to sacrifices).</p>

<h1 id="be-a-visionary-executive">Be a visionary executive</h1>
<p>Most important - be a visionary. Make long term win-win strategies. The coolest task is to make them happen. So why don’t I brag less and do more.</p>

<h1 id="be-confirmed">Be confirmed</h1>
<p>One of the most important lessons learned so far is that we can always be wrong. What we see, hear or speak and whatever we understand can be wrong. So be very careful and confirmed. Keep doing research. Keep learning. Keep asking. Keep knowing.</p>

<p>A cool guide is knowledgeable and without doubts.</p>

<h1 id="be-always-true-no-worries-if-you-are">Be always true, no worries if you are</h1>
<p>Even if we keep things to us with a good intention and work over it. Also we know that it won’t hurt anyone, still we might be wrong. You are not necessarily need to become a saint to be true, so do not worry too much.</p>

<p>One of my mentors told me - when things looks so complex, just do your best and leave the rest.</p>

<h1 id="emotional-disturbance-is-not-allowed">Emotional disturbance is not allowed</h1>
<p>In life, we go through many situations. Some make us smile, some bring tears to us. When we have lost something so important, we feel a little frustrated. Even so wise can lose control. Spoiling relations and themselves. A lost soul will only kill itself and others around</p>

<p>It’s great to move with love. It’s good to move with support. It is easy to move in opposition and when there is hate - you become more humble.</p>

<blockquote>
  <p>Because sometimes what matters most is not what you have gained but what you have lost…</p>
</blockquote>

<p>The statement may be very confusing. I wanted to keep it that way only.</p>

<p>Feelings are what makes us human but emotional disturbance make you look creep. Never intermix too much personal life in work and too much professionalism in relations.</p>

<p>At the same time emotions are what makes a leader look human - being able to understand his people. An unbiased mind is a powerful tool for making decisions and taking actions.</p>

<h1 id="you-have-to-stand-strong">You have to stand strong</h1>
<p>When something stop working, it is thrown in waste. We certainly cannot keep lamenting for whatsoever reason. Sometimes recovery is very urgent. The most important thing is to keep learning and moving. Everyday we are meant to become better than our past, not others. Feedback from your people can help.</p>

<p>When you look weak, people behind lose their faith. If you ask people to join you, you have to anyways look integrated. If not, then go out of the ring.</p>

<h1 id="understand-different-kind-of-people">Understand different kind of people</h1>
<p>Someone love something but there is someone who hate it. We need to put ourselves in their shoes. We need to become blind for our own selves and see from their eyes. Sometimes you have to take tough decisions and your people may oppose it. The greatest adventure is to merge all objectives in one direction, keeping win-win for everyone.</p>

<p>People need someone to listen them, not to make them listen. When you listen, you say them:</p>

<blockquote>
  <p>“Hey! I’m listening you. You are important to me and I’m humble towards you!”</p>
</blockquote>

<p>Having a soft tone is sometimes better than having a sharp brain. A sharp mind and interested ears enhance your abilities to learn people. The best way to be with your team is to understand them. Give them what they like. Ask a few questions to make them feel that they are being given importance. This requires intuition and empathy. The cores of a powerful communication strategy.</p>

<p>The most distinguishing factor - take risks, initiatives and their responsibility. This require you to always keep your own self behind your duties. You will automatically be pushed forward- just wait and see it happening.</p>

<p>The best revenge is to forgive. Collaboration and cooperation add plus to it. Forgive people if they fall weak, because you need them. If you are a leader, that’s because of the people who follow you. Position can make a manager, but never a leader.</p>

<p>Go polite with with your group. Admit mistakes and quickly correct them. If bending a little helps a big vision, break your icy ego.</p>

<h1 id="invest-in-relationships">Invest in relationships</h1>
<p>What if you reach where you want. Is it worth alone? Really not! I remember, when my colleagues at Next Services helped me raise funds to pay my educational expenses. The trust factor is very important. So, take time and effort to build your relations.</p>

<p class="casual">
*** Exposure is one of the best teachers. Like any skill, leadership skills cannot be learned by reading or writing. The best way to learn it is to... just do it. Above is a series of lessons I learned as the class rep at NMIMS, MU and AUHS. I'll keep updating this list as and when I go back in flashback. This role helped me transform myself in many ways - both professionally as well as personally.
</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/leadership-lessons</wp:post_id>
        <wp:post_date>2015-03-04T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-03-04T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
      <item>
        <title><![CDATA[Hello world!]]></title>
        <link>http://xameeramir.github.io/hello-world/</link>
        <pubDate>2015-02-01T00:00:00+00:00</pubDate>
        <dc:creator></dc:creator>
        <guid/>
        <description></description>
        <content:encoded><![CDATA[<p><img src="http://www.espni.co.uk/wp-content/uploads/2015/11/Hello-World-1024x576.png" alt="hello" /></p>

<p><a href="http://www.espni.co.uk/hello-world/">courtesy</a></p>

<p>This is <a href="http://stackoverflow.com/cv/xameeramir">Zameer</a> from <a href="http://www.incredibleindia.org/travel/destination/mumbai/mumbai-introduction">India’s financial capital</a>. I have graduated in IT from <a href="http://mu.ac.in">Mumbai University</a>. I believe that by <em>doing yourself</em> and by interacting with other people, one can learn a lot.</p>

<p><a href="https://www.gravatar.com/avatar/0964ab778245068b9d910764125004c9">Here</a> is my <a href="https://gravatar.com/">avatar</a></p>

<p>I’m a continuous learner with a <strong>go do it</strong> attitude. Developing others help me learn &amp; grow more. I listen carefully, <a href="http://stackexchange.com/users/2795104/student">ask questions</a> and collaborate closely with different kind of people. I prefer <a href="http://techcrunch.com/">staying up to date with the industry</a>, reading a lot of <a href="http://blog.codinghorror.com/"><em>technical</em></a> and <a href="https://www.themuse.com/">formal</a> articles, contribute to the <a href="https://news.ycombinator.com/">community</a>, <a href="http://xameeramir.github.io/">stay mission focused</a>, <a href="http://jsfiddle.net/nordible/mLgkb8d9/embedded/result/#Result">time bound</a>, physically fit and mentally calm.</p>
]]></content:encoded>
        <excerpt:encoded><![CDATA[]]></excerpt:encoded>
        <wp:post_id>/hello-world</wp:post_id>
        <wp:post_date>2015-02-01T00:00:00+00:00</wp:post_date>
        <wp:post_date_gmt>2015-02-01T00:00:00+00:00</wp:post_date_gmt>
        <wp:post_name/>

        
        
          <category domain="post_tag" nicename=""><![CDATA[[]]]></category>
        

        <wp:status>publish</wp:status>
        <wp:post_parent>0</wp:post_parent>
        <wp:menu_order>0</wp:menu_order>
        <wp:post_type>post</wp:post_type>
        <wp:post_password/>
        <wp:is_sticky/>
      </item>
    
  </channel>
</rss>
